{"version":3,"sources":["../../../src/blockly/blocks/loops.js"],"names":["goog","provide","require","Blockly","Constants","Loops","HUE","defineBlocksWithJsonArray","WHILE_UNTIL_TOOLTIPS","Extensions","register","buildTooltipForDropdown","BREAK_CONTINUE_TOOLTIPS","CUSTOM_CONTEXT_MENU_CREATE_VARIABLES_GET_MIXIN","customContextMenu","options","isInFlyout","variable","getField","getVariable","varName","name","isCollapsed","option","enabled","text","Msg","replace","xmlField","Variables","generateVariableFieldDom","xmlBlock","utils","xml","createElement","setAttribute","appendChild","callback","ContextMenu","callbackFactory","push","registerMixin","buildTooltipWithFieldText","CONTROL_FLOW_IN_LOOP_CHECK_MIXIN","LOOP_TYPES","suppressPrefixSuffix","getSurroundLoop","block","indexOf","type","getSurroundParent","onchange","e","workspace","isDragging","Events","BLOCK_MOVE","blockId","id","setWarningText","group","getGroup","setGroup","setEnabled"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Loop blocks for Blockly.\n *\n * This file is scraped to extract a .json file of block definitions. The array\n * passed to defineBlocksWithJsonArray(..) must be strict JSON: double quotes\n * only, no outside references, no functions, no trailing commas, etc. The one\n * exception is end-of-line comments, which the scraper will remove.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Blocks.loops');  // Deprecated\ngoog.provide('Blockly.Constants.Loops');\n\ngoog.require('Blockly');\ngoog.require('Blockly.Blocks');\ngoog.require('Blockly.FieldDropdown');\ngoog.require('Blockly.FieldLabel');\ngoog.require('Blockly.FieldNumber');\ngoog.require('Blockly.FieldVariable');\ngoog.require('Blockly.Warning');\n\n\n/**\n * Unused constant for the common HSV hue for all blocks in this category.\n * @deprecated Use Blockly.Msg['LOOPS_HUE']. (2018 April 5)\n */\nBlockly.Constants.Loops.HUE = 120;\n\nBlockly.defineBlocksWithJsonArray([  // BEGIN JSON EXTRACT\n  // Block for repeat n times (external number).\n  {\n    \"type\": \"controls_repeat_ext\",\n    \"message0\": \"%{BKY_CONTROLS_REPEAT_TITLE}\",\n    \"args0\": [{\n      \"type\": \"input_value\",\n      \"name\": \"TIMES\",\n      \"check\": \"Number\"\n    }],\n    \"message1\": \"%{BKY_CONTROLS_REPEAT_INPUT_DO} %1\",\n    \"args1\": [{\n      \"type\": \"input_statement\",\n      \"name\": \"DO\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"loop_blocks\",\n    \"tooltip\": \"%{BKY_CONTROLS_REPEAT_TOOLTIP}\",\n    \"helpUrl\": \"%{BKY_CONTROLS_REPEAT_HELPURL}\"\n  },\n  // Block for repeat n times (internal number).\n  // The 'controls_repeat_ext' block is preferred as it is more flexible.\n  {\n    \"type\": \"controls_repeat\",\n    \"message0\": \"%{BKY_CONTROLS_REPEAT_TITLE}\",\n    \"args0\": [{\n      \"type\": \"field_number\",\n      \"name\": \"TIMES\",\n      \"value\": 10,\n      \"min\": 0,\n      \"precision\": 1\n    }],\n    \"message1\": \"%{BKY_CONTROLS_REPEAT_INPUT_DO} %1\",\n    \"args1\": [{\n      \"type\": \"input_statement\",\n      \"name\": \"DO\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"loop_blocks\",\n    \"tooltip\": \"%{BKY_CONTROLS_REPEAT_TOOLTIP}\",\n    \"helpUrl\": \"%{BKY_CONTROLS_REPEAT_HELPURL}\"\n  },\n  // Block for 'do while/until' loop.\n  {\n    \"type\": \"controls_whileUntil\",\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n      {\n        \"type\": \"field_dropdown\",\n        \"name\": \"MODE\",\n        \"options\": [\n          [\"%{BKY_CONTROLS_WHILEUNTIL_OPERATOR_WHILE}\", \"WHILE\"],\n          [\"%{BKY_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL}\", \"UNTIL\"]\n        ]\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"BOOL\",\n        \"check\": \"Boolean\"\n      }\n    ],\n    \"message1\": \"%{BKY_CONTROLS_REPEAT_INPUT_DO} %1\",\n    \"args1\": [{\n      \"type\": \"input_statement\",\n      \"name\": \"DO\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"loop_blocks\",\n    \"helpUrl\": \"%{BKY_CONTROLS_WHILEUNTIL_HELPURL}\",\n    \"extensions\": [\"controls_whileUntil_tooltip\"]\n  },\n  // Block for 'for' loop.\n  {\n    \"type\": \"controls_for\",\n    \"message0\": \"%{BKY_CONTROLS_FOR_TITLE}\",\n    \"args0\": [\n      {\n        \"type\": \"field_variable\",\n        \"name\": \"VAR\",\n        \"variable\": null\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"FROM\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"TO\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"BY\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      }\n    ],\n    \"message1\": \"%{BKY_CONTROLS_REPEAT_INPUT_DO} %1\",\n    \"args1\": [{\n      \"type\": \"input_statement\",\n      \"name\": \"DO\"\n    }],\n    \"inputsInline\": true,\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"loop_blocks\",\n    \"helpUrl\": \"%{BKY_CONTROLS_FOR_HELPURL}\",\n    \"extensions\": [\n      \"contextMenu_newGetVariableBlock\",\n      \"controls_for_tooltip\"\n    ]\n  },\n  // Block for 'for each' loop.\n  {\n    \"type\": \"controls_forEach\",\n    \"message0\": \"%{BKY_CONTROLS_FOREACH_TITLE}\",\n    \"args0\": [\n      {\n        \"type\": \"field_variable\",\n        \"name\": \"VAR\",\n        \"variable\": null\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"LIST\",\n        \"check\": \"Array\"\n      }\n    ],\n    \"message1\": \"%{BKY_CONTROLS_REPEAT_INPUT_DO} %1\",\n    \"args1\": [{\n      \"type\": \"input_statement\",\n      \"name\": \"DO\"\n    }],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"loop_blocks\",\n    \"helpUrl\": \"%{BKY_CONTROLS_FOREACH_HELPURL}\",\n    \"extensions\": [\n      \"contextMenu_newGetVariableBlock\",\n      \"controls_forEach_tooltip\"\n    ]\n  },\n  // Block for flow statements: continue, break.\n  {\n    \"type\": \"controls_flow_statements\",\n    \"message0\": \"%1\",\n    \"args0\": [{\n      \"type\": \"field_dropdown\",\n      \"name\": \"FLOW\",\n      \"options\": [\n        [\"%{BKY_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK}\", \"BREAK\"],\n        [\"%{BKY_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE}\", \"CONTINUE\"]\n      ]\n    }],\n    \"previousStatement\": null,\n    \"style\": \"loop_blocks\",\n    \"helpUrl\": \"%{BKY_CONTROLS_FLOW_STATEMENTS_HELPURL}\",\n    \"extensions\": [\n      \"controls_flow_tooltip\",\n      \"controls_flow_in_loop_check\"\n    ]\n  }\n]);  // END JSON EXTRACT (Do not delete this comment.)\n\n/**\n * Tooltips for the 'controls_whileUntil' block, keyed by MODE value.\n * @see {Blockly.Extensions#buildTooltipForDropdown}\n * @package\n * @readonly\n */\nBlockly.Constants.Loops.WHILE_UNTIL_TOOLTIPS = {\n  'WHILE': '%{BKY_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE}',\n  'UNTIL': '%{BKY_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL}'\n};\n\nBlockly.Extensions.register('controls_whileUntil_tooltip',\n    Blockly.Extensions.buildTooltipForDropdown(\n        'MODE', Blockly.Constants.Loops.WHILE_UNTIL_TOOLTIPS));\n\n/**\n * Tooltips for the 'controls_flow_statements' block, keyed by FLOW value.\n * @see {Blockly.Extensions#buildTooltipForDropdown}\n * @package\n * @readonly\n */\nBlockly.Constants.Loops.BREAK_CONTINUE_TOOLTIPS = {\n  'BREAK': '%{BKY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK}',\n  'CONTINUE': '%{BKY_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE}'\n};\n\nBlockly.Extensions.register('controls_flow_tooltip',\n    Blockly.Extensions.buildTooltipForDropdown(\n        'FLOW', Blockly.Constants.Loops.BREAK_CONTINUE_TOOLTIPS));\n\n/**\n * Mixin to add a context menu item to create a 'variables_get' block.\n * Used by blocks 'controls_for' and 'controls_forEach'.\n * @mixin\n * @augments Blockly.Block\n * @package\n * @readonly\n */\nBlockly.Constants.Loops.CUSTOM_CONTEXT_MENU_CREATE_VARIABLES_GET_MIXIN = {\n  /**\n   * Add context menu option to create getter block for the loop's variable.\n   * (customContextMenu support limited to web BlockSvg.)\n   * @param {!Array} options List of menu options to add to.\n   * @this {Blockly.Block}\n   */\n  customContextMenu: function(options) {\n    if (this.isInFlyout) {\n      return;\n    }\n    var variable = this.getField('VAR').getVariable();\n    var varName = variable.name;\n    if (!this.isCollapsed() && varName != null) {\n      var option = {enabled: true};\n      option.text =\n          Blockly.Msg['VARIABLES_SET_CREATE_GET'].replace('%1', varName);\n      var xmlField = Blockly.Variables.generateVariableFieldDom(variable);\n      var xmlBlock = Blockly.utils.xml.createElement('block');\n      xmlBlock.setAttribute('type', 'variables_get');\n      xmlBlock.appendChild(xmlField);\n      option.callback = Blockly.ContextMenu.callbackFactory(this, xmlBlock);\n      options.push(option);\n    }\n  }\n};\n\nBlockly.Extensions.registerMixin('contextMenu_newGetVariableBlock',\n    Blockly.Constants.Loops.CUSTOM_CONTEXT_MENU_CREATE_VARIABLES_GET_MIXIN);\n\nBlockly.Extensions.register('controls_for_tooltip',\n    Blockly.Extensions.buildTooltipWithFieldText(\n        '%{BKY_CONTROLS_FOR_TOOLTIP}', 'VAR'));\n\nBlockly.Extensions.register('controls_forEach_tooltip',\n    Blockly.Extensions.buildTooltipWithFieldText(\n        '%{BKY_CONTROLS_FOREACH_TOOLTIP}', 'VAR'));\n\n/**\n * This mixin adds a check to make sure the 'controls_flow_statements' block\n * is contained in a loop. Otherwise a warning is added to the block.\n * @mixin\n * @augments Blockly.Block\n * @package\n * @readonly\n */\nBlockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN = {\n  /**\n   * List of block types that are loops and thus do not need warnings.\n   * To add a new loop type add this to your code:\n   * Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.LOOP_TYPES.push('custom_loop');\n   */\n  LOOP_TYPES: [\n    'controls_repeat',\n    'controls_repeat_ext',\n    'controls_forEach',\n    'controls_for',\n    'controls_whileUntil'\n  ],\n\n  /**\n   * Don't automatically add STATEMENT_PREFIX and STATEMENT_SUFFIX to generated\n   * code.  These will be handled manually in this block's generators.\n   */\n  suppressPrefixSuffix: true,\n\n  /**\n   * Is the given block enclosed (at any level) by a loop?\n   * @param {!Blockly.Block} block Current block.\n   * @return {Blockly.Block} The nearest surrounding loop, or null if none.\n   */\n  getSurroundLoop: function(block) {\n    // Is the block nested in a loop?\n    do {\n      if (Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.LOOP_TYPES\n          .indexOf(block.type) != -1) {\n        return block;\n      }\n      block = block.getSurroundParent();\n    } while (block);\n    return null;\n  },\n\n  /**\n   * Called whenever anything on the workspace changes.\n   * Add warning if this flow block is not nested inside a loop.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this {Blockly.Block}\n   */\n  onchange: function(e) {\n    // Don't change state if:\n    //   * It's at the start of a drag.\n    //   * It's not a move event.\n    //   * Or the moving block is not this block.\n    if (!this.workspace.isDragging || this.workspace.isDragging() ||\n        e.type != Blockly.Events.BLOCK_MOVE || e.blockId != this.id) {\n      return;\n    }\n    var enabled = Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN\n        .getSurroundLoop(this);\n    this.setWarningText(enabled ? null :\n        Blockly.Msg['CONTROLS_FLOW_STATEMENTS_WARNING']);\n    if (!this.isInFlyout) {\n      var group = Blockly.Events.getGroup();\n      // Makes it so the move and the disable event get undone together.\n      Blockly.Events.setGroup(e.group);\n      this.setEnabled(enabled);\n      Blockly.Events.setGroup(group);\n    }\n  }\n};\n\nBlockly.Extensions.registerMixin('controls_flow_in_loop_check',\n    Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN);\n"],"file":"loops.min.js"}