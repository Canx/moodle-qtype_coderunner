{"version":3,"sources":["../../../src/blockly/blocks/colour.js"],"names":["goog","provide","require","Blockly","Constants","Colour","HUE","defineBlocksWithJsonArray"],"mappings":"AAeA,aAEAA,IAAI,CAACC,OAAL,CAAa,uBAAb,EACAD,IAAI,CAACC,OAAL,CAAa,0BAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,SAAb,EACAF,IAAI,CAACE,OAAL,CAAa,gBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,qBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,oBAAb,EAOAC,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAAyBC,GAAzB,CAA+B,EAA/B,CAEAH,OAAO,CAACI,yBAAR,CAAkC,CAEhC,CACE,KAAQ,eADV,CAEE,SAAY,IAFd,CAGE,MAAS,CACP,CACE,KAAQ,cADV,CAEE,KAAQ,QAFV,CAGE,OAAU,SAHZ,CADO,CAHX,CAUE,OAAU,QAVZ,CAWE,QAAW,8BAXb,CAYE,MAAS,eAZX,CAaE,QAAW,8BAbb,CAcE,WAAc,CAAC,4BAAD,CAdhB,CAFgC,CAoBhC,CACE,KAAQ,eADV,CAEE,SAAY,4BAFd,CAGE,OAAU,QAHZ,CAIE,QAAW,8BAJb,CAKE,MAAS,eALX,CAME,QAAW,8BANb,CApBgC,CA8BhC,CACE,KAAQ,YADV,CAEE,SAAY,uGAFd,CAGE,MAAS,CACP,CACE,KAAQ,aADV,CAEE,KAAQ,KAFV,CAGE,MAAS,QAHX,CAIE,MAAS,OAJX,CADO,CAOP,CACE,KAAQ,aADV,CAEE,KAAQ,OAFV,CAGE,MAAS,QAHX,CAIE,MAAS,OAJX,CAPO,CAaP,CACE,KAAQ,aADV,CAEE,KAAQ,MAFV,CAGE,MAAS,QAHX,CAIE,MAAS,OAJX,CAbO,CAHX,CAuBE,OAAU,QAvBZ,CAwBE,QAAW,2BAxBb,CAyBE,MAAS,eAzBX,CA0BE,QAAW,2BA1Bb,CA9BgC,CA4DhC,CACE,KAAQ,cADV,CAEE,+HAFF,CAIE,MAAS,CACP,CACE,KAAQ,aADV,CAEE,KAAQ,SAFV,CAGE,MAAS,QAHX,CAIE,MAAS,OAJX,CADO,CAOP,CACE,KAAQ,aADV,CAEE,KAAQ,SAFV,CAGE,MAAS,QAHX,CAIE,MAAS,OAJX,CAPO,CAaP,CACE,KAAQ,aADV,CAEE,KAAQ,OAFV,CAGE,MAAS,QAHX,CAIE,MAAS,OAJX,CAbO,CAJX,CAwBE,OAAU,QAxBZ,CAyBE,QAAW,6BAzBb,CA0BE,MAAS,eA1BX,CA2BE,QAAW,6BA3Bb,CA5DgC,CAAlC","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Colour blocks for Blockly.\n *\n * This file is scraped to extract a .json file of block definitions. The array\n * passed to defineBlocksWithJsonArray(..) must be strict JSON: double quotes\n * only, no outside references, no functions, no trailing commas, etc. The one\n * exception is end-of-line comments, which the scraper will remove.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Blocks.colour');  // Deprecated\ngoog.provide('Blockly.Constants.Colour');\n\ngoog.require('Blockly');\ngoog.require('Blockly.Blocks');\ngoog.require('Blockly.FieldColour');\ngoog.require('Blockly.FieldLabel');\n\n\n/**\n * Unused constant for the common HSV hue for all blocks in this category.\n * @deprecated Use Blockly.Msg['COLOUR_HUE']. (2018 April 5)\n */\nBlockly.Constants.Colour.HUE = 20;\n\nBlockly.defineBlocksWithJsonArray([  // BEGIN JSON EXTRACT\n  // Block for colour picker.\n  {\n    \"type\": \"colour_picker\",\n    \"message0\": \"%1\",\n    \"args0\": [\n      {\n        \"type\": \"field_colour\",\n        \"name\": \"COLOUR\",\n        \"colour\": \"#ff0000\"\n      }\n    ],\n    \"output\": \"Colour\",\n    \"helpUrl\": \"%{BKY_COLOUR_PICKER_HELPURL}\",\n    \"style\": \"colour_blocks\",\n    \"tooltip\": \"%{BKY_COLOUR_PICKER_TOOLTIP}\",\n    \"extensions\": [\"parent_tooltip_when_inline\"]\n  },\n\n  // Block for random colour.\n  {\n    \"type\": \"colour_random\",\n    \"message0\": \"%{BKY_COLOUR_RANDOM_TITLE}\",\n    \"output\": \"Colour\",\n    \"helpUrl\": \"%{BKY_COLOUR_RANDOM_HELPURL}\",\n    \"style\": \"colour_blocks\",\n    \"tooltip\": \"%{BKY_COLOUR_RANDOM_TOOLTIP}\"\n  },\n\n  // Block for composing a colour from RGB components.\n  {\n    \"type\": \"colour_rgb\",\n    \"message0\": \"%{BKY_COLOUR_RGB_TITLE} %{BKY_COLOUR_RGB_RED} %1 %{BKY_COLOUR_RGB_GREEN} %2 %{BKY_COLOUR_RGB_BLUE} %3\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"RED\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"GREEN\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"BLUE\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      }\n    ],\n    \"output\": \"Colour\",\n    \"helpUrl\": \"%{BKY_COLOUR_RGB_HELPURL}\",\n    \"style\": \"colour_blocks\",\n    \"tooltip\": \"%{BKY_COLOUR_RGB_TOOLTIP}\"\n  },\n\n  // Block for blending two colours together.\n  {\n    \"type\": \"colour_blend\",\n    \"message0\": \"%{BKY_COLOUR_BLEND_TITLE} %{BKY_COLOUR_BLEND_COLOUR1} \" +\n        \"%1 %{BKY_COLOUR_BLEND_COLOUR2} %2 %{BKY_COLOUR_BLEND_RATIO} %3\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"COLOUR1\",\n        \"check\": \"Colour\",\n        \"align\": \"RIGHT\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"COLOUR2\",\n        \"check\": \"Colour\",\n        \"align\": \"RIGHT\"\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"RATIO\",\n        \"check\": \"Number\",\n        \"align\": \"RIGHT\"\n      }\n    ],\n    \"output\": \"Colour\",\n    \"helpUrl\": \"%{BKY_COLOUR_BLEND_HELPURL}\",\n    \"style\": \"colour_blocks\",\n    \"tooltip\": \"%{BKY_COLOUR_BLEND_TOOLTIP}\"\n  }\n]);  // END JSON EXTRACT (Do not delete this comment.)\n"],"file":"colour.min.js"}