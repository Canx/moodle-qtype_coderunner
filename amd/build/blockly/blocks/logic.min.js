'use strict';goog.provide("Blockly.Blocks.logic");goog.provide("Blockly.Constants.Logic");goog.require("Blockly");goog.require("Blockly.Blocks");goog.require("Blockly.FieldDropdown");goog.require("Blockly.FieldLabel");goog.require("Blockly.Mutator");Blockly.Constants.Logic.HUE=210;Blockly.defineBlocksWithJsonArray([{type:"logic_boolean",message0:"%1",args0:[{type:"field_dropdown",name:"BOOL",options:[["%{BKY_LOGIC_BOOLEAN_TRUE}","TRUE"],["%{BKY_LOGIC_BOOLEAN_FALSE}","FALSE"]]}],output:"Boolean",style:"logic_blocks",tooltip:"%{BKY_LOGIC_BOOLEAN_TOOLTIP}",helpUrl:"%{BKY_LOGIC_BOOLEAN_HELPURL}"},{type:"controls_if",message0:"%{BKY_CONTROLS_IF_MSG_IF} %1",args0:[{type:"input_value",name:"IF0",check:"Boolean"}],message1:"%{BKY_CONTROLS_IF_MSG_THEN} %1",args1:[{type:"input_statement",name:"DO0"}],previousStatement:null,nextStatement:null,style:"logic_blocks",helpUrl:"%{BKY_CONTROLS_IF_HELPURL}",mutator:"controls_if_mutator",extensions:["controls_if_tooltip"]},{type:"controls_ifelse",message0:"%{BKY_CONTROLS_IF_MSG_IF} %1",args0:[{type:"input_value",name:"IF0",check:"Boolean"}],message1:"%{BKY_CONTROLS_IF_MSG_THEN} %1",args1:[{type:"input_statement",name:"DO0"}],message2:"%{BKY_CONTROLS_IF_MSG_ELSE} %1",args2:[{type:"input_statement",name:"ELSE"}],previousStatement:null,nextStatement:null,style:"logic_blocks",tooltip:"%{BKYCONTROLS_IF_TOOLTIP_2}",helpUrl:"%{BKY_CONTROLS_IF_HELPURL}",extensions:["controls_if_tooltip"]},{type:"logic_compare",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:[["=","EQ"],["\u2260","NEQ"],["\u200F<","LT"],["\u200F\u2264","LTE"],["\u200F>","GT"],["\u200F\u2265","GTE"]]},{type:"input_value",name:"B"}],inputsInline:!0,output:"Boolean",style:"logic_blocks",helpUrl:"%{BKY_LOGIC_COMPARE_HELPURL}",extensions:["logic_compare","logic_op_tooltip"]},{type:"logic_operation",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A",check:"Boolean"},{type:"field_dropdown",name:"OP",options:[["%{BKY_LOGIC_OPERATION_AND}","AND"],["%{BKY_LOGIC_OPERATION_OR}","OR"]]},{type:"input_value",name:"B",check:"Boolean"}],inputsInline:!0,output:"Boolean",style:"logic_blocks",helpUrl:"%{BKY_LOGIC_OPERATION_HELPURL}",extensions:["logic_op_tooltip"]},{type:"logic_negate",message0:"%{BKY_LOGIC_NEGATE_TITLE}",args0:[{type:"input_value",name:"BOOL",check:"Boolean"}],output:"Boolean",style:"logic_blocks",tooltip:"%{BKY_LOGIC_NEGATE_TOOLTIP}",helpUrl:"%{BKY_LOGIC_NEGATE_HELPURL}"},{type:"logic_null",message0:"%{BKY_LOGIC_NULL}",output:null,style:"logic_blocks",tooltip:"%{BKY_LOGIC_NULL_TOOLTIP}",helpUrl:"%{BKY_LOGIC_NULL_HELPURL}"},{type:"logic_ternary",message0:"%{BKY_LOGIC_TERNARY_CONDITION} %1",args0:[{type:"input_value",name:"IF",check:"Boolean"}],message1:"%{BKY_LOGIC_TERNARY_IF_TRUE} %1",args1:[{type:"input_value",name:"THEN"}],message2:"%{BKY_LOGIC_TERNARY_IF_FALSE} %1",args2:[{type:"input_value",name:"ELSE"}],output:null,style:"logic_blocks",tooltip:"%{BKY_LOGIC_TERNARY_TOOLTIP}",helpUrl:"%{BKY_LOGIC_TERNARY_HELPURL}",extensions:["logic_ternary"]}]);Blockly.defineBlocksWithJsonArray([{type:"controls_if_if",message0:"%{BKY_CONTROLS_IF_IF_TITLE_IF}",nextStatement:null,enableContextMenu:!1,style:"logic_blocks",tooltip:"%{BKY_CONTROLS_IF_IF_TOOLTIP}"},{type:"controls_if_elseif",message0:"%{BKY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF}",previousStatement:null,nextStatement:null,enableContextMenu:!1,style:"logic_blocks",tooltip:"%{BKY_CONTROLS_IF_ELSEIF_TOOLTIP}"},{type:"controls_if_else",message0:"%{BKY_CONTROLS_IF_ELSE_TITLE_ELSE}",previousStatement:null,enableContextMenu:!1,style:"logic_blocks",tooltip:"%{BKY_CONTROLS_IF_ELSE_TOOLTIP}"}]);Blockly.Constants.Logic.TOOLTIPS_BY_OP={EQ:"%{BKY_LOGIC_COMPARE_TOOLTIP_EQ}",NEQ:"%{BKY_LOGIC_COMPARE_TOOLTIP_NEQ}",LT:"%{BKY_LOGIC_COMPARE_TOOLTIP_LT}",LTE:"%{BKY_LOGIC_COMPARE_TOOLTIP_LTE}",GT:"%{BKY_LOGIC_COMPARE_TOOLTIP_GT}",GTE:"%{BKY_LOGIC_COMPARE_TOOLTIP_GTE}",AND:"%{BKY_LOGIC_OPERATION_TOOLTIP_AND}",OR:"%{BKY_LOGIC_OPERATION_TOOLTIP_OR}"};Blockly.Extensions.register("logic_op_tooltip",Blockly.Extensions.buildTooltipForDropdown("OP",Blockly.Constants.Logic.TOOLTIPS_BY_OP));Blockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN={elseifCount_:0,elseCount_:0,suppressPrefixSuffix:!0,mutationToDom:function mutationToDom(){if(!this.elseifCount_&&!this.elseCount_){return null}var a=Blockly.utils.xml.createElement("mutation");if(this.elseifCount_){a.setAttribute("elseif",this.elseifCount_)}if(this.elseCount_){a.setAttribute("else",1)}return a},domToMutation:function domToMutation(a){this.elseifCount_=parseInt(a.getAttribute("elseif"),10)||0;this.elseCount_=parseInt(a.getAttribute("else"),10)||0;this.rebuildShape_()},decompose:function decompose(a){var b=a.newBlock("controls_if_if");b.initSvg();for(var c=b.nextConnection,d=1,e;d<=this.elseifCount_;d++){e=a.newBlock("controls_if_elseif");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}if(this.elseCount_){var f=a.newBlock("controls_if_else");f.initSvg();c.connect(f.previousConnection)}return b},compose:function compose(a){var b=a.nextConnection.targetBlock();this.elseifCount_=0;this.elseCount_=0;var c=[null],d=[null],e=null;while(b){switch(b.type){case"controls_if_elseif":this.elseifCount_++;c.push(b.valueConnection_);d.push(b.statementConnection_);break;case"controls_if_else":this.elseCount_++;e=b.statementConnection_;break;default:throw TypeError("Unknown block type: "+b.type);}b=b.nextConnection&&b.nextConnection.targetBlock()}this.updateShape_();this.reconnectChildBlocks_(c,d,e)},saveConnections:function saveConnections(a){var b=a.nextConnection.targetBlock(),c=1;while(b){switch(b.type){case"controls_if_elseif":var d=this.getInput("IF"+c),e=this.getInput("DO"+c);b.valueConnection_=d&&d.connection.targetConnection;b.statementConnection_=e&&e.connection.targetConnection;c++;break;case"controls_if_else":var e=this.getInput("ELSE");b.statementConnection_=e&&e.connection.targetConnection;break;default:throw TypeError("Unknown block type: "+b.type);}b=b.nextConnection&&b.nextConnection.targetBlock()}},rebuildShape_:function rebuildShape_(){var a=[null],b=[null],c=null;if(this.getInput("ELSE")){c=this.getInput("ELSE").connection.targetConnection}var d=1;while(this.getInput("IF"+d)){var e=this.getInput("IF"+d),f=this.getInput("DO"+d);a.push(e.connection.targetConnection);b.push(f.connection.targetConnection);d++}this.updateShape_();this.reconnectChildBlocks_(a,b,c)},updateShape_:function updateShape_(){if(this.getInput("ELSE")){this.removeInput("ELSE")}var a=1;while(this.getInput("IF"+a)){this.removeInput("IF"+a);this.removeInput("DO"+a);a++}for(a=1;a<=this.elseifCount_;a++){this.appendValueInput("IF"+a).setCheck("Boolean").appendField(Blockly.Msg.CONTROLS_IF_MSG_ELSEIF);this.appendStatementInput("DO"+a).appendField(Blockly.Msg.CONTROLS_IF_MSG_THEN)}if(this.elseCount_){this.appendStatementInput("ELSE").appendField(Blockly.Msg.CONTROLS_IF_MSG_ELSE)}},reconnectChildBlocks_:function reconnectChildBlocks_(a,b,c){for(var d=1;d<=this.elseifCount_;d++){Blockly.Mutator.reconnect(a[d],this,"IF"+d);Blockly.Mutator.reconnect(b[d],this,"DO"+d)}Blockly.Mutator.reconnect(c,this,"ELSE")}};Blockly.Extensions.registerMutator("controls_if_mutator",Blockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN,null,["controls_if_elseif","controls_if_else"]);Blockly.Constants.Logic.CONTROLS_IF_TOOLTIP_EXTENSION=function(){this.setTooltip(function(){if(!this.elseifCount_&&!this.elseCount_){return Blockly.Msg.CONTROLS_IF_TOOLTIP_1}else if(!this.elseifCount_&&this.elseCount_){return Blockly.Msg.CONTROLS_IF_TOOLTIP_2}else if(this.elseifCount_&&!this.elseCount_){return Blockly.Msg.CONTROLS_IF_TOOLTIP_3}else if(this.elseifCount_&&this.elseCount_){return Blockly.Msg.CONTROLS_IF_TOOLTIP_4}return""}.bind(this))};Blockly.Extensions.register("controls_if_tooltip",Blockly.Constants.Logic.CONTROLS_IF_TOOLTIP_EXTENSION);Blockly.Constants.Logic.LOGIC_COMPARE_ONCHANGE_MIXIN={onchange:function onchange(a){if(!this.prevBlocks_){this.prevBlocks_=[null,null]}var b=this.getInputTargetBlock("A"),c=this.getInputTargetBlock("B");if(b&&c&&!b.outputConnection.checkType(c.outputConnection)){Blockly.Events.setGroup(a.group);var d=this.prevBlocks_[0];if(d!==b){b.unplug();if(d&&!d.isDisposed()&&!d.isShadow()){this.getInput("A").connection.connect(d.outputConnection)}}var e=this.prevBlocks_[1];if(e!==c){c.unplug();if(e&&!e.isDisposed()&&!e.isShadow()){this.getInput("B").connection.connect(e.outputConnection)}}this.bumpNeighbours();Blockly.Events.setGroup(!1)}this.prevBlocks_[0]=this.getInputTargetBlock("A");this.prevBlocks_[1]=this.getInputTargetBlock("B")}};Blockly.Constants.Logic.LOGIC_COMPARE_EXTENSION=function(){this.mixin(Blockly.Constants.Logic.LOGIC_COMPARE_ONCHANGE_MIXIN)};Blockly.Extensions.register("logic_compare",Blockly.Constants.Logic.LOGIC_COMPARE_EXTENSION);Blockly.Constants.Logic.LOGIC_TERNARY_ONCHANGE_MIXIN={prevParentConnection_:null,onchange:function onchange(a){var b=this.getInputTargetBlock("THEN"),c=this.getInputTargetBlock("ELSE"),d=this.outputConnection.targetConnection;if((b||c)&&d){for(var e=0,f;2>e;e++){f=1==e?b:c;if(f&&!f.outputConnection.checkType(d)){Blockly.Events.setGroup(a.group);if(d===this.prevParentConnection_){this.unplug();d.getSourceBlock().bumpNeighbours()}else{f.unplug();f.bumpNeighbours()}Blockly.Events.setGroup(!1)}}}this.prevParentConnection_=d}};Blockly.Extensions.registerMixin("logic_ternary",Blockly.Constants.Logic.LOGIC_TERNARY_ONCHANGE_MIXIN);
//# sourceMappingURL=logic.min.js.map
