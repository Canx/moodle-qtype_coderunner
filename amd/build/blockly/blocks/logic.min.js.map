{"version":3,"sources":["../../../src/blockly/blocks/logic.js"],"names":["goog","provide","require","Blockly","Constants","Logic","HUE","defineBlocksWithJsonArray","TOOLTIPS_BY_OP","Extensions","register","buildTooltipForDropdown","CONTROLS_IF_MUTATOR_MIXIN","elseifCount_","elseCount_","suppressPrefixSuffix","mutationToDom","container","utils","xml","createElement","setAttribute","domToMutation","xmlElement","parseInt","getAttribute","rebuildShape_","decompose","workspace","containerBlock","newBlock","initSvg","connection","nextConnection","i","elseifBlock","connect","previousConnection","elseBlock","compose","clauseBlock","targetBlock","valueConnections","statementConnections","elseStatementConnection","type","push","valueConnection_","statementConnection_","TypeError","updateShape_","reconnectChildBlocks_","saveConnections","inputIf","getInput","inputDo","targetConnection","removeInput","appendValueInput","setCheck","appendField","Msg","appendStatementInput","Mutator","reconnect","registerMutator","CONTROLS_IF_TOOLTIP_EXTENSION","setTooltip","bind","LOGIC_COMPARE_ONCHANGE_MIXIN","onchange","e","prevBlocks_","blockA","getInputTargetBlock","blockB","outputConnection","checkType","Events","setGroup","group","prevA","unplug","isDisposed","isShadow","prevB","bumpNeighbours","LOGIC_COMPARE_EXTENSION","mixin","LOGIC_TERNARY_ONCHANGE_MIXIN","prevParentConnection_","parentConnection","block","getSourceBlock","registerMixin"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Logic blocks for Blockly.\n *\n * This file is scraped to extract a .json file of block definitions. The array\n * passed to defineBlocksWithJsonArray(..) must be strict JSON: double quotes\n * only, no outside references, no functions, no trailing commas, etc. The one\n * exception is end-of-line comments, which the scraper will remove.\n * @author q.neutron@gmail.com (Quynh Neutron)\n */\n'use strict';\n\ngoog.provide('Blockly.Blocks.logic');  // Deprecated\ngoog.provide('Blockly.Constants.Logic');\n\ngoog.require('Blockly');\ngoog.require('Blockly.Blocks');\ngoog.require('Blockly.FieldDropdown');\ngoog.require('Blockly.FieldLabel');\ngoog.require('Blockly.Mutator');\n\n\n/**\n * Unused constant for the common HSV hue for all blocks in this category.\n * @deprecated Use Blockly.Msg['LOGIC_HUE']. (2018 April 5)\n */\nBlockly.Constants.Logic.HUE = 210;\n\nBlockly.defineBlocksWithJsonArray([  // BEGIN JSON EXTRACT\n  // Block for boolean data type: true and false.\n  {\n    \"type\": \"logic_boolean\",\n    \"message0\": \"%1\",\n    \"args0\": [\n      {\n        \"type\": \"field_dropdown\",\n        \"name\": \"BOOL\",\n        \"options\": [\n          [\"%{BKY_LOGIC_BOOLEAN_TRUE}\", \"TRUE\"],\n          [\"%{BKY_LOGIC_BOOLEAN_FALSE}\", \"FALSE\"]\n        ]\n      }\n    ],\n    \"output\": \"Boolean\",\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_LOGIC_BOOLEAN_TOOLTIP}\",\n    \"helpUrl\": \"%{BKY_LOGIC_BOOLEAN_HELPURL}\"\n  },\n  // Block for if/elseif/else condition.\n  {\n    \"type\": \"controls_if\",\n    \"message0\": \"%{BKY_CONTROLS_IF_MSG_IF} %1\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"IF0\",\n        \"check\": \"Boolean\"\n      }\n    ],\n    \"message1\": \"%{BKY_CONTROLS_IF_MSG_THEN} %1\",\n    \"args1\": [\n      {\n        \"type\": \"input_statement\",\n        \"name\": \"DO0\"\n      }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"logic_blocks\",\n    \"helpUrl\": \"%{BKY_CONTROLS_IF_HELPURL}\",\n    \"mutator\": \"controls_if_mutator\",\n    \"extensions\": [\"controls_if_tooltip\"]\n  },\n  // If/else block that does not use a mutator.\n  {\n    \"type\": \"controls_ifelse\",\n    \"message0\": \"%{BKY_CONTROLS_IF_MSG_IF} %1\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"IF0\",\n        \"check\": \"Boolean\"\n      }\n    ],\n    \"message1\": \"%{BKY_CONTROLS_IF_MSG_THEN} %1\",\n    \"args1\": [\n      {\n        \"type\": \"input_statement\",\n        \"name\": \"DO0\"\n      }\n    ],\n    \"message2\": \"%{BKY_CONTROLS_IF_MSG_ELSE} %1\",\n    \"args2\": [\n      {\n        \"type\": \"input_statement\",\n        \"name\": \"ELSE\"\n      }\n    ],\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKYCONTROLS_IF_TOOLTIP_2}\",\n    \"helpUrl\": \"%{BKY_CONTROLS_IF_HELPURL}\",\n    \"extensions\": [\"controls_if_tooltip\"]\n  },\n  // Block for comparison operator.\n  {\n    \"type\": \"logic_compare\",\n    \"message0\": \"%1 %2 %3\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"A\"\n      },\n      {\n        \"type\": \"field_dropdown\",\n        \"name\": \"OP\",\n        \"options\": [\n          [\"=\", \"EQ\"],\n          [\"\\u2260\", \"NEQ\"],\n          [\"\\u200F<\", \"LT\"],\n          [\"\\u200F\\u2264\", \"LTE\"],\n          [\"\\u200F>\", \"GT\"],\n          [\"\\u200F\\u2265\", \"GTE\"]\n        ]\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"B\"\n      }\n    ],\n    \"inputsInline\": true,\n    \"output\": \"Boolean\",\n    \"style\": \"logic_blocks\",\n    \"helpUrl\": \"%{BKY_LOGIC_COMPARE_HELPURL}\",\n    \"extensions\": [\"logic_compare\", \"logic_op_tooltip\"]\n  },\n  // Block for logical operations: 'and', 'or'.\n  {\n    \"type\": \"logic_operation\",\n    \"message0\": \"%1 %2 %3\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"A\",\n        \"check\": \"Boolean\"\n      },\n      {\n        \"type\": \"field_dropdown\",\n        \"name\": \"OP\",\n        \"options\": [\n          [\"%{BKY_LOGIC_OPERATION_AND}\", \"AND\"],\n          [\"%{BKY_LOGIC_OPERATION_OR}\", \"OR\"]\n        ]\n      },\n      {\n        \"type\": \"input_value\",\n        \"name\": \"B\",\n        \"check\": \"Boolean\"\n      }\n    ],\n    \"inputsInline\": true,\n    \"output\": \"Boolean\",\n    \"style\": \"logic_blocks\",\n    \"helpUrl\": \"%{BKY_LOGIC_OPERATION_HELPURL}\",\n    \"extensions\": [\"logic_op_tooltip\"]\n  },\n  // Block for negation.\n  {\n    \"type\": \"logic_negate\",\n    \"message0\": \"%{BKY_LOGIC_NEGATE_TITLE}\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"BOOL\",\n        \"check\": \"Boolean\"\n      }\n    ],\n    \"output\": \"Boolean\",\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_LOGIC_NEGATE_TOOLTIP}\",\n    \"helpUrl\": \"%{BKY_LOGIC_NEGATE_HELPURL}\"\n  },\n  // Block for null data type.\n  {\n    \"type\": \"logic_null\",\n    \"message0\": \"%{BKY_LOGIC_NULL}\",\n    \"output\": null,\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_LOGIC_NULL_TOOLTIP}\",\n    \"helpUrl\": \"%{BKY_LOGIC_NULL_HELPURL}\"\n  },\n  // Block for ternary operator.\n  {\n    \"type\": \"logic_ternary\",\n    \"message0\": \"%{BKY_LOGIC_TERNARY_CONDITION} %1\",\n    \"args0\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"IF\",\n        \"check\": \"Boolean\"\n      }\n    ],\n    \"message1\": \"%{BKY_LOGIC_TERNARY_IF_TRUE} %1\",\n    \"args1\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"THEN\"\n      }\n    ],\n    \"message2\": \"%{BKY_LOGIC_TERNARY_IF_FALSE} %1\",\n    \"args2\": [\n      {\n        \"type\": \"input_value\",\n        \"name\": \"ELSE\"\n      }\n    ],\n    \"output\": null,\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_LOGIC_TERNARY_TOOLTIP}\",\n    \"helpUrl\": \"%{BKY_LOGIC_TERNARY_HELPURL}\",\n    \"extensions\": [\"logic_ternary\"]\n  }\n]);  // END JSON EXTRACT (Do not delete this comment.)\n\nBlockly.defineBlocksWithJsonArray([ // Mutator blocks. Do not extract.\n  // Block representing the if statement in the controls_if mutator.\n  {\n    \"type\": \"controls_if_if\",\n    \"message0\": \"%{BKY_CONTROLS_IF_IF_TITLE_IF}\",\n    \"nextStatement\": null,\n    \"enableContextMenu\": false,\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_CONTROLS_IF_IF_TOOLTIP}\"\n  },\n  // Block representing the else-if statement in the controls_if mutator.\n  {\n    \"type\": \"controls_if_elseif\",\n    \"message0\": \"%{BKY_CONTROLS_IF_ELSEIF_TITLE_ELSEIF}\",\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"enableContextMenu\": false,\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_CONTROLS_IF_ELSEIF_TOOLTIP}\"\n  },\n  // Block representing the else statement in the controls_if mutator.\n  {\n    \"type\": \"controls_if_else\",\n    \"message0\": \"%{BKY_CONTROLS_IF_ELSE_TITLE_ELSE}\",\n    \"previousStatement\": null,\n    \"enableContextMenu\": false,\n    \"style\": \"logic_blocks\",\n    \"tooltip\": \"%{BKY_CONTROLS_IF_ELSE_TOOLTIP}\"\n  }\n]);\n\n/**\n * Tooltip text, keyed by block OP value. Used by logic_compare and\n * logic_operation blocks.\n * @see {Blockly.Extensions#buildTooltipForDropdown}\n * @package\n * @readonly\n */\nBlockly.Constants.Logic.TOOLTIPS_BY_OP = {\n  // logic_compare\n  'EQ': '%{BKY_LOGIC_COMPARE_TOOLTIP_EQ}',\n  'NEQ': '%{BKY_LOGIC_COMPARE_TOOLTIP_NEQ}',\n  'LT': '%{BKY_LOGIC_COMPARE_TOOLTIP_LT}',\n  'LTE': '%{BKY_LOGIC_COMPARE_TOOLTIP_LTE}',\n  'GT': '%{BKY_LOGIC_COMPARE_TOOLTIP_GT}',\n  'GTE': '%{BKY_LOGIC_COMPARE_TOOLTIP_GTE}',\n\n  // logic_operation\n  'AND': '%{BKY_LOGIC_OPERATION_TOOLTIP_AND}',\n  'OR': '%{BKY_LOGIC_OPERATION_TOOLTIP_OR}'\n};\n\nBlockly.Extensions.register('logic_op_tooltip',\n    Blockly.Extensions.buildTooltipForDropdown(\n        'OP', Blockly.Constants.Logic.TOOLTIPS_BY_OP));\n\n/**\n * Mutator methods added to controls_if blocks.\n * @mixin\n * @augments Blockly.Block\n * @package\n * @readonly\n */\nBlockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN = {\n  elseifCount_: 0,\n  elseCount_: 0,\n\n  /**\n   * Don't automatically add STATEMENT_PREFIX and STATEMENT_SUFFIX to generated\n   * code.  These will be handled manually in this block's generators.\n   */\n  suppressPrefixSuffix: true,\n\n  /**\n   * Create XML to represent the number of else-if and else inputs.\n   * @return {Element} XML storage element.\n   * @this {Blockly.Block}\n   */\n  mutationToDom: function() {\n    if (!this.elseifCount_ && !this.elseCount_) {\n      return null;\n    }\n    var container = Blockly.utils.xml.createElement('mutation');\n    if (this.elseifCount_) {\n      container.setAttribute('elseif', this.elseifCount_);\n    }\n    if (this.elseCount_) {\n      container.setAttribute('else', 1);\n    }\n    return container;\n  },\n  /**\n   * Parse XML to restore the else-if and else inputs.\n   * @param {!Element} xmlElement XML storage element.\n   * @this {Blockly.Block}\n   */\n  domToMutation: function(xmlElement) {\n    this.elseifCount_ = parseInt(xmlElement.getAttribute('elseif'), 10) || 0;\n    this.elseCount_ = parseInt(xmlElement.getAttribute('else'), 10) || 0;\n    this.rebuildShape_();\n  },\n  /**\n   * Populate the mutator's dialog with this block's components.\n   * @param {!Blockly.Workspace} workspace Mutator's workspace.\n   * @return {!Blockly.Block} Root block in mutator.\n   * @this {Blockly.Block}\n   */\n  decompose: function(workspace) {\n    var containerBlock = workspace.newBlock('controls_if_if');\n    containerBlock.initSvg();\n    var connection = containerBlock.nextConnection;\n    for (var i = 1; i <= this.elseifCount_; i++) {\n      var elseifBlock = workspace.newBlock('controls_if_elseif');\n      elseifBlock.initSvg();\n      connection.connect(elseifBlock.previousConnection);\n      connection = elseifBlock.nextConnection;\n    }\n    if (this.elseCount_) {\n      var elseBlock = workspace.newBlock('controls_if_else');\n      elseBlock.initSvg();\n      connection.connect(elseBlock.previousConnection);\n    }\n    return containerBlock;\n  },\n  /**\n   * Reconfigure this block based on the mutator dialog's components.\n   * @param {!Blockly.Block} containerBlock Root block in mutator.\n   * @this {Blockly.Block}\n   */\n  compose: function(containerBlock) {\n    var clauseBlock = containerBlock.nextConnection.targetBlock();\n    // Count number of inputs.\n    this.elseifCount_ = 0;\n    this.elseCount_ = 0;\n    var valueConnections = [null];\n    var statementConnections = [null];\n    var elseStatementConnection = null;\n    while (clauseBlock) {\n      switch (clauseBlock.type) {\n        case 'controls_if_elseif':\n          this.elseifCount_++;\n          valueConnections.push(clauseBlock.valueConnection_);\n          statementConnections.push(clauseBlock.statementConnection_);\n          break;\n        case 'controls_if_else':\n          this.elseCount_++;\n          elseStatementConnection = clauseBlock.statementConnection_;\n          break;\n        default:\n          throw TypeError('Unknown block type: ' + clauseBlock.type);\n      }\n      clauseBlock = clauseBlock.nextConnection &&\n          clauseBlock.nextConnection.targetBlock();\n    }\n    this.updateShape_();\n    // Reconnect any child blocks.\n    this.reconnectChildBlocks_(valueConnections, statementConnections,\n        elseStatementConnection);\n  },\n  /**\n   * Store pointers to any connected child blocks.\n   * @param {!Blockly.Block} containerBlock Root block in mutator.\n   * @this {Blockly.Block}\n   */\n  saveConnections: function(containerBlock) {\n    var clauseBlock = containerBlock.nextConnection.targetBlock();\n    var i = 1;\n    while (clauseBlock) {\n      switch (clauseBlock.type) {\n        case 'controls_if_elseif':\n          var inputIf = this.getInput('IF' + i);\n          var inputDo = this.getInput('DO' + i);\n          clauseBlock.valueConnection_ =\n              inputIf && inputIf.connection.targetConnection;\n          clauseBlock.statementConnection_ =\n              inputDo && inputDo.connection.targetConnection;\n          i++;\n          break;\n        case 'controls_if_else':\n          var inputDo = this.getInput('ELSE');\n          clauseBlock.statementConnection_ =\n              inputDo && inputDo.connection.targetConnection;\n          break;\n        default:\n          throw TypeError('Unknown block type: ' + clauseBlock.type);\n      }\n      clauseBlock = clauseBlock.nextConnection &&\n          clauseBlock.nextConnection.targetBlock();\n    }\n  },\n  /**\n   * Reconstructs the block with all child blocks attached.\n   * @this {Blockly.Block}\n   */\n  rebuildShape_: function() {\n    var valueConnections = [null];\n    var statementConnections = [null];\n    var elseStatementConnection = null;\n\n    if (this.getInput('ELSE')) {\n      elseStatementConnection = this.getInput('ELSE').connection.targetConnection;\n    }\n    var i = 1;\n    while (this.getInput('IF' + i)) {\n      var inputIf = this.getInput('IF' + i);\n      var inputDo = this.getInput('DO' + i);\n      valueConnections.push(inputIf.connection.targetConnection);\n      statementConnections.push(inputDo.connection.targetConnection);\n      i++;\n    }\n    this.updateShape_();\n    this.reconnectChildBlocks_(valueConnections, statementConnections,\n        elseStatementConnection);\n  },\n  /**\n   * Modify this block to have the correct number of inputs.\n   * @this {Blockly.Block}\n   * @private\n   */\n  updateShape_: function() {\n    // Delete everything.\n    if (this.getInput('ELSE')) {\n      this.removeInput('ELSE');\n    }\n    var i = 1;\n    while (this.getInput('IF' + i)) {\n      this.removeInput('IF' + i);\n      this.removeInput('DO' + i);\n      i++;\n    }\n    // Rebuild block.\n    for (i = 1; i <= this.elseifCount_; i++) {\n      this.appendValueInput('IF' + i)\n          .setCheck('Boolean')\n          .appendField(Blockly.Msg['CONTROLS_IF_MSG_ELSEIF']);\n      this.appendStatementInput('DO' + i)\n          .appendField(Blockly.Msg['CONTROLS_IF_MSG_THEN']);\n    }\n    if (this.elseCount_) {\n      this.appendStatementInput('ELSE')\n          .appendField(Blockly.Msg['CONTROLS_IF_MSG_ELSE']);\n    }\n  },\n  /**\n   * Reconnects child blocks.\n   * @param {!Array.<?Blockly.RenderedConnection>} valueConnections List of\n   * value connections for 'if' input.\n   * @param {!Array.<?Blockly.RenderedConnection>} statementConnections List of\n   * statement connections for 'do' input.\n   * @param {?Blockly.RenderedConnection} elseStatementConnection Statement\n   * connection for else input.\n   * @this {Blockly.Block}\n   */\n  reconnectChildBlocks_: function(valueConnections, statementConnections,\n      elseStatementConnection) {\n    for (var i = 1; i <= this.elseifCount_; i++) {\n      Blockly.Mutator.reconnect(valueConnections[i], this, 'IF' + i);\n      Blockly.Mutator.reconnect(statementConnections[i], this, 'DO' + i);\n    }\n    Blockly.Mutator.reconnect(elseStatementConnection, this, 'ELSE');\n  }\n};\n\nBlockly.Extensions.registerMutator('controls_if_mutator',\n    Blockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN, null,\n    ['controls_if_elseif', 'controls_if_else']);\n/**\n * \"controls_if\" extension function. Adds mutator, shape updating methods, and\n * dynamic tooltip to \"controls_if\" blocks.\n * @this {Blockly.Block}\n * @package\n */\nBlockly.Constants.Logic.CONTROLS_IF_TOOLTIP_EXTENSION = function() {\n\n  this.setTooltip(function() {\n    if (!this.elseifCount_ && !this.elseCount_) {\n      return Blockly.Msg['CONTROLS_IF_TOOLTIP_1'];\n    } else if (!this.elseifCount_ && this.elseCount_) {\n      return Blockly.Msg['CONTROLS_IF_TOOLTIP_2'];\n    } else if (this.elseifCount_ && !this.elseCount_) {\n      return Blockly.Msg['CONTROLS_IF_TOOLTIP_3'];\n    } else if (this.elseifCount_ && this.elseCount_) {\n      return Blockly.Msg['CONTROLS_IF_TOOLTIP_4'];\n    }\n    return '';\n  }.bind(this));\n};\n\nBlockly.Extensions.register('controls_if_tooltip',\n    Blockly.Constants.Logic.CONTROLS_IF_TOOLTIP_EXTENSION);\n\n/**\n * Adds dynamic type validation for the left and right sides of a logic_compare\n * block.\n * @mixin\n * @augments Blockly.Block\n * @package\n * @readonly\n */\nBlockly.Constants.Logic.LOGIC_COMPARE_ONCHANGE_MIXIN = {\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types from being compared.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this {Blockly.Block}\n   */\n  onchange: function(e) {\n    if (!this.prevBlocks_) {\n      this.prevBlocks_ = [null, null];\n    }\n\n    var blockA = this.getInputTargetBlock('A');\n    var blockB = this.getInputTargetBlock('B');\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if (blockA && blockB &&\n        !blockA.outputConnection.checkType(blockB.outputConnection)) {\n      // Mismatch between two inputs.  Revert the block connections,\n      // bumping away the newly connected block(s).\n      Blockly.Events.setGroup(e.group);\n      var prevA = this.prevBlocks_[0];\n      if (prevA !== blockA) {\n        blockA.unplug();\n        if (prevA && !prevA.isDisposed() && !prevA.isShadow()) {\n          // The shadow block is automatically replaced during unplug().\n          this.getInput('A').connection.connect(prevA.outputConnection);\n        }\n      }\n      var prevB = this.prevBlocks_[1];\n      if (prevB !== blockB) {\n        blockB.unplug();\n        if (prevB && !prevB.isDisposed() && !prevB.isShadow()) {\n          // The shadow block is automatically replaced during unplug().\n          this.getInput('B').connection.connect(prevB.outputConnection);\n        }\n      }\n      this.bumpNeighbours();\n      Blockly.Events.setGroup(false);\n    }\n    this.prevBlocks_[0] = this.getInputTargetBlock('A');\n    this.prevBlocks_[1] = this.getInputTargetBlock('B');\n  }\n};\n\n/**\n * \"logic_compare\" extension function. Adds type left and right side type\n * checking to \"logic_compare\" blocks.\n * @this {Blockly.Block}\n * @package\n * @readonly\n */\nBlockly.Constants.Logic.LOGIC_COMPARE_EXTENSION = function() {\n  // Add onchange handler to ensure types are compatible.\n  this.mixin(Blockly.Constants.Logic.LOGIC_COMPARE_ONCHANGE_MIXIN);\n};\n\nBlockly.Extensions.register('logic_compare',\n    Blockly.Constants.Logic.LOGIC_COMPARE_EXTENSION);\n\n/**\n * Adds type coordination between inputs and output.\n * @mixin\n * @augments Blockly.Block\n * @package\n * @readonly\n */\nBlockly.Constants.Logic.LOGIC_TERNARY_ONCHANGE_MIXIN = {\n  prevParentConnection_: null,\n\n  /**\n   * Called whenever anything on the workspace changes.\n   * Prevent mismatched types.\n   * @param {!Blockly.Events.Abstract} e Change event.\n   * @this {Blockly.Block}\n   */\n  onchange: function(e) {\n    var blockA = this.getInputTargetBlock('THEN');\n    var blockB = this.getInputTargetBlock('ELSE');\n    var parentConnection = this.outputConnection.targetConnection;\n    // Disconnect blocks that existed prior to this change if they don't match.\n    if ((blockA || blockB) && parentConnection) {\n      for (var i = 0; i < 2; i++) {\n        var block = (i == 1) ? blockA : blockB;\n        if (block && !block.outputConnection.checkType(parentConnection)) {\n          // Ensure that any disconnections are grouped with the causing event.\n          Blockly.Events.setGroup(e.group);\n          if (parentConnection === this.prevParentConnection_) {\n            this.unplug();\n            parentConnection.getSourceBlock().bumpNeighbours();\n          } else {\n            block.unplug();\n            block.bumpNeighbours();\n          }\n          Blockly.Events.setGroup(false);\n        }\n      }\n    }\n    this.prevParentConnection_ = parentConnection;\n  }\n};\n\nBlockly.Extensions.registerMixin('logic_ternary',\n    Blockly.Constants.Logic.LOGIC_TERNARY_ONCHANGE_MIXIN);\n"],"file":"logic.min.js"}