{"version":3,"sources":["../../../../src/blockly/generators/php/colour.js"],"names":["goog","provide","require","Blockly","PHP","block","code","quote_","getFieldValue","ORDER_ATOMIC","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","ORDER_FUNCTION_CALL","red","valueToCode","ORDER_COMMA","green","blue","c1","c2","ratio"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2015 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating PHP for colour blocks.\n * @author daarond@gmail.com (Daaron Dwyer)\n */\n'use strict';\n\ngoog.provide('Blockly.PHP.colour');\n\ngoog.require('Blockly.PHP');\n\n\nBlockly.PHP['colour_picker'] = function(block) {\n  // Colour picker.\n  var code = Blockly.PHP.quote_(block.getFieldValue('COLOUR'));\n  return [code, Blockly.PHP.ORDER_ATOMIC];\n};\n\nBlockly.PHP['colour_random'] = function(block) {\n  // Generate a random colour.\n  var functionName = Blockly.PHP.provideFunction_(\n      'colour_random',\n      ['function ' + Blockly.PHP.FUNCTION_NAME_PLACEHOLDER_ + '() {',\n       '  return \\'#\\' . str_pad(dechex(mt_rand(0, 0xFFFFFF)), ' +\n          '6, \\'0\\', STR_PAD_LEFT);',\n       '}']);\n  var code = functionName + '()';\n  return [code, Blockly.PHP.ORDER_FUNCTION_CALL];\n};\n\nBlockly.PHP['colour_rgb'] = function(block) {\n  // Compose a colour from RGB components expressed as percentages.\n  var red = Blockly.PHP.valueToCode(block, 'RED',\n      Blockly.PHP.ORDER_COMMA) || 0;\n  var green = Blockly.PHP.valueToCode(block, 'GREEN',\n      Blockly.PHP.ORDER_COMMA) || 0;\n  var blue = Blockly.PHP.valueToCode(block, 'BLUE',\n      Blockly.PHP.ORDER_COMMA) || 0;\n  var functionName = Blockly.PHP.provideFunction_(\n      'colour_rgb',\n      ['function ' + Blockly.PHP.FUNCTION_NAME_PLACEHOLDER_ +\n          '($r, $g, $b) {',\n       '  $r = round(max(min($r, 100), 0) * 2.55);',\n       '  $g = round(max(min($g, 100), 0) * 2.55);',\n       '  $b = round(max(min($b, 100), 0) * 2.55);',\n       '  $hex = \\'#\\';',\n       '  $hex .= str_pad(dechex($r), 2, \\'0\\', STR_PAD_LEFT);',\n       '  $hex .= str_pad(dechex($g), 2, \\'0\\', STR_PAD_LEFT);',\n       '  $hex .= str_pad(dechex($b), 2, \\'0\\', STR_PAD_LEFT);',\n       '  return $hex;',\n       '}']);\n  var code = functionName + '(' + red + ', ' + green + ', ' + blue + ')';\n  return [code, Blockly.PHP.ORDER_FUNCTION_CALL];\n};\n\nBlockly.PHP['colour_blend'] = function(block) {\n  // Blend two colours together.\n  var c1 = Blockly.PHP.valueToCode(block, 'COLOUR1',\n      Blockly.PHP.ORDER_COMMA) || '\\'#000000\\'';\n  var c2 = Blockly.PHP.valueToCode(block, 'COLOUR2',\n      Blockly.PHP.ORDER_COMMA) || '\\'#000000\\'';\n  var ratio = Blockly.PHP.valueToCode(block, 'RATIO',\n      Blockly.PHP.ORDER_COMMA) || 0.5;\n  var functionName = Blockly.PHP.provideFunction_(\n      'colour_blend',\n      ['function ' + Blockly.PHP.FUNCTION_NAME_PLACEHOLDER_ +\n          '($c1, $c2, $ratio) {',\n       '  $ratio = max(min($ratio, 1), 0);',\n       '  $r1 = hexdec(substr($c1, 1, 2));',\n       '  $g1 = hexdec(substr($c1, 3, 2));',\n       '  $b1 = hexdec(substr($c1, 5, 2));',\n       '  $r2 = hexdec(substr($c2, 1, 2));',\n       '  $g2 = hexdec(substr($c2, 3, 2));',\n       '  $b2 = hexdec(substr($c2, 5, 2));',\n       '  $r = round($r1 * (1 - $ratio) + $r2 * $ratio);',\n       '  $g = round($g1 * (1 - $ratio) + $g2 * $ratio);',\n       '  $b = round($b1 * (1 - $ratio) + $b2 * $ratio);',\n       '  $hex = \\'#\\';',\n       '  $hex .= str_pad(dechex($r), 2, \\'0\\', STR_PAD_LEFT);',\n       '  $hex .= str_pad(dechex($g), 2, \\'0\\', STR_PAD_LEFT);',\n       '  $hex .= str_pad(dechex($b), 2, \\'0\\', STR_PAD_LEFT);',\n       '  return $hex;',\n       '}']);\n  var code = functionName + '(' + c1 + ', ' + c2 + ', ' + ratio + ')';\n  return [code, Blockly.PHP.ORDER_FUNCTION_CALL];\n};\n"],"file":"colour.min.js"}