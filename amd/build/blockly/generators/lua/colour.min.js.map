{"version":3,"sources":["../../../../src/blockly/generators/lua/colour.js"],"names":["goog","provide","require","Blockly","Lua","block","code","quote_","getFieldValue","ORDER_ATOMIC","ORDER_HIGH","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","r","valueToCode","ORDER_NONE","g","b","colour1","colour2","ratio"],"mappings":"AAUA,aAEAA,IAAI,CAACC,OAAL,CAAa,oBAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,aAAb,EAGAC,OAAO,CAACC,GAAR,eAA+B,SAASC,CAAT,CAAgB,CAE7C,GAAIC,CAAAA,CAAI,CAAGH,OAAO,CAACC,GAAR,CAAYG,MAAZ,CAAmBF,CAAK,CAACG,aAAN,CAAoB,QAApB,CAAnB,CAAX,CACA,MAAO,CAACF,CAAD,CAAOH,OAAO,CAACC,GAAR,CAAYK,YAAnB,CACR,CAJD,CAMAN,OAAO,CAACC,GAAR,eAA+B,UAAgB,CAG7C,MAAO,sDAAOD,OAAO,CAACC,GAAR,CAAYM,UAAnB,CACR,CAJD,CAMAP,OAAO,CAACC,GAAR,YAA4B,SAASC,CAAT,CAAgB,IAEtCM,CAAAA,CAAY,CAAGR,OAAO,CAACC,GAAR,CAAYQ,gBAAZ,CACf,YADe,CAEf,CAAC,YAAcT,OAAO,CAACC,GAAR,CAAYS,0BAA1B,CAAuD,WAAxD,CACC,6DADD,CAEC,6DAFD,CAGC,6DAHD,CAIC,oDAJD,CAKC,KALD,CAFe,CAFuB,CAUtCC,CAAC,CAAGX,OAAO,CAACC,GAAR,CAAYW,WAAZ,CAAwBV,CAAxB,CAA+B,KAA/B,CACJF,OAAO,CAACC,GAAR,CAAYY,UADR,GACuB,CAXW,CAYtCC,CAAC,CAAGd,OAAO,CAACC,GAAR,CAAYW,WAAZ,CAAwBV,CAAxB,CAA+B,OAA/B,CACJF,OAAO,CAACC,GAAR,CAAYY,UADR,GACuB,CAbW,CActCE,CAAC,CAAGf,OAAO,CAACC,GAAR,CAAYW,WAAZ,CAAwBV,CAAxB,CAA+B,MAA/B,CACJF,OAAO,CAACC,GAAR,CAAYY,UADR,GACuB,CAfW,CAiB1C,MAAO,CADIL,CAAY,CAAG,GAAf,CAAqBG,CAArB,CAAyB,IAAzB,CAAgCG,CAAhC,CAAoC,IAApC,CAA2CC,CAA3C,CAA+C,GACnD,CAAOf,OAAO,CAACC,GAAR,CAAYM,UAAnB,CACR,CAlBD,CAoBAP,OAAO,CAACC,GAAR,cAA8B,SAASC,CAAT,CAAgB,IAExCM,CAAAA,CAAY,CAAGR,OAAO,CAACC,GAAR,CAAYQ,gBAAZ,CACf,cADe,CAEf,CAAC,YAAcT,OAAO,CAACC,GAAR,CAAYS,0BAA1B,CACI,2BADL,CAEC,sDAFD,CAGC,sDAHD,CAIC,sDAJD,CAKC,sDALD,CAMC,sDAND,CAOC,sDAPD,CAQC,iDARD,CASC,4DATD,CAUC,4DAVD,CAWC,4DAXD,CAYC,oDAZD,CAaC,KAbD,CAFe,CAFyB,CAkBxCM,CAAO,CAAGhB,OAAO,CAACC,GAAR,CAAYW,WAAZ,CAAwBV,CAAxB,CAA+B,SAA/B,CACVF,OAAO,CAACC,GAAR,CAAYY,UADF,GACiB,WAnBa,CAoBxCI,CAAO,CAAGjB,OAAO,CAACC,GAAR,CAAYW,WAAZ,CAAwBV,CAAxB,CAA+B,SAA/B,CACVF,OAAO,CAACC,GAAR,CAAYY,UADF,GACiB,WArBa,CAsBxCK,CAAK,CAAGlB,OAAO,CAACC,GAAR,CAAYW,WAAZ,CAAwBV,CAAxB,CAA+B,OAA/B,CACRF,OAAO,CAACC,GAAR,CAAYY,UADJ,GACmB,CAvBa,CAyB5C,MAAO,CADIL,CAAY,CAAG,GAAf,CAAqBQ,CAArB,CAA+B,IAA/B,CAAsCC,CAAtC,CAAgD,IAAhD,CAAuDC,CAAvD,CAA+D,GACnE,CAAOlB,OAAO,CAACC,GAAR,CAAYM,UAAnB,CACR,CA1BD","sourcesContent":["/**\n * @license\n * Copyright 2016 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating Lua for colour blocks.\n * @author rodrigoq@google.com (Rodrigo Queiro)\n */\n'use strict';\n\ngoog.provide('Blockly.Lua.colour');\n\ngoog.require('Blockly.Lua');\n\n\nBlockly.Lua['colour_picker'] = function(block) {\n  // Colour picker.\n  var code = Blockly.Lua.quote_(block.getFieldValue('COLOUR'));\n  return [code, Blockly.Lua.ORDER_ATOMIC];\n};\n\nBlockly.Lua['colour_random'] = function(block) {\n  // Generate a random colour.\n  var code = 'string.format(\"#%06x\", math.random(0, 2^24 - 1))';\n  return [code, Blockly.Lua.ORDER_HIGH];\n};\n\nBlockly.Lua['colour_rgb'] = function(block) {\n  // Compose a colour from RGB components expressed as percentages.\n  var functionName = Blockly.Lua.provideFunction_(\n      'colour_rgb',\n      ['function ' + Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_ + '(r, g, b)',\n       '  r = math.floor(math.min(100, math.max(0, r)) * 2.55 + .5)',\n       '  g = math.floor(math.min(100, math.max(0, g)) * 2.55 + .5)',\n       '  b = math.floor(math.min(100, math.max(0, b)) * 2.55 + .5)',\n       '  return string.format(\"#%02x%02x%02x\", r, g, b)',\n       'end']);\n  var r = Blockly.Lua.valueToCode(block, 'RED',\n      Blockly.Lua.ORDER_NONE) || 0;\n  var g = Blockly.Lua.valueToCode(block, 'GREEN',\n      Blockly.Lua.ORDER_NONE) || 0;\n  var b = Blockly.Lua.valueToCode(block, 'BLUE',\n      Blockly.Lua.ORDER_NONE) || 0;\n  var code = functionName + '(' + r + ', ' + g + ', ' + b + ')';\n  return [code, Blockly.Lua.ORDER_HIGH];\n};\n\nBlockly.Lua['colour_blend'] = function(block) {\n  // Blend two colours together.\n  var functionName = Blockly.Lua.provideFunction_(\n      'colour_blend',\n      ['function ' + Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_ +\n           '(colour1, colour2, ratio)',\n       '  local r1 = tonumber(string.sub(colour1, 2, 3), 16)',\n       '  local r2 = tonumber(string.sub(colour2, 2, 3), 16)',\n       '  local g1 = tonumber(string.sub(colour1, 4, 5), 16)',\n       '  local g2 = tonumber(string.sub(colour2, 4, 5), 16)',\n       '  local b1 = tonumber(string.sub(colour1, 6, 7), 16)',\n       '  local b2 = tonumber(string.sub(colour2, 6, 7), 16)',\n       '  local ratio = math.min(1, math.max(0, ratio))',\n       '  local r = math.floor(r1 * (1 - ratio) + r2 * ratio + .5)',\n       '  local g = math.floor(g1 * (1 - ratio) + g2 * ratio + .5)',\n       '  local b = math.floor(b1 * (1 - ratio) + b2 * ratio + .5)',\n       '  return string.format(\"#%02x%02x%02x\", r, g, b)',\n       'end']);\n  var colour1 = Blockly.Lua.valueToCode(block, 'COLOUR1',\n      Blockly.Lua.ORDER_NONE) || '\\'#000000\\'';\n  var colour2 = Blockly.Lua.valueToCode(block, 'COLOUR2',\n      Blockly.Lua.ORDER_NONE) || '\\'#000000\\'';\n  var ratio = Blockly.Lua.valueToCode(block, 'RATIO',\n      Blockly.Lua.ORDER_NONE) || 0;\n  var code = functionName + '(' + colour1 + ', ' + colour2 + ', ' + ratio + ')';\n  return [code, Blockly.Lua.ORDER_HIGH];\n};\n"],"file":"colour.min.js"}