'use strict';goog.provide("Blockly.Lua.math");goog.require("Blockly.Lua");Blockly.Lua.math_number=function(a){var b=+a.getFieldValue("NUM"),c=0>b?Blockly.Lua.ORDER_UNARY:Blockly.Lua.ORDER_ATOMIC;return[b,c]};Blockly.Lua.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Lua.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Lua.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Lua.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Lua.ORDER_MULTIPLICATIVE],POWER:[" ^ ",Blockly.Lua.ORDER_EXPONENTIATION]},c=b[a.getFieldValue("OP")],d=c[0],e=c[1],f=Blockly.Lua.valueToCode(a,"A",e)||"0",g=Blockly.Lua.valueToCode(a,"B",e)||"0";return[f+d+g,e]};Blockly.Lua.math_single=function(a){var b=a.getFieldValue("OP"),c,d;if("NEG"==b){d=Blockly.Lua.valueToCode(a,"NUM",Blockly.Lua.ORDER_UNARY)||"0";return["-"+d,Blockly.Lua.ORDER_UNARY]}if("POW10"==b){d=Blockly.Lua.valueToCode(a,"NUM",Blockly.Lua.ORDER_EXPONENTIATION)||"0";return["10 ^ "+d,Blockly.Lua.ORDER_EXPONENTIATION]}if("ROUND"==b){d=Blockly.Lua.valueToCode(a,"NUM",Blockly.Lua.ORDER_ADDITIVE)||"0"}else{d=Blockly.Lua.valueToCode(a,"NUM",Blockly.Lua.ORDER_NONE)||"0"}switch(b){case"ABS":c="math.abs("+d+")";break;case"ROOT":c="math.sqrt("+d+")";break;case"LN":c="math.log("+d+")";break;case"LOG10":c="math.log("+d+", 10)";break;case"EXP":c="math.exp("+d+")";break;case"ROUND":c="math.floor("+d+" + .5)";break;case"ROUNDUP":c="math.ceil("+d+")";break;case"ROUNDDOWN":c="math.floor("+d+")";break;case"SIN":c="math.sin(math.rad("+d+"))";break;case"COS":c="math.cos(math.rad("+d+"))";break;case"TAN":c="math.tan(math.rad("+d+"))";break;case"ASIN":c="math.deg(math.asin("+d+"))";break;case"ACOS":c="math.deg(math.acos("+d+"))";break;case"ATAN":c="math.deg(math.atan("+d+"))";break;default:throw Error("Unknown math operator: "+b);}return[c,Blockly.Lua.ORDER_HIGH]};Blockly.Lua.math_constant=function(a){var b={PI:["math.pi",Blockly.Lua.ORDER_HIGH],E:["math.exp(1)",Blockly.Lua.ORDER_HIGH],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Lua.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Lua.ORDER_HIGH],SQRT1_2:["math.sqrt(1 / 2)",Blockly.Lua.ORDER_HIGH],INFINITY:["math.huge",Blockly.Lua.ORDER_HIGH]};return b[a.getFieldValue("CONSTANT")]};Blockly.Lua.math_number_property=function(a){var b=Blockly.Lua.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Lua.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY"),d;if("PRIME"==c){var e=Blockly.Lua.provideFunction_("math_isPrime",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(n)","  -- https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  if n == 2 or n == 3 then","    return true","  end","  -- False if n is NaN, negative, is 1, or not whole.","  -- And false if n is divisible by 2 or 3.","  if not(n > 1) or n % 1 ~= 0 or n % 2 == 0 or n % 3 == 0 then","    return false","  end","  -- Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x = 6, math.sqrt(n) + 1.5, 6 do","    if n % (x - 1) == 0 or n % (x + 1) == 0 then","      return false","    end","  end","  return true","end"]);d=e+"("+b+")";return[d,Blockly.Lua.ORDER_HIGH]}switch(c){case"EVEN":d=b+" % 2 == 0";break;case"ODD":d=b+" % 2 == 1";break;case"WHOLE":d=b+" % 1 == 0";break;case"POSITIVE":d=b+" > 0";break;case"NEGATIVE":d=b+" < 0";break;case"DIVISIBLE_BY":var f=Blockly.Lua.valueToCode(a,"DIVISOR",Blockly.Lua.ORDER_MULTIPLICATIVE);if(!f||"0"==f){return["nil",Blockly.Lua.ORDER_ATOMIC]}d=b+" % "+f+" == 0";break;}return[d,Blockly.Lua.ORDER_RELATIONAL]};Blockly.Lua.math_change=function(a){var b=Blockly.Lua.valueToCode(a,"DELTA",Blockly.Lua.ORDER_ADDITIVE)||"0",c=Blockly.Lua.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return c+" = "+c+" + "+b+"\n"};Blockly.Lua.math_round=Blockly.Lua.math_single;Blockly.Lua.math_trig=Blockly.Lua.math_single;Blockly.Lua.math_on_list=function(a){var c=a.getFieldValue("OP"),d=Blockly.Lua.valueToCode(a,"LIST",Blockly.Lua.ORDER_NONE)||"{}",e;function b(){return Blockly.Lua.provideFunction_("math_sum",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  local result = 0","  for _, v in ipairs(t) do","    result = result + v","  end","  return result","end"])}switch(c){case"SUM":e=b();break;case"MIN":e=Blockly.Lua.provideFunction_("math_min",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  if #t == 0 then","    return 0","  end","  local result = math.huge","  for _, v in ipairs(t) do","    if v < result then","      result = v","    end","  end","  return result","end"]);break;case"AVERAGE":e=Blockly.Lua.provideFunction_("math_average",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  if #t == 0 then","    return 0","  end","  return "+b()+"(t) / #t","end"]);break;case"MAX":e=Blockly.Lua.provideFunction_("math_max",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  if #t == 0 then","    return 0","  end","  local result = -math.huge","  for _, v in ipairs(t) do","    if v > result then","      result = v","    end","  end","  return result","end"]);break;case"MEDIAN":e=Blockly.Lua.provideFunction_("math_median",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  -- Source: http://lua-users.org/wiki/SimpleStats","  if #t == 0 then","    return 0","  end","  local temp={}","  for _, v in ipairs(t) do","    if type(v) == \"number\" then","      table.insert(temp, v)","    end","  end","  table.sort(temp)","  if #temp % 2 == 0 then","    return (temp[#temp/2] + temp[(#temp/2)+1]) / 2","  else","    return temp[math.ceil(#temp/2)]","  end","end"]);break;case"MODE":e=Blockly.Lua.provideFunction_("math_modes",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  -- Source: http://lua-users.org/wiki/SimpleStats","  local counts={}","  for _, v in ipairs(t) do","    if counts[v] == nil then","      counts[v] = 1","    else","      counts[v] = counts[v] + 1","    end","  end","  local biggestCount = 0","  for _, v  in pairs(counts) do","    if v > biggestCount then","      biggestCount = v","    end","  end","  local temp={}","  for k, v in pairs(counts) do","    if v == biggestCount then","      table.insert(temp, k)","    end","  end","  return temp","end"]);break;case"STD_DEV":e=Blockly.Lua.provideFunction_("math_standard_deviation",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  local m","  local vm","  local total = 0","  local count = 0","  local result","  m = #t == 0 and 0 or "+b()+"(t) / #t","  for _, v in ipairs(t) do","    if type(v) == 'number' then","      vm = v - m","      total = total + (vm * vm)","      count = count + 1","    end","  end","  result = math.sqrt(total / (count-1))","  return result","end"]);break;case"RANDOM":e=Blockly.Lua.provideFunction_("math_random_list",["function "+Blockly.Lua.FUNCTION_NAME_PLACEHOLDER_+"(t)","  if #t == 0 then","    return nil","  end","  return t[math.random(#t)]","end"]);break;default:throw Error("Unknown operator: "+c);}return[e+"("+d+")",Blockly.Lua.ORDER_HIGH]};Blockly.Lua.math_modulo=function(a){var b=Blockly.Lua.valueToCode(a,"DIVIDEND",Blockly.Lua.ORDER_MULTIPLICATIVE)||"0",c=Blockly.Lua.valueToCode(a,"DIVISOR",Blockly.Lua.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+c,Blockly.Lua.ORDER_MULTIPLICATIVE]};Blockly.Lua.math_constrain=function(a){var b=Blockly.Lua.valueToCode(a,"VALUE",Blockly.Lua.ORDER_NONE)||"0",c=Blockly.Lua.valueToCode(a,"LOW",Blockly.Lua.ORDER_NONE)||"-math.huge",d=Blockly.Lua.valueToCode(a,"HIGH",Blockly.Lua.ORDER_NONE)||"math.huge";return["math.min(math.max("+b+", "+c+"), "+d+")",Blockly.Lua.ORDER_HIGH]};Blockly.Lua.math_random_int=function(a){var b=Blockly.Lua.valueToCode(a,"FROM",Blockly.Lua.ORDER_NONE)||"0",c=Blockly.Lua.valueToCode(a,"TO",Blockly.Lua.ORDER_NONE)||"0";return["math.random("+b+", "+c+")",Blockly.Lua.ORDER_HIGH]};Blockly.Lua.math_random_float=function(){return["math.random()",Blockly.Lua.ORDER_HIGH]};Blockly.Lua.math_atan2=function(a){var b=Blockly.Lua.valueToCode(a,"X",Blockly.Lua.ORDER_NONE)||"0",c=Blockly.Lua.valueToCode(a,"Y",Blockly.Lua.ORDER_NONE)||"0";return["math.deg(math.atan2("+c+", "+b+"))",Blockly.Lua.ORDER_HIGH]};
//# sourceMappingURL=math.min.js.map
