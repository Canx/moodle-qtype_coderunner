{"version":3,"sources":["../../../../src/blockly/generators/python/variables.js"],"names":["goog","provide","require","Blockly","Python","block","code","variableDB_","getName","getFieldValue","VARIABLE_CATEGORY_NAME","ORDER_ATOMIC","argument0","valueToCode","ORDER_NONE","varName"],"mappings":"AAUA,aAEAA,IAAI,CAACC,OAAL,CAAa,0BAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,gBAAb,EAGAC,OAAO,CAACC,MAAR,eAAkC,SAASC,CAAT,CAAgB,CAEhD,GAAIC,CAAAA,CAAI,CAAGH,OAAO,CAACC,MAAR,CAAeG,WAAf,CAA2BC,OAA3B,CAAmCH,CAAK,CAACI,aAAN,CAAoB,KAApB,CAAnC,CACPN,OAAO,CAACO,sBADD,CAAX,CAEA,MAAO,CAACJ,CAAD,CAAOH,OAAO,CAACC,MAAR,CAAeO,YAAtB,CACR,CALD,CAOAR,OAAO,CAACC,MAAR,eAAkC,SAASC,CAAT,CAAgB,IAE5CO,CAAAA,CAAS,CAAGT,OAAO,CAACC,MAAR,CAAeS,WAAf,CAA2BR,CAA3B,CAAkC,OAAlC,CACZF,OAAO,CAACC,MAAR,CAAeU,UADH,GACkB,GAHc,CAI5CC,CAAO,CAAGZ,OAAO,CAACC,MAAR,CAAeG,WAAf,CAA2BC,OAA3B,CAAmCH,CAAK,CAACI,aAAN,CAAoB,KAApB,CAAnC,CACVN,OAAO,CAACO,sBADE,CAJkC,CAMhD,MAAOK,CAAAA,CAAO,CAAG,KAAV,CAAkBH,CAAlB,CAA8B,IACtC,CAPD","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating Python for variable blocks.\n * @author q.neutron@gmail.com (Quynh Neutron)\n */\n'use strict';\n\ngoog.provide('Blockly.Python.variables');\n\ngoog.require('Blockly.Python');\n\n\nBlockly.Python['variables_get'] = function(block) {\n  // Variable getter.\n  var code = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.VARIABLE_CATEGORY_NAME);\n  return [code, Blockly.Python.ORDER_ATOMIC];\n};\n\nBlockly.Python['variables_set'] = function(block) {\n  // Variable setter.\n  var argument0 = Blockly.Python.valueToCode(block, 'VALUE',\n      Blockly.Python.ORDER_NONE) || '0';\n  var varName = Blockly.Python.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.VARIABLE_CATEGORY_NAME);\n  return varName + ' = ' + argument0 + '\\n';\n};\n"],"file":"variables.min.js"}