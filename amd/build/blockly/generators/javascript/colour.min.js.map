{"version":3,"sources":["../../../../src/blockly/generators/javascript/colour.js"],"names":["goog","provide","require","Blockly","JavaScript","block","code","quote_","getFieldValue","ORDER_ATOMIC","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","ORDER_FUNCTION_CALL","red","valueToCode","ORDER_COMMA","green","blue","c1","c2","ratio"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for colour blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.JavaScript.colour');\n\ngoog.require('Blockly.JavaScript');\n\n\nBlockly.JavaScript['colour_picker'] = function(block) {\n  // Colour picker.\n  var code = Blockly.JavaScript.quote_(block.getFieldValue('COLOUR'));\n  return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['colour_random'] = function(block) {\n  // Generate a random colour.\n  var functionName = Blockly.JavaScript.provideFunction_(\n      'colourRandom',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ + '() {',\n        '  var num = Math.floor(Math.random() * Math.pow(2, 24));',\n        '  return \\'#\\' + (\\'00000\\' + num.toString(16)).substr(-6);',\n        '}']);\n  var code = functionName + '()';\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['colour_rgb'] = function(block) {\n  // Compose a colour from RGB components expressed as percentages.\n  var red = Blockly.JavaScript.valueToCode(block, 'RED',\n      Blockly.JavaScript.ORDER_COMMA) || 0;\n  var green = Blockly.JavaScript.valueToCode(block, 'GREEN',\n      Blockly.JavaScript.ORDER_COMMA) || 0;\n  var blue = Blockly.JavaScript.valueToCode(block, 'BLUE',\n      Blockly.JavaScript.ORDER_COMMA) || 0;\n  var functionName = Blockly.JavaScript.provideFunction_(\n      'colourRgb',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n          '(r, g, b) {',\n       '  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;',\n       '  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;',\n       '  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;',\n       '  r = (\\'0\\' + (Math.round(r) || 0).toString(16)).slice(-2);',\n       '  g = (\\'0\\' + (Math.round(g) || 0).toString(16)).slice(-2);',\n       '  b = (\\'0\\' + (Math.round(b) || 0).toString(16)).slice(-2);',\n       '  return \\'#\\' + r + g + b;',\n       '}']);\n  var code = functionName + '(' + red + ', ' + green + ', ' + blue + ')';\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['colour_blend'] = function(block) {\n  // Blend two colours together.\n  var c1 = Blockly.JavaScript.valueToCode(block, 'COLOUR1',\n      Blockly.JavaScript.ORDER_COMMA) || '\\'#000000\\'';\n  var c2 = Blockly.JavaScript.valueToCode(block, 'COLOUR2',\n      Blockly.JavaScript.ORDER_COMMA) || '\\'#000000\\'';\n  var ratio = Blockly.JavaScript.valueToCode(block, 'RATIO',\n      Blockly.JavaScript.ORDER_COMMA) || 0.5;\n  var functionName = Blockly.JavaScript.provideFunction_(\n      'colourBlend',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n          '(c1, c2, ratio) {',\n       '  ratio = Math.max(Math.min(Number(ratio), 1), 0);',\n       '  var r1 = parseInt(c1.substring(1, 3), 16);',\n       '  var g1 = parseInt(c1.substring(3, 5), 16);',\n       '  var b1 = parseInt(c1.substring(5, 7), 16);',\n       '  var r2 = parseInt(c2.substring(1, 3), 16);',\n       '  var g2 = parseInt(c2.substring(3, 5), 16);',\n       '  var b2 = parseInt(c2.substring(5, 7), 16);',\n       '  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);',\n       '  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);',\n       '  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);',\n       '  r = (\\'0\\' + (r || 0).toString(16)).slice(-2);',\n       '  g = (\\'0\\' + (g || 0).toString(16)).slice(-2);',\n       '  b = (\\'0\\' + (b || 0).toString(16)).slice(-2);',\n       '  return \\'#\\' + r + g + b;',\n       '}']);\n  var code = functionName + '(' + c1 + ', ' + c2 + ', ' + ratio + ')';\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n"],"file":"colour.min.js"}