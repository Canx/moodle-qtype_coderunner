{"version":3,"sources":["../../../../src/blockly/generators/javascript/lists.js"],"names":["goog","provide","require","Blockly","JavaScript","ORDER_ATOMIC","block","elements","Array","itemCount_","i","valueToCode","ORDER_COMMA","code","join","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","element","repeatCount","ORDER_FUNCTION_CALL","list","ORDER_MEMBER","ORDER_LOGICAL_NOT","operator","getFieldValue","item","ORDER_NONE","workspace","options","oneBasedIndex","ORDER_ADDITION","mode","where","listOrder","at","getAdjusted","Error","value","ORDER_ASSIGNMENT","cacheList","match","listVar","variableDB_","getDistinctName","VARIABLE_CATEGORY_NAME","ORDER_SUBTRACTION","xVar","lists","getIndex_","listName","opt_at","where1","where2","at1","at2","wherePascalCase","direction","type","getCompareFunctionName","input","delimiter"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for list blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.JavaScript.lists');\n\ngoog.require('Blockly.JavaScript');\n\n\nBlockly.JavaScript['lists_create_empty'] = function(block) {\n  // Create an empty list.\n  return ['[]', Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['lists_create_with'] = function(block) {\n  // Create a list with any number of elements of any type.\n  var elements = new Array(block.itemCount_);\n  for (var i = 0; i < block.itemCount_; i++) {\n    elements[i] = Blockly.JavaScript.valueToCode(block, 'ADD' + i,\n        Blockly.JavaScript.ORDER_COMMA) || 'null';\n  }\n  var code = '[' + elements.join(', ') + ']';\n  return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['lists_repeat'] = function(block) {\n  // Create a list with one element repeated.\n  var functionName = Blockly.JavaScript.provideFunction_(\n      'listsRepeat',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n          '(value, n) {',\n       '  var array = [];',\n       '  for (var i = 0; i < n; i++) {',\n       '    array[i] = value;',\n       '  }',\n       '  return array;',\n       '}']);\n  var element = Blockly.JavaScript.valueToCode(block, 'ITEM',\n      Blockly.JavaScript.ORDER_COMMA) || 'null';\n  var repeatCount = Blockly.JavaScript.valueToCode(block, 'NUM',\n      Blockly.JavaScript.ORDER_COMMA) || '0';\n  var code = functionName + '(' + element + ', ' + repeatCount + ')';\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['lists_length'] = function(block) {\n  // String or array length.\n  var list = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_MEMBER) || '[]';\n  return [list + '.length', Blockly.JavaScript.ORDER_MEMBER];\n};\n\nBlockly.JavaScript['lists_isEmpty'] = function(block) {\n  // Is the string null or array empty?\n  var list = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_MEMBER) || '[]';\n  return ['!' + list + '.length', Blockly.JavaScript.ORDER_LOGICAL_NOT];\n};\n\nBlockly.JavaScript['lists_indexOf'] = function(block) {\n  // Find an item in the list.\n  var operator = block.getFieldValue('END') == 'FIRST' ?\n      'indexOf' : 'lastIndexOf';\n  var item = Blockly.JavaScript.valueToCode(block, 'FIND',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  var list = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_MEMBER) || '[]';\n  var code = list + '.' + operator + '(' + item + ')';\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', Blockly.JavaScript.ORDER_ADDITION];\n  }\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['lists_getIndex'] = function(block) {\n  // Get element at index.\n  // Note: Until January 2013 this block did not have MODE or WHERE inputs.\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var listOrder = (where == 'RANDOM') ? Blockly.JavaScript.ORDER_COMMA :\n      Blockly.JavaScript.ORDER_MEMBER;\n  var list = Blockly.JavaScript.valueToCode(block, 'VALUE', listOrder) || '[]';\n\n  switch (where) {\n    case ('FIRST'):\n      if (mode == 'GET') {\n        var code = list + '[0]';\n        return [code, Blockly.JavaScript.ORDER_MEMBER];\n      } else if (mode == 'GET_REMOVE') {\n        var code = list + '.shift()';\n        return [code, Blockly.JavaScript.ORDER_MEMBER];\n      } else if (mode == 'REMOVE') {\n        return list + '.shift();\\n';\n      }\n      break;\n    case ('LAST'):\n      if (mode == 'GET') {\n        var code = list + '.slice(-1)[0]';\n        return [code, Blockly.JavaScript.ORDER_MEMBER];\n      } else if (mode == 'GET_REMOVE') {\n        var code = list + '.pop()';\n        return [code, Blockly.JavaScript.ORDER_MEMBER];\n      } else if (mode == 'REMOVE') {\n        return list + '.pop();\\n';\n      }\n      break;\n    case ('FROM_START'):\n      var at = Blockly.JavaScript.getAdjusted(block, 'AT');\n      if (mode == 'GET') {\n        var code = list + '[' + at + ']';\n        return [code, Blockly.JavaScript.ORDER_MEMBER];\n      } else if (mode == 'GET_REMOVE') {\n        var code = list + '.splice(' + at + ', 1)[0]';\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode == 'REMOVE') {\n        return list + '.splice(' + at + ', 1);\\n';\n      }\n      break;\n    case ('FROM_END'):\n      var at = Blockly.JavaScript.getAdjusted(block, 'AT', 1, true);\n      if (mode == 'GET') {\n        var code = list + '.slice(' + at + ')[0]';\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode == 'GET_REMOVE') {\n        var code = list + '.splice(' + at + ', 1)[0]';\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode == 'REMOVE') {\n        return list + '.splice(' + at + ', 1);';\n      }\n      break;\n    case ('RANDOM'):\n      var functionName = Blockly.JavaScript.provideFunction_(\n          'listsGetRandomItem',\n          ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n              '(list, remove) {',\n           '  var x = Math.floor(Math.random() * list.length);',\n           '  if (remove) {',\n           '    return list.splice(x, 1)[0];',\n           '  } else {',\n           '    return list[x];',\n           '  }',\n           '}']);\n      code = functionName + '(' + list + ', ' + (mode != 'GET') + ')';\n      if (mode == 'GET' || mode == 'GET_REMOVE') {\n        return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode == 'REMOVE') {\n        return code + ';\\n';\n      }\n      break;\n  }\n  throw Error('Unhandled combination (lists_getIndex).');\n};\n\nBlockly.JavaScript['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  var list = Blockly.JavaScript.valueToCode(block, 'LIST',\n      Blockly.JavaScript.ORDER_MEMBER) || '[]';\n  var mode = block.getFieldValue('MODE') || 'GET';\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var value = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_ASSIGNMENT) || 'null';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    var listVar = Blockly.JavaScript.variableDB_.getDistinctName(\n        'tmpList', Blockly.VARIABLE_CATEGORY_NAME);\n    var code = 'var ' + listVar + ' = ' + list + ';\\n';\n    list = listVar;\n    return code;\n  }\n  switch (where) {\n    case ('FIRST'):\n      if (mode == 'SET') {\n        return list + '[0] = ' + value + ';\\n';\n      } else if (mode == 'INSERT') {\n        return list + '.unshift(' + value + ');\\n';\n      }\n      break;\n    case ('LAST'):\n      if (mode == 'SET') {\n        var code = cacheList();\n        code += list + '[' + list + '.length - 1] = ' + value + ';\\n';\n        return code;\n      } else if (mode == 'INSERT') {\n        return list + '.push(' + value + ');\\n';\n      }\n      break;\n    case ('FROM_START'):\n      var at = Blockly.JavaScript.getAdjusted(block, 'AT');\n      if (mode == 'SET') {\n        return list + '[' + at + '] = ' + value + ';\\n';\n      } else if (mode == 'INSERT') {\n        return list + '.splice(' + at + ', 0, ' + value + ');\\n';\n      }\n      break;\n    case ('FROM_END'):\n      var at = Blockly.JavaScript.getAdjusted(block, 'AT', 1, false,\n          Blockly.JavaScript.ORDER_SUBTRACTION);\n      var code = cacheList();\n      if (mode == 'SET') {\n        code += list + '[' + list + '.length - ' + at + '] = ' + value + ';\\n';\n        return code;\n      } else if (mode == 'INSERT') {\n        code += list + '.splice(' + list + '.length - ' + at + ', 0, ' + value +\n            ');\\n';\n        return code;\n      }\n      break;\n    case ('RANDOM'):\n      var code = cacheList();\n      var xVar = Blockly.JavaScript.variableDB_.getDistinctName(\n          'tmpX', Blockly.VARIABLE_CATEGORY_NAME);\n      code += 'var ' + xVar + ' = Math.floor(Math.random() * ' + list +\n          '.length);\\n';\n      if (mode == 'SET') {\n        code += list + '[' + xVar + '] = ' + value + ';\\n';\n        return code;\n      } else if (mode == 'INSERT') {\n        code += list + '.splice(' + xVar + ', 0, ' + value + ');\\n';\n        return code;\n      }\n      break;\n  }\n  throw Error('Unhandled combination (lists_setIndex).');\n};\n\n/**\n * Returns an expression calculating the index into a list.\n * @param {string} listName Name of the list, used to calculate length.\n * @param {string} where The method of indexing, selected by dropdown in Blockly\n * @param {string=} opt_at The optional offset when indexing from start/end.\n * @return {string|undefined} Index expression.\n * @private\n */\nBlockly.JavaScript.lists.getIndex_ = function(listName, where, opt_at) {\n  if (where == 'FIRST') {\n    return '0';\n  } else if (where == 'FROM_END') {\n    return listName + '.length - 1 - ' + opt_at;\n  } else if (where == 'LAST') {\n    return listName + '.length - 1';\n  } else {\n    return opt_at;\n  }\n};\n\nBlockly.JavaScript['lists_getSublist'] = function(block) {\n  // Get sublist.\n  var list = Blockly.JavaScript.valueToCode(block, 'LIST',\n      Blockly.JavaScript.ORDER_MEMBER) || '[]';\n  var where1 = block.getFieldValue('WHERE1');\n  var where2 = block.getFieldValue('WHERE2');\n  if (where1 == 'FIRST' && where2 == 'LAST') {\n    var code = list + '.slice(0)';\n  } else if (list.match(/^\\w+$/) ||\n      (where1 != 'FROM_END' && where2 == 'FROM_START')) {\n    // If the list is a variable or doesn't require a call for length, don't\n    // generate a helper function.\n    switch (where1) {\n      case 'FROM_START':\n        var at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        var at1 = Blockly.JavaScript.getAdjusted(block, 'AT1', 1, false,\n            Blockly.JavaScript.ORDER_SUBTRACTION);\n        at1 = list + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        var at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (lists_getSublist).');\n    }\n    switch (where2) {\n      case 'FROM_START':\n        var at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        var at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 0, false,\n            Blockly.JavaScript.ORDER_SUBTRACTION);\n        at2 = list + '.length - ' + at2;\n        break;\n      case 'LAST':\n        var at2 = list + '.length';\n        break;\n      default:\n        throw Error('Unhandled option (lists_getSublist).');\n    }\n    code = list + '.slice(' + at1 + ', ' + at2 + ')';\n  } else {\n    var at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n    var at2 = Blockly.JavaScript.getAdjusted(block, 'AT2');\n    var getIndex_ = Blockly.JavaScript.lists.getIndex_;\n    var wherePascalCase = {'FIRST': 'First', 'LAST': 'Last',\n        'FROM_START': 'FromStart', 'FROM_END': 'FromEnd'};\n    var functionName = Blockly.JavaScript.provideFunction_(\n        'subsequence' + wherePascalCase[where1] + wherePascalCase[where2],\n        ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n            '(sequence' +\n            // The value for 'FROM_END' and'FROM_START' depends on `at` so\n            // we add it as a parameter.\n            ((where1 == 'FROM_END' || where1 == 'FROM_START') ? ', at1' : '') +\n            ((where2 == 'FROM_END' || where2 == 'FROM_START') ? ', at2' : '') +\n            ') {',\n          '  var start = ' + getIndex_('sequence', where1, 'at1') + ';',\n          '  var end = ' + getIndex_('sequence', where2, 'at2') + ' + 1;',\n          '  return sequence.slice(start, end);',\n          '}']);\n    var code = functionName + '(' + list +\n        // The value for 'FROM_END' and 'FROM_START' depends on `at` so we\n        // pass it.\n        ((where1 == 'FROM_END' || where1 == 'FROM_START') ? ', ' + at1 : '') +\n        ((where2 == 'FROM_END' || where2 == 'FROM_START') ? ', ' + at2 : '') +\n        ')';\n  }\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['lists_sort'] = function(block) {\n  // Block for sorting a list.\n  var list = Blockly.JavaScript.valueToCode(block, 'LIST',\n      Blockly.JavaScript.ORDER_FUNCTION_CALL) || '[]';\n  var direction = block.getFieldValue('DIRECTION') === '1' ? 1 : -1;\n  var type = block.getFieldValue('TYPE');\n  var getCompareFunctionName = Blockly.JavaScript.provideFunction_(\n      'listsGetSortCompare',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n          '(type, direction) {',\n       '  var compareFuncs = {',\n       '    \"NUMERIC\": function(a, b) {',\n       '        return Number(a) - Number(b); },',\n       '    \"TEXT\": function(a, b) {',\n       '        return a.toString() > b.toString() ? 1 : -1; },',\n       '    \"IGNORE_CASE\": function(a, b) {',\n       '        return a.toString().toLowerCase() > ' +\n          'b.toString().toLowerCase() ? 1 : -1; },',\n       '  };',\n       '  var compare = compareFuncs[type];',\n       '  return function(a, b) { return compare(a, b) * direction; }',\n       '}']);\n  return [list + '.slice().sort(' +\n      getCompareFunctionName + '(\"' + type + '\", ' + direction + '))',\n      Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['lists_split'] = function(block) {\n  // Block for splitting text into a list, or joining a list into text.\n  var input = Blockly.JavaScript.valueToCode(block, 'INPUT',\n      Blockly.JavaScript.ORDER_MEMBER);\n  var delimiter = Blockly.JavaScript.valueToCode(block, 'DELIM',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  var mode = block.getFieldValue('MODE');\n  if (mode == 'SPLIT') {\n    if (!input) {\n      input = '\\'\\'';\n    }\n    var functionName = 'split';\n  } else if (mode == 'JOIN') {\n    if (!input) {\n      input = '[]';\n    }\n    var functionName = 'join';\n  } else {\n    throw Error('Unknown mode: ' + mode);\n  }\n  var code = input + '.' + functionName + '(' + delimiter + ')';\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['lists_reverse'] = function(block) {\n  // Block for reversing a list.\n  var list = Blockly.JavaScript.valueToCode(block, 'LIST',\n      Blockly.JavaScript.ORDER_FUNCTION_CALL) || '[]';\n  var code = list + '.slice().reverse()';\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n"],"file":"lists.min.js"}