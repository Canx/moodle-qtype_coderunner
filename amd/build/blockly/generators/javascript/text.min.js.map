{"version":3,"sources":["../../../../src/blockly/generators/javascript/text.js"],"names":["goog","provide","require","Blockly","JavaScript","block","code","quote_","getFieldValue","ORDER_ATOMIC","multiline_quote_","indexOf","text","forceString_","value","strRegExp","test","itemCount_","element","valueToCode","ORDER_NONE","ORDER_FUNCTION_CALL","element0","element1","ORDER_ADDITION","elements","Array","i","ORDER_COMMA","join","varName","variableDB_","getName","VARIABLE_CATEGORY_NAME","ORDER_MEMBER","ORDER_LOGICAL_NOT","operator","substring","workspace","options","oneBasedIndex","where","textOrder","at","getAdjusted","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","Error","getIndex_","stringName","opt_at","where1","where2","match","at1","ORDER_SUBTRACTION","at2","wherePascalCase","msg","getField","toNumber","sub","from","to"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for text blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.JavaScript.texts');\n\ngoog.require('Blockly.JavaScript');\n\n\nBlockly.JavaScript['text'] = function(block) {\n  // Text value.\n  var code = Blockly.JavaScript.quote_(block.getFieldValue('TEXT'));\n  return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\nBlockly.JavaScript['text_multiline'] = function(block) {\n  // Text value.\n  var code = Blockly.JavaScript.multiline_quote_(block.getFieldValue('TEXT'));\n  if (code.indexOf('\\n') != -1) {\n      code = '(' + code + ')'\n  }\n  return [code, Blockly.JavaScript.ORDER_ATOMIC];\n};\n\n/**\n * Enclose the provided value in 'String(...)' function.\n * Leave string literals alone.\n * @param {string} value Code evaluating to a value.\n * @return {string} Code evaluating to a string.\n * @private\n */\nBlockly.JavaScript.text.forceString_ = function(value) {\n  if (Blockly.JavaScript.text.forceString_.strRegExp.test(value)) {\n    return value;\n  }\n  return 'String(' + value + ')';\n};\n\n/**\n * Regular expression to detect a single-quoted string literal.\n */\nBlockly.JavaScript.text.forceString_.strRegExp = /^\\s*'([^']|\\\\')*'\\s*$/;\n\nBlockly.JavaScript['text_join'] = function(block) {\n  // Create a string made up of any number of elements of any type.\n  switch (block.itemCount_) {\n    case 0:\n      return ['\\'\\'', Blockly.JavaScript.ORDER_ATOMIC];\n    case 1:\n      var element = Blockly.JavaScript.valueToCode(block, 'ADD0',\n          Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n      var code = Blockly.JavaScript.text.forceString_(element);\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    case 2:\n      var element0 = Blockly.JavaScript.valueToCode(block, 'ADD0',\n          Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n      var element1 = Blockly.JavaScript.valueToCode(block, 'ADD1',\n          Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n      var code = Blockly.JavaScript.text.forceString_(element0) + ' + ' +\n          Blockly.JavaScript.text.forceString_(element1);\n      return [code, Blockly.JavaScript.ORDER_ADDITION];\n    default:\n      var elements = new Array(block.itemCount_);\n      for (var i = 0; i < block.itemCount_; i++) {\n        elements[i] = Blockly.JavaScript.valueToCode(block, 'ADD' + i,\n            Blockly.JavaScript.ORDER_COMMA) || '\\'\\'';\n      }\n      var code = '[' + elements.join(',') + '].join(\\'\\')';\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  }\n};\n\nBlockly.JavaScript['text_append'] = function(block) {\n  // Append to a variable in place.\n  var varName = Blockly.JavaScript.variableDB_.getName(\n      block.getFieldValue('VAR'), Blockly.VARIABLE_CATEGORY_NAME);\n  var value = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  return varName + ' += ' + Blockly.JavaScript.text.forceString_(value) + ';\\n';\n};\n\nBlockly.JavaScript['text_length'] = function(block) {\n  // String or array length.\n  var text = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_FUNCTION_CALL) || '\\'\\'';\n  return [text + '.length', Blockly.JavaScript.ORDER_MEMBER];\n};\n\nBlockly.JavaScript['text_isEmpty'] = function(block) {\n  // Is the string null or array empty?\n  var text = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n  return ['!' + text + '.length', Blockly.JavaScript.ORDER_LOGICAL_NOT];\n};\n\nBlockly.JavaScript['text_indexOf'] = function(block) {\n  // Search the text for a substring.\n  var operator = block.getFieldValue('END') == 'FIRST' ?\n      'indexOf' : 'lastIndexOf';\n  var substring = Blockly.JavaScript.valueToCode(block, 'FIND',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  var text = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n  var code = text + '.' + operator + '(' + substring + ')';\n  // Adjust index if using one-based indices.\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', Blockly.JavaScript.ORDER_ADDITION];\n  }\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['text_charAt'] = function(block) {\n  // Get letter at index.\n  // Note: Until January 2013 this block did not have the WHERE input.\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var textOrder = (where == 'RANDOM') ? Blockly.JavaScript.ORDER_NONE :\n      Blockly.JavaScript.ORDER_MEMBER;\n  var text = Blockly.JavaScript.valueToCode(block, 'VALUE',\n      textOrder) || '\\'\\'';\n  switch (where) {\n    case 'FIRST':\n      var code = text + '.charAt(0)';\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    case 'LAST':\n      var code = text + '.slice(-1)';\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    case 'FROM_START':\n      var at = Blockly.JavaScript.getAdjusted(block, 'AT');\n      // Adjust index if using one-based indices.\n      var code = text + '.charAt(' + at + ')';\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    case 'FROM_END':\n      var at = Blockly.JavaScript.getAdjusted(block, 'AT', 1, true);\n      var code = text + '.slice(' + at + ').charAt(0)';\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    case 'RANDOM':\n      var functionName = Blockly.JavaScript.provideFunction_(\n          'textRandomLetter',\n          ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n              '(text) {',\n           '  var x = Math.floor(Math.random() * text.length);',\n           '  return text[x];',\n           '}']);\n      var code = functionName + '(' + text + ')';\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n  }\n  throw Error('Unhandled option (text_charAt).');\n};\n\n/**\n * Returns an expression calculating the index into a string.\n * @param {string} stringName Name of the string, used to calculate length.\n * @param {string} where The method of indexing, selected by dropdown in Blockly\n * @param {string=} opt_at The optional offset when indexing from start/end.\n * @return {string|undefined} Index expression.\n * @private\n */\nBlockly.JavaScript.text.getIndex_ = function(stringName, where, opt_at) {\n  if (where == 'FIRST') {\n    return '0';\n  } else if (where == 'FROM_END') {\n    return stringName + '.length - 1 - ' + opt_at;\n  } else if (where == 'LAST') {\n    return stringName + '.length - 1';\n  } else {\n    return opt_at;\n  }\n};\n\nBlockly.JavaScript['text_getSubstring'] = function(block) {\n  // Get substring.\n  var text = Blockly.JavaScript.valueToCode(block, 'STRING',\n      Blockly.JavaScript.ORDER_FUNCTION_CALL) || '\\'\\'';\n  var where1 = block.getFieldValue('WHERE1');\n  var where2 = block.getFieldValue('WHERE2');\n  if (where1 == 'FIRST' && where2 == 'LAST') {\n    var code = text;\n  } else if (text.match(/^'?\\w+'?$/) ||\n      (where1 != 'FROM_END' && where1 != 'LAST' &&\n      where2 != 'FROM_END' && where2 != 'LAST')) {\n    // If the text is a variable or literal or doesn't require a call for\n    // length, don't generate a helper function.\n    switch (where1) {\n      case 'FROM_START':\n        var at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        var at1 = Blockly.JavaScript.getAdjusted(block, 'AT1', 1, false,\n            Blockly.JavaScript.ORDER_SUBTRACTION);\n        at1 = text + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        var at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    switch (where2) {\n      case 'FROM_START':\n        var at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        var at2 = Blockly.JavaScript.getAdjusted(block, 'AT2', 0, false,\n            Blockly.JavaScript.ORDER_SUBTRACTION);\n        at2 = text + '.length - ' + at2;\n        break;\n      case 'LAST':\n        var at2 = text + '.length';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    code = text + '.slice(' + at1 + ', ' + at2 + ')';\n  } else {\n    var at1 = Blockly.JavaScript.getAdjusted(block, 'AT1');\n    var at2 = Blockly.JavaScript.getAdjusted(block, 'AT2');\n    var getIndex_ = Blockly.JavaScript.text.getIndex_;\n    var wherePascalCase = {'FIRST': 'First', 'LAST': 'Last',\n      'FROM_START': 'FromStart', 'FROM_END': 'FromEnd'};\n    var functionName = Blockly.JavaScript.provideFunction_(\n        'subsequence' + wherePascalCase[where1] + wherePascalCase[where2],\n        ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n        '(sequence' +\n        // The value for 'FROM_END' and'FROM_START' depends on `at` so\n        // we add it as a parameter.\n        ((where1 == 'FROM_END' || where1 == 'FROM_START') ? ', at1' : '') +\n        ((where2 == 'FROM_END' || where2 == 'FROM_START') ? ', at2' : '') +\n        ') {',\n          '  var start = ' + getIndex_('sequence', where1, 'at1') + ';',\n          '  var end = ' + getIndex_('sequence', where2, 'at2') + ' + 1;',\n          '  return sequence.slice(start, end);',\n          '}']);\n    var code = functionName + '(' + text +\n        // The value for 'FROM_END' and 'FROM_START' depends on `at` so we\n        // pass it.\n        ((where1 == 'FROM_END' || where1 == 'FROM_START') ? ', ' + at1 : '') +\n        ((where2 == 'FROM_END' || where2 == 'FROM_START') ? ', ' + at2 : '') +\n        ')';\n  }\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['text_changeCase'] = function(block) {\n  // Change capitalization.\n  var OPERATORS = {\n    'UPPERCASE': '.toUpperCase()',\n    'LOWERCASE': '.toLowerCase()',\n    'TITLECASE': null\n  };\n  var operator = OPERATORS[block.getFieldValue('CASE')];\n  var textOrder = operator ? Blockly.JavaScript.ORDER_MEMBER :\n      Blockly.JavaScript.ORDER_NONE;\n  var text = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      textOrder) || '\\'\\'';\n  if (operator) {\n    // Upper and lower case are functions built into JavaScript.\n    var code = text + operator;\n  } else {\n    // Title case is not a native JavaScript function.  Define one.\n    var functionName = Blockly.JavaScript.provideFunction_(\n        'textToTitleCase',\n        ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n            '(str) {',\n         '  return str.replace(/\\\\S+/g,',\n         '      function(txt) {return txt[0].toUpperCase() + ' +\n            'txt.substring(1).toLowerCase();});',\n         '}']);\n    var code = functionName + '(' + text + ')';\n  }\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['text_trim'] = function(block) {\n  // Trim spaces.\n  var OPERATORS = {\n    'LEFT': \".replace(/^[\\\\s\\\\xa0]+/, '')\",\n    'RIGHT': \".replace(/[\\\\s\\\\xa0]+$/, '')\",\n    'BOTH': '.trim()'\n  };\n  var operator = OPERATORS[block.getFieldValue('MODE')];\n  var text = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n  return [text + operator, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['text_print'] = function(block) {\n  // Print statement.\n  var msg = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  return 'window.alert(' + msg + ');\\n';\n};\n\nBlockly.JavaScript['text_prompt_ext'] = function(block) {\n  // Prompt function.\n  if (block.getField('TEXT')) {\n    // Internal message.\n    var msg = Blockly.JavaScript.quote_(block.getFieldValue('TEXT'));\n  } else {\n    // External message.\n    var msg = Blockly.JavaScript.valueToCode(block, 'TEXT',\n        Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  }\n  var code = 'window.prompt(' + msg + ')';\n  var toNumber = block.getFieldValue('TYPE') == 'NUMBER';\n  if (toNumber) {\n    code = 'Number(' + code + ')';\n  }\n  return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n};\n\nBlockly.JavaScript['text_prompt'] = Blockly.JavaScript['text_prompt_ext'];\n\nBlockly.JavaScript['text_count'] = function(block) {\n  var text = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n  var sub = Blockly.JavaScript.valueToCode(block, 'SUB',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  var functionName = Blockly.JavaScript.provideFunction_(\n      'textCount',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n          '(haystack, needle) {',\n       '  if (needle.length === 0) {',\n       '    return haystack.length + 1;',\n       '  } else {',\n       '    return haystack.split(needle).length - 1;',\n       '  }',\n       '}']);\n  var code = functionName + '(' + text + ', ' + sub + ')';\n  return [code, Blockly.JavaScript.ORDER_SUBTRACTION];\n};\n\nBlockly.JavaScript['text_replace'] = function(block) {\n  var text = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n  var from = Blockly.JavaScript.valueToCode(block, 'FROM',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  var to = Blockly.JavaScript.valueToCode(block, 'TO',\n      Blockly.JavaScript.ORDER_NONE) || '\\'\\'';\n  // The regex escaping code below is taken from the implementation of\n  // goog.string.regExpEscape.\n  var functionName = Blockly.JavaScript.provideFunction_(\n      'textReplace',\n      ['function ' + Blockly.JavaScript.FUNCTION_NAME_PLACEHOLDER_ +\n          '(haystack, needle, replacement) {',\n       '  needle = ' +\n           'needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g,\"\\\\\\\\$1\")',\n       '                 .replace(/\\\\x08/g,\"\\\\\\\\x08\");',\n       '  return haystack.replace(new RegExp(needle, \\'g\\'), replacement);',\n       '}']);\n  var code = functionName + '(' + text + ', ' + from + ', ' + to + ')';\n  return [code, Blockly.JavaScript.ORDER_MEMBER];\n};\n\nBlockly.JavaScript['text_reverse'] = function(block) {\n  var text = Blockly.JavaScript.valueToCode(block, 'TEXT',\n      Blockly.JavaScript.ORDER_MEMBER) || '\\'\\'';\n  var code = text + '.split(\\'\\').reverse().join(\\'\\')';\n  return [code, Blockly.JavaScript.ORDER_MEMBER];\n};\n"],"file":"text.min.js"}