{"version":3,"sources":["../../../../src/blockly/generators/dart/text.js"],"names":["goog","provide","require","Blockly","Dart","addReservedWords","block","code","quote_","getFieldValue","ORDER_ATOMIC","multiline_quote_","itemCount_","element","valueToCode","ORDER_UNARY_POSTFIX","elements","Array","i","ORDER_NONE","join","varName","variableDB_","getName","VARIABLE_CATEGORY_NAME","value","text","operator","substring","workspace","options","oneBasedIndex","ORDER_ADDITIVE","where","at","getAdjusted","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","definitions_","Error","where1","where2","match","at1","at2","textOrder","msg","getField","toNumber","sub","from","to"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2014 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating Dart for text blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Dart.texts');\n\ngoog.require('Blockly.Dart');\n\n\nBlockly.Dart.addReservedWords('Html,Math');\n\nBlockly.Dart['text'] = function(block) {\n  // Text value.\n  var code = Blockly.Dart.quote_(block.getFieldValue('TEXT'));\n  return [code, Blockly.Dart.ORDER_ATOMIC];\n};\n\nBlockly.Dart['text_multiline'] = function(block) {\n  // Text value.\n  var code = Blockly.Dart.multiline_quote_(block.getFieldValue('TEXT'));\n  return [code, Blockly.Dart.ORDER_ATOMIC];\n};\n\nBlockly.Dart['text_join'] = function(block) {\n  // Create a string made up of any number of elements of any type.\n  switch (block.itemCount_) {\n    case 0:\n      return ['\\'\\'', Blockly.Dart.ORDER_ATOMIC];\n    case 1:\n      var element = Blockly.Dart.valueToCode(block, 'ADD0',\n              Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n      var code = element + '.toString()';\n      return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n    default:\n      var elements = new Array(block.itemCount_);\n      for (var i = 0; i < block.itemCount_; i++) {\n        elements[i] = Blockly.Dart.valueToCode(block, 'ADD' + i,\n                Blockly.Dart.ORDER_NONE) || '\\'\\'';\n      }\n      var code = '[' + elements.join(',') + '].join()';\n      return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n  }\n};\n\nBlockly.Dart['text_append'] = function(block) {\n  // Append to a variable in place.\n  var varName = Blockly.Dart.variableDB_.getName(block.getFieldValue('VAR'),\n      Blockly.VARIABLE_CATEGORY_NAME);\n  var value = Blockly.Dart.valueToCode(block, 'TEXT',\n      Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  return varName + ' = [' + varName + ', ' + value + '].join();\\n';\n};\n\nBlockly.Dart['text_length'] = function(block) {\n  // String or array length.\n  var text = Blockly.Dart.valueToCode(block, 'VALUE',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  return [text + '.length', Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_isEmpty'] = function(block) {\n  // Is the string null or array empty?\n  var text = Blockly.Dart.valueToCode(block, 'VALUE',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  return [text + '.isEmpty', Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_indexOf'] = function(block) {\n  // Search the text for a substring.\n  var operator = block.getFieldValue('END') == 'FIRST' ?\n      'indexOf' : 'lastIndexOf';\n  var substring = Blockly.Dart.valueToCode(block, 'FIND',\n      Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  var text = Blockly.Dart.valueToCode(block, 'VALUE',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  var code = text + '.' + operator + '(' + substring + ')';\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', Blockly.Dart.ORDER_ADDITIVE];\n  }\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_charAt'] = function(block) {\n  // Get letter at index.\n  // Note: Until January 2013 this block did not have the WHERE input.\n  var where = block.getFieldValue('WHERE') || 'FROM_START';\n  var text = Blockly.Dart.valueToCode(block, 'VALUE',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  switch (where) {\n    case 'FIRST':\n      var code = text + '[0]';\n      return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n    case 'FROM_START':\n      var at = Blockly.Dart.getAdjusted(block, 'AT');\n      var code = text + '[' + at + ']';\n      return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n    case 'LAST':\n      at = 1;\n      // Fall through.\n    case 'FROM_END':\n      var at = Blockly.Dart.getAdjusted(block, 'AT', 1);\n      var functionName = Blockly.Dart.provideFunction_(\n          'text_get_from_end',\n          ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n              '(String text, num x) {',\n           '  return text[text.length - x];',\n           '}']);\n      code = functionName + '(' + text + ', ' + at + ')';\n      return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n    case 'RANDOM':\n      Blockly.Dart.definitions_['import_dart_math'] =\n          'import \\'dart:math\\' as Math;';\n      var functionName = Blockly.Dart.provideFunction_(\n          'text_random_letter',\n          ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n              '(String text) {',\n           '  int x = new Math.Random().nextInt(text.length);',\n           '  return text[x];',\n           '}']);\n      code = functionName + '(' + text + ')';\n      return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n  }\n  throw Error('Unhandled option (text_charAt).');\n};\n\nBlockly.Dart['text_getSubstring'] = function(block) {\n  // Get substring.\n  var text = Blockly.Dart.valueToCode(block, 'STRING',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  var where1 = block.getFieldValue('WHERE1');\n  var where2 = block.getFieldValue('WHERE2');\n  if (where1 == 'FIRST' && where2 == 'LAST') {\n    var code = text;\n  } else if (text.match(/^'?\\w+'?$/) ||\n      (where1 != 'FROM_END' && where2 == 'FROM_START')) {\n    // If the text is a variable or literal or doesn't require a call for\n    // length, don't generate a helper function.\n    switch (where1) {\n      case 'FROM_START':\n        var at1 = Blockly.Dart.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        var at1 = Blockly.Dart.getAdjusted(block, 'AT1', 1, false,\n            Blockly.Dart.ORDER_ADDITIVE);\n        at1 = text + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        var at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    switch (where2) {\n      case 'FROM_START':\n        var at2 = Blockly.Dart.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        var at2 = Blockly.Dart.getAdjusted(block, 'AT2', 0, false,\n            Blockly.Dart.ORDER_ADDITIVE);\n        at2 = text + '.length - ' + at2;\n        break;\n      case 'LAST':\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    if (where2 == 'LAST') {\n      var code = text + '.substring(' + at1 + ')';\n    } else {\n      var code = text + '.substring(' + at1 + ', ' + at2 + ')';\n    }\n  } else {\n    var at1 = Blockly.Dart.getAdjusted(block, 'AT1');\n    var at2 = Blockly.Dart.getAdjusted(block, 'AT2');\n    var functionName = Blockly.Dart.provideFunction_(\n        'text_get_substring',\n        ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n            '(String text, String where1, num at1, String where2, num at2) {',\n         '  int getAt(String where, num at) {',\n         '    if (where == \\'FROM_END\\') {',\n         '      at = text.length - 1 - at;',\n         '    } else if (where == \\'FIRST\\') {',\n         '      at = 0;',\n         '    } else if (where == \\'LAST\\') {',\n         '      at = text.length - 1;',\n         '    } else if (where != \\'FROM_START\\') {',\n         '      throw \\'Unhandled option (text_getSubstring).\\';',\n         '    }',\n         '    return at;',\n         '  }',\n         '  at1 = getAt(where1, at1);',\n         '  at2 = getAt(where2, at2) + 1;',\n         '  return text.substring(at1, at2);',\n         '}']);\n    var code = functionName + '(' + text + ', \\'' +\n        where1 + '\\', ' + at1 + ', \\'' + where2 + '\\', ' + at2 + ')';\n  }\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_changeCase'] = function(block) {\n  // Change capitalization.\n  var OPERATORS = {\n    'UPPERCASE': '.toUpperCase()',\n    'LOWERCASE': '.toLowerCase()',\n    'TITLECASE': null\n  };\n  var operator = OPERATORS[block.getFieldValue('CASE')];\n  var textOrder = operator ? Blockly.Dart.ORDER_UNARY_POSTFIX :\n      Blockly.Dart.ORDER_NONE;\n  var text = Blockly.Dart.valueToCode(block, 'TEXT', textOrder) || '\\'\\'';\n  if (operator) {\n    // Upper and lower case are functions built into Dart.\n    var code = text + operator;\n  } else {\n    // Title case is not a native Dart function.  Define one.\n    var functionName = Blockly.Dart.provideFunction_(\n        'text_toTitleCase',\n        ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n            '(String str) {',\n         '  RegExp exp = new RegExp(r\\'\\\\b\\');',\n         '  List<String> list = str.split(exp);',\n         '  final title = new StringBuffer();',\n         '  for (String part in list) {',\n         '    if (part.length > 0) {',\n         '      title.write(part[0].toUpperCase());',\n         '      if (part.length > 0) {',\n         '        title.write(part.substring(1).toLowerCase());',\n         '      }',\n         '    }',\n         '  }',\n         '  return title.toString();',\n         '}']);\n    var code = functionName + '(' + text + ')';\n  }\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_trim'] = function(block) {\n  // Trim spaces.\n  var OPERATORS = {\n    'LEFT': '.replaceFirst(new RegExp(r\\'^\\\\s+\\'), \\'\\')',\n    'RIGHT': '.replaceFirst(new RegExp(r\\'\\\\s+$\\'), \\'\\')',\n    'BOTH': '.trim()'\n  };\n  var operator = OPERATORS[block.getFieldValue('MODE')];\n  var text = Blockly.Dart.valueToCode(block, 'TEXT',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  return [text + operator, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_print'] = function(block) {\n  // Print statement.\n  var msg = Blockly.Dart.valueToCode(block, 'TEXT',\n      Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  return 'print(' + msg + ');\\n';\n};\n\nBlockly.Dart['text_prompt_ext'] = function(block) {\n  // Prompt function.\n  Blockly.Dart.definitions_['import_dart_html'] =\n      'import \\'dart:html\\' as Html;';\n  if (block.getField('TEXT')) {\n    // Internal message.\n    var msg = Blockly.Dart.quote_(block.getFieldValue('TEXT'));\n  } else {\n    // External message.\n    var msg = Blockly.Dart.valueToCode(block, 'TEXT',\n        Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  }\n  var code = 'Html.window.prompt(' + msg + ', \\'\\')';\n  var toNumber = block.getFieldValue('TYPE') == 'NUMBER';\n  if (toNumber) {\n    Blockly.Dart.definitions_['import_dart_math'] =\n        'import \\'dart:math\\' as Math;';\n    code = 'Math.parseDouble(' + code + ')';\n  }\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_prompt'] = Blockly.Dart['text_prompt_ext'];\n\nBlockly.Dart['text_count'] = function(block) {\n  var text = Blockly.Dart.valueToCode(block, 'TEXT',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  var sub = Blockly.Dart.valueToCode(block, 'SUB',\n      Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  // Substring count is not a native Dart function.  Define one.\n  var functionName = Blockly.Dart.provideFunction_(\n      'text_count',\n      ['int ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n        '(String haystack, String needle) {',\n        '  if (needle.length == 0) {',\n        '    return haystack.length + 1;',\n        '  }',\n        '  int index = 0;',\n        '  int count = 0;',\n        '  while (index != -1) {',\n        '    index = haystack.indexOf(needle, index);',\n        '    if (index != -1) {',\n        '      count++;',\n        '     index += needle.length;',\n        '    }',\n        '  }',\n        '  return count;',\n        '}']);\n  var code = functionName + '(' + text + ', ' + sub + ')';\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_replace'] = function(block) {\n  var text = Blockly.Dart.valueToCode(block, 'TEXT',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  var from = Blockly.Dart.valueToCode(block, 'FROM',\n      Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  var to = Blockly.Dart.valueToCode(block, 'TO',\n      Blockly.Dart.ORDER_NONE) || '\\'\\'';\n  var code = text + '.replaceAll(' + from + ', ' + to + ')';\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['text_reverse'] = function(block) {\n  // There isn't a sensible way to do this in Dart. See:\n  // http://stackoverflow.com/a/21613700/3529104\n  // Implementing something is possibly better than not implementing anything?\n  var text = Blockly.Dart.valueToCode(block, 'TEXT',\n      Blockly.Dart.ORDER_UNARY_POSTFIX) || '\\'\\'';\n  var code = 'new String.fromCharCodes(' + text + '.runes.toList().reversed)';\n  // XXX What should the operator precedence be for a `new`?\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n"],"file":"text.min.js"}