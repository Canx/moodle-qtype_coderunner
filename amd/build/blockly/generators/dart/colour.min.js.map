{"version":3,"sources":["../../../../src/blockly/generators/dart/colour.js"],"names":["goog","provide","require","Blockly","Dart","addReservedWords","block","code","quote_","getFieldValue","ORDER_ATOMIC","definitions_","functionName","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","ORDER_UNARY_POSTFIX","red","valueToCode","ORDER_NONE","green","blue","c1","c2","ratio"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2014 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating Dart for colour blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Dart.colour');\n\ngoog.require('Blockly.Dart');\n\n\nBlockly.Dart.addReservedWords('Math');\n\nBlockly.Dart['colour_picker'] = function(block) {\n  // Colour picker.\n  var code = Blockly.Dart.quote_(block.getFieldValue('COLOUR'));\n  return [code, Blockly.Dart.ORDER_ATOMIC];\n};\n\nBlockly.Dart['colour_random'] = function(block) {\n  // Generate a random colour.\n  Blockly.Dart.definitions_['import_dart_math'] =\n      'import \\'dart:math\\' as Math;';\n  var functionName = Blockly.Dart.provideFunction_(\n      'colour_random',\n      ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ + '() {',\n       '  String hex = \\'0123456789abcdef\\';',\n       '  var rnd = new Math.Random();',\n       '  return \\'#${hex[rnd.nextInt(16)]}${hex[rnd.nextInt(16)]}\\'',\n       '      \\'${hex[rnd.nextInt(16)]}${hex[rnd.nextInt(16)]}\\'',\n       '      \\'${hex[rnd.nextInt(16)]}${hex[rnd.nextInt(16)]}\\';',\n       '}']);\n  var code = functionName + '()';\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['colour_rgb'] = function(block) {\n  // Compose a colour from RGB components expressed as percentages.\n  var red = Blockly.Dart.valueToCode(block, 'RED',\n      Blockly.Dart.ORDER_NONE) || 0;\n  var green = Blockly.Dart.valueToCode(block, 'GREEN',\n      Blockly.Dart.ORDER_NONE) || 0;\n  var blue = Blockly.Dart.valueToCode(block, 'BLUE',\n      Blockly.Dart.ORDER_NONE) || 0;\n\n  Blockly.Dart.definitions_['import_dart_math'] =\n      'import \\'dart:math\\' as Math;';\n  var functionName = Blockly.Dart.provideFunction_(\n      'colour_rgb',\n      ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n          '(num r, num g, num b) {',\n       '  num rn = (Math.max(Math.min(r, 100), 0) * 2.55).round();',\n       '  String rs = rn.toInt().toRadixString(16);',\n       '  rs = \\'0$rs\\';',\n       '  rs = rs.substring(rs.length - 2);',\n       '  num gn = (Math.max(Math.min(g, 100), 0) * 2.55).round();',\n       '  String gs = gn.toInt().toRadixString(16);',\n       '  gs = \\'0$gs\\';',\n       '  gs = gs.substring(gs.length - 2);',\n       '  num bn = (Math.max(Math.min(b, 100), 0) * 2.55).round();',\n       '  String bs = bn.toInt().toRadixString(16);',\n       '  bs = \\'0$bs\\';',\n       '  bs = bs.substring(bs.length - 2);',\n       '  return \\'#$rs$gs$bs\\';',\n       '}']);\n  var code = functionName + '(' + red + ', ' + green + ', ' + blue + ')';\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n\nBlockly.Dart['colour_blend'] = function(block) {\n  // Blend two colours together.\n  var c1 = Blockly.Dart.valueToCode(block, 'COLOUR1',\n      Blockly.Dart.ORDER_NONE) || '\\'#000000\\'';\n  var c2 = Blockly.Dart.valueToCode(block, 'COLOUR2',\n      Blockly.Dart.ORDER_NONE) || '\\'#000000\\'';\n  var ratio = Blockly.Dart.valueToCode(block, 'RATIO',\n      Blockly.Dart.ORDER_NONE) || 0.5;\n\n  Blockly.Dart.definitions_['import_dart_math'] =\n      'import \\'dart:math\\' as Math;';\n  var functionName = Blockly.Dart.provideFunction_(\n      'colour_blend',\n      ['String ' + Blockly.Dart.FUNCTION_NAME_PLACEHOLDER_ +\n          '(String c1, String c2, num ratio) {',\n       '  ratio = Math.max(Math.min(ratio, 1), 0);',\n       '  int r1 = int.parse(\\'0x${c1.substring(1, 3)}\\');',\n       '  int g1 = int.parse(\\'0x${c1.substring(3, 5)}\\');',\n       '  int b1 = int.parse(\\'0x${c1.substring(5, 7)}\\');',\n       '  int r2 = int.parse(\\'0x${c2.substring(1, 3)}\\');',\n       '  int g2 = int.parse(\\'0x${c2.substring(3, 5)}\\');',\n       '  int b2 = int.parse(\\'0x${c2.substring(5, 7)}\\');',\n       '  num rn = (r1 * (1 - ratio) + r2 * ratio).round();',\n       '  String rs = rn.toInt().toRadixString(16);',\n       '  num gn = (g1 * (1 - ratio) + g2 * ratio).round();',\n       '  String gs = gn.toInt().toRadixString(16);',\n       '  num bn = (b1 * (1 - ratio) + b2 * ratio).round();',\n       '  String bs = bn.toInt().toRadixString(16);',\n       '  rs = \\'0$rs\\';',\n       '  rs = rs.substring(rs.length - 2);',\n       '  gs = \\'0$gs\\';',\n       '  gs = gs.substring(gs.length - 2);',\n       '  bs = \\'0$bs\\';',\n       '  bs = bs.substring(bs.length - 2);',\n       '  return \\'#$rs$gs$bs\\';',\n       '}']);\n  var code = functionName + '(' + c1 + ', ' + c2 + ', ' + ratio + ')';\n  return [code, Blockly.Dart.ORDER_UNARY_POSTFIX];\n};\n"],"file":"colour.min.js"}