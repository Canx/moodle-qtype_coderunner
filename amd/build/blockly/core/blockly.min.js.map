{"version":3,"sources":["../../../src/blockly/core/blockly.js"],"names":["goog","provide","require","Blockly","VERSION","mainWorkspace","selected","draggingConnections","clipboardXml_","clipboardSource_","clipboardTypeCounts_","cache3dSupported_","parentContainer","EventData","svgSize","svg","utils","Size","cachedWidth_","cachedHeight_","resizeSvgContents","workspace","resizeContents","svgResize","options","parentWorkspace","getParentSvg","div","parentNode","width","offsetWidth","height","offsetHeight","setAttribute","resize","onKeyDown","e","isTargetInput","rendered","isVisible","readOnly","navigation","onKeyPress","deleteBlock","keyCode","KeyCodes","ESC","hideChaff","onBlocklyAction","ACTION_EXIT","Gesture","inProgress","BACKSPACE","DELETE","preventDefault","isDeletable","altKey","ctrlKey","metaKey","isMovable","C","copy_","X","isFlyout","V","targetWorkspace","isCapacityAvailable","Events","setGroup","paste","Z","undo","shiftKey","Y","dispose","toCopy","data","toCopyData","xml","source","typeCounts","duplicate","toDuplicate","clipboardXml","clipboardSource","onContextMenu_","opt_allowToolbox","Tooltip","hide","WidgetDiv","DropDownDiv","hideWithoutAnimation","getMainWorkspace","trashcan","flyout","toolbox","getToolbox","getFlyout","autoClose","clearSelection","alert","message","opt_callback","confirm","callback","prompt","defaultValue","jsonInitFactory_","jsonDef","jsonInit","defineBlocksWithJsonArray","jsonArray","i","elem","length","console","warn","typename","type","Blocks","init","bindEventWithChecks_","node","name","thisObject","func","opt_noCaptureIdentifier","opt_noPreventDefault","handled","wrapFunc","events","Touch","splitEventByTouches","event","shouldHandleEvent","setClientFromTouch","call","bindData","global","TOUCH_MAP","addEventListener","push","touchWrapFunc","bindEvent_","changedTouches","touchPoint","clientX","clientY","unbindEvent_","bindDatum","pop","removeEventListener","isNumber","str","test","hueToHex","hue","colour","hsvToHex","HSV_SATURATION","HSV_VALUE","checkBlockColourConstants","checkBlockColourConstant_","msgName","blocklyNamePath","expectedValue","namePath","value","warningPattern","warning","replace","setParentContainer","container"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2011 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Core JavaScript library for Blockly.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\n/**\n * The top level namespace used to access the Blockly library.\n * @namespace Blockly\n */\ngoog.provide('Blockly');\n\ngoog.require('Blockly.constants');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.Ui');\ngoog.require('Blockly.inject');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.Procedures');\ngoog.require('Blockly.Tooltip');\ngoog.require('Blockly.Touch');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.colour');\ngoog.require('Blockly.utils.Size');\ngoog.require('Blockly.Variables');\ngoog.require('Blockly.WidgetDiv');\ngoog.require('Blockly.WorkspaceSvg');\ngoog.require('Blockly.Xml');\n\n\n/**\n * Blockly core version.\n * This constant is overridden by the build script (build.py) to the value of the version\n * in package.json. This is done during the gen_core build step.\n * For local builds, you can pass --define='Blockly.VERSION=X.Y.Z' to the compiler\n * to override this constant.\n * @define {string}\n */\nBlockly.VERSION = 'uncompiled';\n\n/**\n * The main workspace most recently used.\n * Set by Blockly.WorkspaceSvg.prototype.markFocused\n * @type {Blockly.Workspace}\n */\nBlockly.mainWorkspace = null;\n\n/**\n * Currently selected block.\n * @type {?Blockly.ICopyable}\n */\nBlockly.selected = null;\n\n/**\n * All of the connections on blocks that are currently being dragged.\n * @type {!Array.<!Blockly.Connection>}\n * @package\n */\nBlockly.draggingConnections = [];\n\n/**\n * Contents of the local clipboard.\n * @type {Element}\n * @private\n */\nBlockly.clipboardXml_ = null;\n\n/**\n * Source of the local clipboard.\n * @type {Blockly.WorkspaceSvg}\n * @private\n */\nBlockly.clipboardSource_ = null;\n\n/**\n * Map of types to type counts for the clipboard object and descendants.\n * @type {Object}\n * @private\n */\nBlockly.clipboardTypeCounts_ = null;\n\n/**\n * Cached value for whether 3D is supported.\n * @type {?boolean}\n * @private\n */\nBlockly.cache3dSupported_ = null;\n\n/**\n * Container element to render the WidgetDiv, DropDownDiv and Tooltip.\n * @type {?Element}\n * @package\n */\nBlockly.parentContainer = null;\n\n/**\n * Blockly opaque event data used to unbind events when using\n * `Blockly.bindEvent_` and `Blockly.bindEventWithChecks_`.\n * @typedef {!Array.<!Array>}\n */\nBlockly.EventData;\n\n/**\n * Returns the dimensions of the specified SVG image.\n * @param {!SVGElement} svg SVG image.\n * @return {!Blockly.utils.Size} Contains width and height properties.\n */\nBlockly.svgSize = function(svg) {\n  svg = /** @type {?} */ (svg);\n  return new Blockly.utils.Size(svg.cachedWidth_, svg.cachedHeight_);\n};\n\n/**\n * Size the workspace when the contents change.  This also updates\n * scrollbars accordingly.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace to resize.\n */\nBlockly.resizeSvgContents = function(workspace) {\n  workspace.resizeContents();\n};\n\n/**\n * Size the SVG image to completely fill its container. Call this when the view\n * actually changes sizes (e.g. on a window resize/device orientation change).\n * See Blockly.resizeSvgContents to resize the workspace when the contents\n * change (e.g. when a block is added or removed).\n * Record the height/width of the SVG image.\n * @param {!Blockly.WorkspaceSvg} workspace Any workspace in the SVG.\n */\nBlockly.svgResize = function(workspace) {\n  var mainWorkspace = workspace;\n  while (mainWorkspace.options.parentWorkspace) {\n    mainWorkspace = mainWorkspace.options.parentWorkspace;\n  }\n  var svg = mainWorkspace.getParentSvg();\n  var div = svg.parentNode;\n  if (!div) {\n    // Workspace deleted, or something.\n    return;\n  }\n  var width = div.offsetWidth;\n  var height = div.offsetHeight;\n  if (svg.cachedWidth_ != width) {\n    svg.setAttribute('width', width + 'px');\n    svg.cachedWidth_ = width;\n  }\n  if (svg.cachedHeight_ != height) {\n    svg.setAttribute('height', height + 'px');\n    svg.cachedHeight_ = height;\n  }\n  mainWorkspace.resize();\n};\n\n/**\n * Handle a key-down on SVG drawing surface. Does nothing if the main workspace\n * is not visible.\n * @param {!KeyboardEvent} e Key down event.\n * @package\n */\n// TODO (https://github.com/google/blockly/issues/1998) handle cases where there\n// are multiple workspaces and non-main workspaces are able to accept input.\nBlockly.onKeyDown = function(e) {\n  var mainWorkspace = Blockly.mainWorkspace;\n  if (!mainWorkspace) {\n    return;\n  }\n\n  if (Blockly.utils.isTargetInput(e) ||\n      (mainWorkspace.rendered && !mainWorkspace.isVisible())) {\n    // When focused on an HTML text input widget, don't trap any keys.\n    // Ignore keypresses on rendered workspaces that have been explicitly\n    // hidden.\n    return;\n  }\n\n  if (mainWorkspace.options.readOnly) {\n    // When in read only mode handle key actions for keyboard navigation.\n    Blockly.navigation.onKeyPress(e);\n    return;\n  }\n\n  var deleteBlock = false;\n  if (e.keyCode == Blockly.utils.KeyCodes.ESC) {\n    // Pressing esc closes the context menu.\n    Blockly.hideChaff();\n    Blockly.navigation.onBlocklyAction(Blockly.navigation.ACTION_EXIT);\n  } else if (!Blockly.Gesture.inProgress() && Blockly.navigation.onKeyPress(e)) {\n    // If the keyboard or field handled the key press return.\n    return;\n  } else if (e.keyCode == Blockly.utils.KeyCodes.BACKSPACE ||\n      e.keyCode == Blockly.utils.KeyCodes.DELETE) {\n    // Delete or backspace.\n    // Stop the browser from going back to the previous page.\n    // Do this first to prevent an error in the delete code from resulting in\n    // data loss.\n    e.preventDefault();\n    // Don't delete while dragging.  Jeez.\n    if (Blockly.Gesture.inProgress()) {\n      return;\n    }\n    if (Blockly.selected && Blockly.selected.isDeletable()) {\n      deleteBlock = true;\n    }\n  } else if (e.altKey || e.ctrlKey || e.metaKey) {\n    // Don't use meta keys during drags.\n    if (Blockly.Gesture.inProgress()) {\n      return;\n    }\n    if (Blockly.selected &&\n        Blockly.selected.isDeletable() && Blockly.selected.isMovable()) {\n      // Don't allow copying immovable or undeletable blocks. The next step\n      // would be to paste, which would create additional undeletable/immovable\n      // blocks on the workspace.\n      if (e.keyCode == Blockly.utils.KeyCodes.C) {\n        // 'c' for copy.\n        Blockly.hideChaff();\n        Blockly.copy_(Blockly.selected);\n      } else if (e.keyCode == Blockly.utils.KeyCodes.X &&\n          !Blockly.selected.workspace.isFlyout) {\n        // 'x' for cut, but not in a flyout.\n        // Don't even copy the selected item in the flyout.\n        Blockly.copy_(Blockly.selected);\n        deleteBlock = true;\n      }\n    }\n    if (e.keyCode == Blockly.utils.KeyCodes.V) {\n      // 'v' for paste.\n      if (Blockly.clipboardXml_) {\n        // Pasting always pastes to the main workspace, even if the copy\n        // started in a flyout workspace.\n        var workspace = Blockly.clipboardSource_;\n        if (workspace.isFlyout) {\n          workspace = workspace.targetWorkspace;\n        }\n        if (Blockly.clipboardTypeCounts_ &&\n            workspace.isCapacityAvailable(Blockly.clipboardTypeCounts_)) {\n          Blockly.Events.setGroup(true);\n          workspace.paste(Blockly.clipboardXml_);\n          Blockly.Events.setGroup(false);\n        }\n      }\n    } else if (e.keyCode == Blockly.utils.KeyCodes.Z) {\n      // 'z' for undo 'Z' is for redo.\n      Blockly.hideChaff();\n      mainWorkspace.undo(e.shiftKey);\n    } else if (e.ctrlKey && e.keyCode == Blockly.utils.KeyCodes.Y) {\n      // Ctrl-y is redo in Windows.  Command-y is never valid on Macs.\n      Blockly.hideChaff();\n      mainWorkspace.undo(true);\n    }\n  }\n  // Common code for delete and cut.\n  // Don't delete in the flyout.\n  if (deleteBlock && !Blockly.selected.workspace.isFlyout) {\n    Blockly.Events.setGroup(true);\n    Blockly.hideChaff();\n    var selected = /** @type {!Blockly.BlockSvg} */ (Blockly.selected);\n    selected.dispose(/* heal */ true, true);\n    Blockly.Events.setGroup(false);\n  }\n};\n\n/**\n * Copy a block or workspace comment onto the local clipboard.\n * @param {!Blockly.ICopyable} toCopy Block or Workspace Comment to be copied.\n * @private\n */\nBlockly.copy_ = function(toCopy) {\n  var data = toCopy.toCopyData();\n  Blockly.clipboardXml_ = data.xml;\n  Blockly.clipboardSource_ = data.source;\n  Blockly.clipboardTypeCounts_ = data.typeCounts;\n};\n\n/**\n * Duplicate this block and its children, or a workspace comment.\n * @param {!Blockly.ICopyable} toDuplicate Block or Workspace Comment to be\n *     copied.\n * @package\n */\nBlockly.duplicate = function(toDuplicate) {\n  // Save the clipboard.\n  var clipboardXml = Blockly.clipboardXml_;\n  var clipboardSource = Blockly.clipboardSource_;\n\n  // Create a duplicate via a copy/paste operation.\n  Blockly.copy_(toDuplicate);\n  toDuplicate.workspace.paste(Blockly.clipboardXml_);\n\n  // Restore the clipboard.\n  Blockly.clipboardXml_ = clipboardXml;\n  Blockly.clipboardSource_ = clipboardSource;\n};\n\n/**\n * Cancel the native context menu, unless the focus is on an HTML input widget.\n * @param {!Event} e Mouse down event.\n * @private\n */\nBlockly.onContextMenu_ = function(e) {\n  if (!Blockly.utils.isTargetInput(e)) {\n    // When focused on an HTML text input widget, don't cancel the context menu.\n    e.preventDefault();\n  }\n};\n\n/**\n * Close tooltips, context menus, dropdown selections, etc.\n * @param {boolean=} opt_allowToolbox If true, don't close the toolbox.\n */\nBlockly.hideChaff = function(opt_allowToolbox) {\n  Blockly.Tooltip.hide();\n  Blockly.WidgetDiv.hide();\n  Blockly.DropDownDiv.hideWithoutAnimation();\n  if (!opt_allowToolbox) {\n    var workspace = Blockly.getMainWorkspace();\n    // For now the trashcan flyout always autocloses because it overlays the\n    // trashcan UI (no trashcan to click to close it).\n    if (workspace.trashcan &&\n      workspace.trashcan.flyout) {\n      workspace.trashcan.flyout.hide();\n    }\n    var toolbox = workspace.getToolbox();\n    if (toolbox &&\n        toolbox.getFlyout() &&\n        toolbox.getFlyout().autoClose) {\n      toolbox.clearSelection();\n    }\n  }\n};\n\n/**\n * Returns the main workspace.  Returns the last used main workspace (based on\n * focus).  Try not to use this function, particularly if there are multiple\n * Blockly instances on a page.\n * @return {!Blockly.Workspace} The main workspace.\n */\nBlockly.getMainWorkspace = function() {\n  return /** @type {!Blockly.Workspace} */ (Blockly.mainWorkspace);\n};\n\n/**\n * Wrapper to window.alert() that app developers may override to\n * provide alternatives to the modal browser window.\n * @param {string} message The message to display to the user.\n * @param {function()=} opt_callback The callback when the alert is dismissed.\n */\nBlockly.alert = function(message, opt_callback) {\n  alert(message);\n  if (opt_callback) {\n    opt_callback();\n  }\n};\n\n/**\n * Wrapper to window.confirm() that app developers may override to\n * provide alternatives to the modal browser window.\n * @param {string} message The message to display to the user.\n * @param {!function(boolean)} callback The callback for handling user response.\n */\nBlockly.confirm = function(message, callback) {\n  callback(confirm(message));\n};\n\n/**\n * Wrapper to window.prompt() that app developers may override to provide\n * alternatives to the modal browser window. Built-in browser prompts are\n * often used for better text input experience on mobile device. We strongly\n * recommend testing mobile when overriding this.\n * @param {string} message The message to display to the user.\n * @param {string} defaultValue The value to initialize the prompt with.\n * @param {!function(?string)} callback The callback for handling user response.\n */\nBlockly.prompt = function(message, defaultValue, callback) {\n  callback(prompt(message, defaultValue));\n};\n\n/**\n * Helper function for defining a block from JSON.  The resulting function has\n * the correct value of jsonDef at the point in code where jsonInit is called.\n * @param {!Object} jsonDef The JSON definition of a block.\n * @return {function()} A function that calls jsonInit with the correct value\n *     of jsonDef.\n * @private\n */\nBlockly.jsonInitFactory_ = function(jsonDef) {\n  return function() {\n    this.jsonInit(jsonDef);\n  };\n};\n\n/**\n * Define blocks from an array of JSON block definitions, as might be generated\n * by the Blockly Developer Tools.\n * @param {!Array.<!Object>} jsonArray An array of JSON block definitions.\n */\nBlockly.defineBlocksWithJsonArray = function(jsonArray) {\n  for (var i = 0; i < jsonArray.length; i++) {\n    var elem = jsonArray[i];\n    if (!elem) {\n      console.warn(\n          'Block definition #' + i + ' in JSON array is ' + elem + '. ' +\n          'Skipping.');\n    } else {\n      var typename = elem.type;\n      if (typename == null || typename === '') {\n        console.warn(\n            'Block definition #' + i +\n            ' in JSON array is missing a type attribute. Skipping.');\n      } else {\n        if (Blockly.Blocks[typename]) {\n          console.warn(\n              'Block definition #' + i + ' in JSON array' +\n              ' overwrites prior definition of \"' + typename + '\".');\n        }\n        Blockly.Blocks[typename] = {\n          init: Blockly.jsonInitFactory_(elem)\n        };\n      }\n    }\n  }\n};\n\n/**\n * Bind an event to a function call.  When calling the function, verifies that\n * it belongs to the touch stream that is currently being processed, and splits\n * multitouch events into multiple events as needed.\n * @param {!EventTarget} node Node upon which to listen.\n * @param {string} name Event name to listen to (e.g. 'mousedown').\n * @param {Object} thisObject The value of 'this' in the function.\n * @param {!Function} func Function to call when event is triggered.\n * @param {boolean=} opt_noCaptureIdentifier True if triggering on this event\n *     should not block execution of other event handlers on this touch or\n *     other simultaneous touches.  False by default.\n * @param {boolean=} opt_noPreventDefault True if triggering on this event\n *     should prevent the default handler.  False by default.  If\n *     opt_noPreventDefault is provided, opt_noCaptureIdentifier must also be\n *     provided.\n * @return {!Blockly.EventData} Opaque data that can be passed to unbindEvent_.\n */\nBlockly.bindEventWithChecks_ = function(node, name, thisObject, func,\n    opt_noCaptureIdentifier, opt_noPreventDefault) {\n  var handled = false;\n  var wrapFunc = function(e) {\n    var captureIdentifier = !opt_noCaptureIdentifier;\n    // Handle each touch point separately.  If the event was a mouse event, this\n    // will hand back an array with one element, which we're fine handling.\n    var events = Blockly.Touch.splitEventByTouches(e);\n    for (var i = 0, event; (event = events[i]); i++) {\n      if (captureIdentifier && !Blockly.Touch.shouldHandleEvent(event)) {\n        continue;\n      }\n      Blockly.Touch.setClientFromTouch(event);\n      if (thisObject) {\n        func.call(thisObject, event);\n      } else {\n        func(event);\n      }\n      handled = true;\n    }\n  };\n\n  var bindData = [];\n  if (Blockly.utils.global['PointerEvent'] &&\n      (name in Blockly.Touch.TOUCH_MAP)) {\n    for (var i = 0, type; (type = Blockly.Touch.TOUCH_MAP[name][i]); i++) {\n      node.addEventListener(type, wrapFunc, false);\n      bindData.push([node, type, wrapFunc]);\n    }\n  } else {\n    node.addEventListener(name, wrapFunc, false);\n    bindData.push([node, name, wrapFunc]);\n\n    // Add equivalent touch event.\n    if (name in Blockly.Touch.TOUCH_MAP) {\n      var touchWrapFunc = function(e) {\n        wrapFunc(e);\n        // Calling preventDefault stops the browser from scrolling/zooming the\n        // page.\n        var preventDef = !opt_noPreventDefault;\n        if (handled && preventDef) {\n          e.preventDefault();\n        }\n      };\n      for (var i = 0, type; (type = Blockly.Touch.TOUCH_MAP[name][i]); i++) {\n        node.addEventListener(type, touchWrapFunc, false);\n        bindData.push([node, type, touchWrapFunc]);\n      }\n    }\n  }\n  return bindData;\n};\n\n\n/**\n * Bind an event to a function call.  Handles multitouch events by using the\n * coordinates of the first changed touch, and doesn't do any safety checks for\n * simultaneous event processing.  In most cases prefer is to use\n * `Blockly.bindEventWithChecks_`.\n * @param {!EventTarget} node Node upon which to listen.\n * @param {string} name Event name to listen to (e.g. 'mousedown').\n * @param {Object} thisObject The value of 'this' in the function.\n * @param {!Function} func Function to call when event is triggered.\n * @return {!Blockly.EventData} Opaque data that can be passed to unbindEvent_.\n */\nBlockly.bindEvent_ = function(node, name, thisObject, func) {\n  var wrapFunc = function(e) {\n    if (thisObject) {\n      func.call(thisObject, e);\n    } else {\n      func(e);\n    }\n  };\n\n  var bindData = [];\n  if (Blockly.utils.global['PointerEvent'] &&\n      (name in Blockly.Touch.TOUCH_MAP)) {\n    for (var i = 0, type; (type = Blockly.Touch.TOUCH_MAP[name][i]); i++) {\n      node.addEventListener(type, wrapFunc, false);\n      bindData.push([node, type, wrapFunc]);\n    }\n  } else {\n    node.addEventListener(name, wrapFunc, false);\n    bindData.push([node, name, wrapFunc]);\n\n    // Add equivalent touch event.\n    if (name in Blockly.Touch.TOUCH_MAP) {\n      var touchWrapFunc = function(e) {\n        // Punt on multitouch events.\n        if (e.changedTouches && e.changedTouches.length == 1) {\n          // Map the touch event's properties to the event.\n          var touchPoint = e.changedTouches[0];\n          e.clientX = touchPoint.clientX;\n          e.clientY = touchPoint.clientY;\n        }\n        wrapFunc(e);\n\n        // Stop the browser from scrolling/zooming the page.\n        e.preventDefault();\n      };\n      for (var i = 0, type; (type = Blockly.Touch.TOUCH_MAP[name][i]); i++) {\n        node.addEventListener(type, touchWrapFunc, false);\n        bindData.push([node, type, touchWrapFunc]);\n      }\n    }\n  }\n  return bindData;\n};\n\n/**\n * Unbind one or more events event from a function call.\n * @param {!Array.<!Array>} bindData Opaque data from bindEvent_.\n *     This list is emptied during the course of calling this function.\n * @return {!Function} The function call.\n */\nBlockly.unbindEvent_ = function(bindData) {\n  while (bindData.length) {\n    var bindDatum = bindData.pop();\n    var node = bindDatum[0];\n    var name = bindDatum[1];\n    var func = bindDatum[2];\n    node.removeEventListener(name, func, false);\n  }\n  return func;\n};\n\n/**\n * Is the given string a number (includes negative and decimals).\n * @param {string} str Input string.\n * @return {boolean} True if number, false otherwise.\n */\nBlockly.isNumber = function(str) {\n  return /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(str);\n};\n\n/**\n * Convert a hue (HSV model) into an RGB hex triplet.\n * @param {number} hue Hue on a colour wheel (0-360).\n * @return {string} RGB code, e.g. '#5ba65b'.\n */\nBlockly.hueToHex = function(hue) {\n  return Blockly.utils.colour.hsvToHex(hue, Blockly.HSV_SATURATION,\n      Blockly.HSV_VALUE * 255);\n};\n\n/**\n * Checks old colour constants are not overwritten by the host application.\n * If a constant is overwritten, it prints a console warning directing the\n * developer to use the equivalent Msg constant.\n * @package\n */\nBlockly.checkBlockColourConstants = function() {\n  Blockly.checkBlockColourConstant_(\n      'LOGIC_HUE', ['Blocks', 'logic', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'LOGIC_HUE', ['Constants', 'Logic', 'HUE'], 210);\n  Blockly.checkBlockColourConstant_(\n      'LOOPS_HUE', ['Blocks', 'loops', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'LOOPS_HUE', ['Constants', 'Loops', 'HUE'], 120);\n  Blockly.checkBlockColourConstant_(\n      'MATH_HUE', ['Blocks', 'math', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'MATH_HUE', ['Constants', 'Math', 'HUE'], 230);\n  Blockly.checkBlockColourConstant_(\n      'TEXTS_HUE', ['Blocks', 'texts', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'TEXTS_HUE', ['Constants', 'Text', 'HUE'], 160);\n  Blockly.checkBlockColourConstant_(\n      'LISTS_HUE', ['Blocks', 'lists', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'LISTS_HUE', ['Constants', 'Lists', 'HUE'], 260);\n  Blockly.checkBlockColourConstant_(\n      'COLOUR_HUE', ['Blocks', 'colour', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'COLOUR_HUE', ['Constants', 'Colour', 'HUE'], 20);\n  Blockly.checkBlockColourConstant_(\n      'VARIABLES_HUE', ['Blocks', 'variables', 'HUE'], undefined);\n  Blockly.checkBlockColourConstant_(\n      'VARIABLES_HUE', ['Constants', 'Variables', 'HUE'], 330);\n  // Blockly.Blocks.variables_dynamic.HUE never existed.\n  Blockly.checkBlockColourConstant_(\n      'VARIABLES_DYNAMIC_HUE', ['Constants', 'VariablesDynamic', 'HUE'], 310);\n  Blockly.checkBlockColourConstant_(\n      'PROCEDURES_HUE', ['Blocks', 'procedures', 'HUE'], undefined);\n  // Blockly.Constants.Procedures.HUE never existed.\n};\n\n/**\n * Checks for a constant in the Blockly namespace, verifying it is undefined or\n * has the old/original value. Prints a warning if this is not true.\n * @param {string} msgName The Msg constant identifier.\n * @param {Array.<string>} blocklyNamePath The name parts of the tested\n *     constant.\n * @param {number|undefined} expectedValue The expected value of the constant.\n * @private\n */\nBlockly.checkBlockColourConstant_ = function(\n    msgName, blocklyNamePath, expectedValue) {\n  var namePath = 'Blockly';\n  var value = Blockly;\n  for (var i = 0; i < blocklyNamePath.length; ++i) {\n    namePath += '.' + blocklyNamePath[i];\n    if (value) {\n      value = value[blocklyNamePath[i]];\n    }\n  }\n\n  if (value && value !== expectedValue) {\n    var warningPattern = (expectedValue === undefined) ?\n        '%1 has been removed. Use Blockly.Msg[\"%2\"].' :\n        '%1 is deprecated and unused. Override Blockly.Msg[\"%2\"].';\n    var warning = warningPattern.replace('%1', namePath).replace('%2', msgName);\n    console.warn(warning);\n  }\n};\n\n/**\n * Set the parent container.  This is the container element that the WidgetDiv,\n * DropDownDiv, and Tooltip are rendered into the first time `Blockly.inject`\n * is called.\n * This method is a NOP if called after the first ``Blockly.inject``.\n * @param {!Element} container The container element.\n */\nBlockly.setParentContainer = function(container) {\n  Blockly.parentContainer = container;\n};\n"],"file":"blockly.min.js"}