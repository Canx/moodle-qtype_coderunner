{"version":3,"sources":["../../../src/blockly/core/theme_manager.js"],"names":["goog","provide","require","Blockly","ThemeManager","workspace","theme","workspace_","theme_","subscribedWorkspaces_","componentDB_","Object","create","Component","prototype","getTheme","setTheme","prevTheme","injectionDiv","getInjectionDiv","utils","dom","removeClass","getClassName","addClass","i","refreshTheme","keys","key","j","component","element","propertyName","style","getComponentStyle","hideChaff","subscribeWorkspace","push","unsubscribeWorkspace","index","indexOf","Error","splice","subscribe","componentName","unsubscribe","componentNames","c","elements","length","dispose","owner_"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Object in charge of storing and updating a workspace theme\n *     and UI components.\n * @author aschmiedt@google.com (Abby Schmiedt)\n * @author samelh@google.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.ThemeManager');\n\ngoog.require('Blockly.Theme');\n\n\n/**\n * Class for storing and updating a workspace's theme and UI components.\n * @param {!Blockly.WorkspaceSvg} workspace The main workspace.\n * @param {!Blockly.Theme} theme The workspace theme.\n * @constructor\n * @package\n */\nBlockly.ThemeManager = function(workspace, theme) {\n\n  /**\n   * The main workspace.\n   * @type {!Blockly.WorkspaceSvg}\n   * @private\n   */\n  this.workspace_ = workspace;\n\n  /**\n   * The Blockly theme to use.\n   * @type {!Blockly.Theme}\n   * @private\n   */\n  this.theme_ = theme;\n\n  /**\n   * A list of workspaces that are subscribed to this theme.\n   * @type {!Array.<Blockly.Workspace>}\n   * @private\n   */\n  this.subscribedWorkspaces_ = [];\n\n  /**\n   * A map of subscribed UI components, keyed by component name.\n   * @type {!Object.<string, !Array.<!Blockly.ThemeManager.Component>>}\n   * @private\n   */\n  this.componentDB_ = Object.create(null);\n};\n\n/**\n * A Blockly UI component type.\n * @typedef {{\n  *            element:!Element,\n  *            propertyName:string\n  *          }}\n  */\nBlockly.ThemeManager.Component;\n\n/**\n * Get the workspace theme.\n * @return {!Blockly.Theme} The workspace theme.\n * @package\n */\nBlockly.ThemeManager.prototype.getTheme = function() {\n  return this.theme_;\n};\n\n/**\n * Set the workspace theme, and refresh the workspace and all components.\n * @param {!Blockly.Theme} theme The workspace theme.\n * @package\n */\nBlockly.ThemeManager.prototype.setTheme = function(theme) {\n  var prevTheme = this.theme_;\n  this.theme_ = theme;\n\n  // Set the theme name onto the injection div.\n  var injectionDiv = this.workspace_.getInjectionDiv();\n  if (injectionDiv) {\n    if (prevTheme) {\n      Blockly.utils.dom.removeClass(injectionDiv, prevTheme.getClassName());\n    }\n    Blockly.utils.dom.addClass(injectionDiv, this.theme_.getClassName());\n  }\n\n  // Refresh all subscribed workspaces.\n  for (var i = 0, workspace; (workspace = this.subscribedWorkspaces_[i]); i++) {\n    workspace.refreshTheme();\n  }\n\n  // Refresh all registered Blockly UI components.\n  for (var i = 0, keys = Object.keys(this.componentDB_),\n    key; (key = keys[i]); i++) {\n    for (var j = 0, component; (component = this.componentDB_[key][j]); j++) {\n      var element = component.element;\n      var propertyName = component.propertyName;\n      var style = this.theme_ && this.theme_.getComponentStyle(key);\n      element.style[propertyName] = style || '';\n    }\n  }\n\n  Blockly.hideChaff();\n};\n\n/**\n * Subscribe a workspace to changes to the selected theme.  If a new theme is\n * set, the workspace is called to refresh its blocks.\n * @param {!Blockly.Workspace} workspace The workspace to subscribe.\n * @package\n */\nBlockly.ThemeManager.prototype.subscribeWorkspace = function(workspace) {\n  this.subscribedWorkspaces_.push(workspace);\n};\n\n/**\n * Unsubscribe a workspace to changes to the selected theme.\n * @param {!Blockly.Workspace} workspace The workspace to unsubscribe.\n * @package\n */\nBlockly.ThemeManager.prototype.unsubscribeWorkspace = function(workspace) {\n  var index = this.subscribedWorkspaces_.indexOf(workspace);\n  if (index < 0) {\n    throw Error('Cannot unsubscribe a workspace that hasn\\'t been subscribed.');\n  }\n  this.subscribedWorkspaces_.splice(index, 1);\n};\n\n/**\n * Subscribe an element to changes to the selected theme.  If a new theme is\n * selected, the element's style is refreshed with the new theme's style.\n * @param {!Element} element The element to subscribe.\n * @param {string} componentName The name used to identify the component. This\n *     must be the same name used to configure the style in the Theme object.\n * @param {string} propertyName The inline style property name to update.\n * @package\n */\nBlockly.ThemeManager.prototype.subscribe = function(element, componentName,\n    propertyName) {\n  if (!this.componentDB_[componentName]) {\n    this.componentDB_[componentName] = [];\n  }\n\n  // Add the element to our component map.\n  this.componentDB_[componentName].push({\n    element: element,\n    propertyName: propertyName\n  });\n\n  // Initialize the element with its corresponding theme style.\n  var style = this.theme_ && this.theme_.getComponentStyle(componentName);\n  element.style[propertyName] = style || '';\n};\n\n/**\n * Unsubscribe an element to changes to the selected theme.\n * @param {Element} element The element to unsubscribe.\n * @package\n */\nBlockly.ThemeManager.prototype.unsubscribe = function(element) {\n  if (!element) {\n    return;\n  }\n  // Go through all component, and remove any references to this element.\n  var componentNames = Object.keys(this.componentDB_);\n  for (var c = 0, componentName; (componentName = componentNames[c]); c++) {\n    var elements = this.componentDB_[componentName];\n    for (var i = elements.length - 1; i >= 0; i--) {\n      if (elements[i].element === element) {\n        elements.splice(i, 1);\n      }\n    }\n    // Clean up the component map entry if the list is empty.\n    if (!this.componentDB_[componentName].length) {\n      delete this.componentDB_[componentName];\n    }\n  }\n};\n\n/**\n * Dispose of this theme manager.\n * @package\n * @suppress {checkTypes}\n */\nBlockly.ThemeManager.prototype.dispose = function() {\n  this.owner_ = null;\n  this.theme_ = null;\n  this.subscribedWorkspaces_ = null;\n  this.componentDB_ = null;\n};\n"],"file":"theme_manager.min.js"}