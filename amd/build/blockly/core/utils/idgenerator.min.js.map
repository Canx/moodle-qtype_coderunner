{"version":3,"sources":["../../../../src/blockly/core/utils/idgenerator.js"],"names":["goog","provide","Blockly","utils","IdGenerator","nextId_","getNextUniqueId","toString"],"mappings":"AAYA,aAEAA,IAAI,CAACC,OAAL,CAAa,2BAAb,EAQAC,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0BC,OAA1B,CAAoC,CAApC,CAQAH,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0BE,eAA1B,CAA4C,UAAW,CACrD,MAAO,WAAa,CAACJ,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0BC,OAA1B,EAAD,EAAsCE,QAAtC,CAA+C,EAA/C,CACrB,CAFD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generator for unique element IDs.\n * For UUIDs use Blockly.utils.genUid. The ID generator should primarily be\n * used for IDs that end up in the DOM.\n * @author samelh@google.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.utils.IdGenerator');\n\n\n/**\n * Next unique ID to use.\n * @type {number}\n * @private\n */\nBlockly.utils.IdGenerator.nextId_ = 0;\n\n/**\n * Gets the next unique ID.\n * IDs are compatible with the HTML4 id attribute restrictions:\n * Use only ASCII letters, digits, '_', '-' and '.'\n * @return {string} The next unique identifier.\n */\nBlockly.utils.IdGenerator.getNextUniqueId = function() {\n  return 'blockly-' + (Blockly.utils.IdGenerator.nextId_++).toString(36);\n};\n"],"file":"idgenerator.min.js"}