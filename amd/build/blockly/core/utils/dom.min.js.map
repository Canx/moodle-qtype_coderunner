{"version":3,"sources":["../../../../src/blockly/core/utils/dom.js"],"names":["goog","provide","require","Blockly","utils","dom","SVG_NS","HTML_NS","XLINK_NS","NodeType","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_POSITION_CONTAINED_BY","cacheWidths_","cacheReference_","canvasContext_","createSvgElement","name","attrs","opt_parent","e","document","createElementNS","key","setAttribute","body","runtimeStyle","currentStyle","style","appendChild","addClass","element","className","classes","getAttribute","indexOf","removeClass","classList","split","i","length","splice","join","removeAttribute","hasClass","removeNode","node","parentNode","removeChild","insertAfter","newNode","refNode","siblingNode","nextSibling","Error","insertBefore","containsNode","parent","descendant","compareDocumentPosition","setCssTransform","transform","startTextWidthCache","stopTextWidthCache","getTextWidth","textElement","textContent","baseVal","width","userAgent","IE","EDGE","getBBox","getComputedTextLength","getFastTextWidth","fontSize","fontWeight","fontFamily","getFastTextWidthWithSizeString","text","computeCanvas","createElement","getContext","font","measureText","measureFontMetrics","span","block","height","div","result","alignItems","baseline","offsetTop"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utility methods for DOM manipulation.\n * These methods are not specific to Blockly, and could be factored out into\n * a JavaScript framework such as Closure.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\n/**\n * @name Blockly.utils.dom\n * @namespace\n */\ngoog.provide('Blockly.utils.dom');\n\ngoog.require('Blockly.utils.userAgent');\n\n\n/**\n * Required name space for SVG elements.\n * @const\n */\nBlockly.utils.dom.SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * Required name space for HTML elements.\n * @const\n */\nBlockly.utils.dom.HTML_NS = 'http://www.w3.org/1999/xhtml';\n\n/**\n * Required name space for XLINK elements.\n * @const\n */\nBlockly.utils.dom.XLINK_NS = 'http://www.w3.org/1999/xlink';\n\n/**\n * Node type constants.\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n * @enum {number}\n */\nBlockly.utils.dom.NodeType = {\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  DOCUMENT_POSITION_CONTAINED_BY: 16\n};\n\n/**\n * Temporary cache of text widths.\n * @type {Object}\n * @private\n */\nBlockly.utils.dom.cacheWidths_ = null;\n\n/**\n * Number of current references to cache.\n * @type {number}\n * @private\n */\nBlockly.utils.dom.cacheReference_ = 0;\n\n/**\n * A HTML canvas context used for computing text width.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nBlockly.utils.dom.canvasContext_ = null;\n\n/**\n * Helper method for creating SVG elements.\n * @param {string} name Element's tag name.\n * @param {!Object} attrs Dictionary of attribute names and values.\n * @param {Element=} opt_parent Optional parent on which to append the element.\n * @return {!SVGElement} Newly created SVG element.\n */\nBlockly.utils.dom.createSvgElement = function(name, attrs, opt_parent) {\n  var e = /** @type {!SVGElement} */\n      (document.createElementNS(Blockly.utils.dom.SVG_NS, name));\n  for (var key in attrs) {\n    e.setAttribute(key, attrs[key]);\n  }\n  // IE defines a unique attribute \"runtimeStyle\", it is NOT applied to\n  // elements created with createElementNS. However, Closure checks for IE\n  // and assumes the presence of the attribute and crashes.\n  if (document.body.runtimeStyle) {  // Indicates presence of IE-only attr.\n    e.runtimeStyle = e.currentStyle = e.style;\n  }\n  if (opt_parent) {\n    opt_parent.appendChild(e);\n  }\n  return e;\n};\n\n/**\n * Add a CSS class to a element.\n * Similar to Closure's goog.dom.classes.add, except it handles SVG elements.\n * @param {!Element} element DOM element to add class to.\n * @param {string} className Name of class to add.\n * @return {boolean} True if class was added, false if already present.\n */\nBlockly.utils.dom.addClass = function(element, className) {\n  var classes = element.getAttribute('class') || '';\n  if ((' ' + classes + ' ').indexOf(' ' + className + ' ') != -1) {\n    return false;\n  }\n  if (classes) {\n    classes += ' ';\n  }\n  element.setAttribute('class', classes + className);\n  return true;\n};\n\n/**\n * Remove a CSS class from a element.\n * Similar to Closure's goog.dom.classes.remove, except it handles SVG elements.\n * @param {!Element} element DOM element to remove class from.\n * @param {string} className Name of class to remove.\n * @return {boolean} True if class was removed, false if never present.\n */\nBlockly.utils.dom.removeClass = function(element, className) {\n  var classes = element.getAttribute('class');\n  if ((' ' + classes + ' ').indexOf(' ' + className + ' ') == -1) {\n    return false;\n  }\n  var classList = classes.split(/\\s+/);\n  for (var i = 0; i < classList.length; i++) {\n    if (!classList[i] || classList[i] == className) {\n      classList.splice(i, 1);\n      i--;\n    }\n  }\n  if (classList.length) {\n    element.setAttribute('class', classList.join(' '));\n  } else {\n    element.removeAttribute('class');\n  }\n  return true;\n};\n\n/**\n * Checks if an element has the specified CSS class.\n * Similar to Closure's goog.dom.classes.has, except it handles SVG elements.\n * @param {!Element} element DOM element to check.\n * @param {string} className Name of class to check.\n * @return {boolean} True if class exists, false otherwise.\n */\nBlockly.utils.dom.hasClass = function(element, className) {\n  var classes = element.getAttribute('class');\n  return (' ' + classes + ' ').indexOf(' ' + className + ' ') != -1;\n};\n\n/**\n * Removes a node from its parent. No-op if not attached to a parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\n// Copied from Closure goog.dom.removeNode\nBlockly.utils.dom.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n/**\n * Insert a node after a reference node.\n * Contrast with node.insertBefore function.\n * @param {!Element} newNode New element to insert.\n * @param {!Element} refNode Existing element to precede new node.\n */\nBlockly.utils.dom.insertAfter = function(newNode, refNode) {\n  var siblingNode = refNode.nextSibling;\n  var parentNode = refNode.parentNode;\n  if (!parentNode) {\n    throw Error('Reference node has no parent.');\n  }\n  if (siblingNode) {\n    parentNode.insertBefore(newNode, siblingNode);\n  } else {\n    parentNode.appendChild(newNode);\n  }\n};\n\n/**\n * Whether a node contains another node.\n * @param {!Node} parent The node that should contain the other node.\n * @param {!Node} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendant node.\n */\nBlockly.utils.dom.containsNode = function(parent, descendant) {\n  return !!(parent.compareDocumentPosition(descendant) &\n            Blockly.utils.dom.NodeType.DOCUMENT_POSITION_CONTAINED_BY);\n};\n\n/**\n * Sets the CSS transform property on an element. This function sets the\n * non-vendor-prefixed and vendor-prefixed versions for backwards compatibility\n * with older browsers. See https://caniuse.com/#feat=transforms2d\n * @param {!Element} element Element to which the CSS transform will be applied.\n * @param {string} transform The value of the CSS `transform` property.\n */\nBlockly.utils.dom.setCssTransform = function(element, transform) {\n  element.style['transform'] = transform;\n  element.style['-webkit-transform'] = transform;\n};\n\n/**\n * Start caching text widths. Every call to this function MUST also call\n * stopTextWidthCache. Caches must not survive between execution threads.\n */\nBlockly.utils.dom.startTextWidthCache = function() {\n  Blockly.utils.dom.cacheReference_++;\n  if (!Blockly.utils.dom.cacheWidths_) {\n    Blockly.utils.dom.cacheWidths_ = {};\n  }\n};\n\n/**\n * Stop caching field widths. Unless caching was already on when the\n * corresponding call to startTextWidthCache was made.\n */\nBlockly.utils.dom.stopTextWidthCache = function() {\n  Blockly.utils.dom.cacheReference_--;\n  if (!Blockly.utils.dom.cacheReference_) {\n    Blockly.utils.dom.cacheWidths_ = null;\n  }\n};\n\n/**\n * Gets the width of a text element, caching it in the process.\n * @param {!Element} textElement An SVG 'text' element.\n * @return {number} Width of element.\n */\nBlockly.utils.dom.getTextWidth = function(textElement) {\n  var key = textElement.textContent + '\\n' + textElement.className.baseVal;\n  var width;\n\n  // Return the cached width if it exists.\n  if (Blockly.utils.dom.cacheWidths_) {\n    width = Blockly.utils.dom.cacheWidths_[key];\n    if (width) {\n      return width;\n    }\n  }\n\n  // Attempt to compute fetch the width of the SVG text element.\n  try {\n    if (Blockly.utils.userAgent.IE || Blockly.utils.userAgent.EDGE) {\n      width = textElement.getBBox().width;\n    } else {\n      width = textElement.getComputedTextLength();\n    }\n  } catch (e) {\n    // In other cases where we fail to get the computed text. Instead, use an\n    // approximation and do not cache the result. At some later point in time\n    // when the block is inserted into the visible DOM, this method will be\n    // called again and, at that point in time, will not throw an exception.\n    return textElement.textContent.length * 8;\n  }\n\n  // Cache the computed width and return.\n  if (Blockly.utils.dom.cacheWidths_) {\n    Blockly.utils.dom.cacheWidths_[key] = width;\n  }\n  return width;\n};\n\n/**\n * Gets the width of a text element using a faster method than `getTextWidth`.\n * This method requires that we know the text element's font family and size in\n * advance. Similar to `getTextWidth`, we cache the width we compute.\n * @param {!Element} textElement An SVG 'text' element.\n * @param {number} fontSize The font size to use.\n * @param {string} fontWeight The font weight to use.\n * @param {string} fontFamily The font family to use.\n * @return {number} Width of element.\n */\nBlockly.utils.dom.getFastTextWidth = function(textElement,\n    fontSize, fontWeight, fontFamily) {\n  return Blockly.utils.dom.getFastTextWidthWithSizeString(textElement,\n      fontSize + 'pt', fontWeight, fontFamily);\n};\n\n/**\n * Gets the width of a text element using a faster method than `getTextWidth`.\n * This method requires that we know the text element's font family and size in\n * advance. Similar to `getTextWidth`, we cache the width we compute.\n * This method is similar to ``getFastTextWidth`` but expects the font size\n * parameter to be a string.\n * @param {!Element} textElement An SVG 'text' element.\n * @param {string} fontSize The font size to use.\n * @param {string} fontWeight The font weight to use.\n * @param {string} fontFamily The font family to use.\n * @return {number} Width of element.\n */\nBlockly.utils.dom.getFastTextWidthWithSizeString = function(textElement,\n    fontSize, fontWeight, fontFamily) {\n  var text = textElement.textContent;\n  var key = text + '\\n' + textElement.className.baseVal;\n  var width;\n\n  // Return the cached width if it exists.\n  if (Blockly.utils.dom.cacheWidths_) {\n    width = Blockly.utils.dom.cacheWidths_[key];\n    if (width) {\n      return width;\n    }\n  }\n\n  if (!Blockly.utils.dom.canvasContext_) {\n    // Inject the canvas element used for computing text widths.\n    var computeCanvas = document.createElement('canvas');\n    computeCanvas.className = 'blocklyComputeCanvas';\n    document.body.appendChild(computeCanvas);\n\n    // Initialize the HTML canvas context and set the font.\n    // The context font must match blocklyText's fontsize and font-family\n    // set in CSS.\n    Blockly.utils.dom.canvasContext_ = computeCanvas.getContext('2d');\n  }\n  // Set the desired font size and family.\n  Blockly.utils.dom.canvasContext_.font =\n      fontWeight + ' ' + fontSize + ' ' + fontFamily;\n\n  // Measure the text width using the helper canvas context.\n  width = Blockly.utils.dom.canvasContext_.measureText(text).width;\n\n  // Cache the computed width and return.\n  if (Blockly.utils.dom.cacheWidths_) {\n    Blockly.utils.dom.cacheWidths_[key] = width;\n  }\n  return width;\n};\n\n/**\n * Measure a font's metrics. The height and baseline values.\n * @param {string} text Text to measure the font dimensions of.\n * @param {string} fontSize The font size to use.\n * @param {string} fontWeight The font weight to use.\n * @param {string} fontFamily The font family to use.\n * @return {{height: number, baseline: number}} Font measurements.\n */\nBlockly.utils.dom.measureFontMetrics = function(text, fontSize, fontWeight,\n    fontFamily) {\n\n  var span = document.createElement('span');\n  span.style.font = fontWeight + ' ' + fontSize + ' ' + fontFamily;\n  span.textContent = text;\n\n  var block = document.createElement('div');\n  block.style.width = '1px';\n  block.style.height = '0px';\n\n  var div = document.createElement('div');\n  div.setAttribute('style', 'position: fixed; top: 0; left: 0; display: flex;');\n  div.appendChild(span);\n  div.appendChild(block);\n\n  document.body.appendChild(div);\n  try {\n    var result = {};\n    div.style.alignItems = 'baseline';\n    result.baseline = block.offsetTop - span.offsetTop;\n    div.style.alignItems = 'flex-end';\n    result.height = block.offsetTop - span.offsetTop;\n  } finally {\n    document.body.removeChild(div);\n  }\n  return result;\n};\n"],"file":"dom.min.js"}