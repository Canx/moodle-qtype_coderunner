{"version":3,"sources":["../../../../src/blockly/core/utils/xml.js"],"names":["goog","provide","Blockly","utils","xml","NAME_SPACE","document","createElement","tagName","createElementNS","createTextNode","text","textToDomDocument","oParser","DOMParser","parseFromString","domToText","dom","oSerializer","XMLSerializer","serializeToString"],"mappings":"AAYA,aAMAA,IAAI,CAACC,OAAL,CAAa,mBAAb,EAKAC,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBC,UAAlB,CAA+B,2CAA/B,CAQAH,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBE,QAAlB,CAA6B,UAAW,CACtC,MAAOA,CAAAA,QACR,CAFD,CAUAJ,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBG,aAAlB,CAAkC,SAASC,CAAT,CAAkB,CAClD,MAAON,CAAAA,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBE,QAAlB,GAA6BG,eAA7B,CACHP,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBC,UADf,CAC2BG,CAD3B,CAER,CAHD,CAWAN,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBM,cAAlB,CAAmC,SAASC,CAAT,CAAe,CAChD,MAAOT,CAAAA,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBE,QAAlB,GAA6BI,cAA7B,CAA4CC,CAA5C,CACR,CAFD,CAWAT,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBQ,iBAAlB,CAAsC,SAASD,CAAT,CAAe,CACnD,GAAIE,CAAAA,CAAO,CAAG,GAAIC,CAAAA,SAAlB,CACA,MAAOD,CAAAA,CAAO,CAACE,eAAR,CAAwBJ,CAAxB,CAA8B,UAA9B,CACR,CAHD,CAYAT,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAkBY,SAAlB,CAA8B,SAASC,CAAT,CAAc,CAC1C,GAAIC,CAAAA,CAAW,CAAG,GAAIC,CAAAA,aAAtB,CACA,MAAOD,CAAAA,CAAW,CAACE,iBAAZ,CAA8BH,CAA9B,CACR,CAHD","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview XML element manipulation.\n * These methods are not specific to Blockly, and could be factored out into\n * a JavaScript framework such as Closure.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\n/**\n * @name Blockly.utils.xml\n * @namespace\n */\ngoog.provide('Blockly.utils.xml');\n\n/**\n * Namespace for Blockly's XML.\n */\nBlockly.utils.xml.NAME_SPACE = 'https://developers.google.com/blockly/xml';\n\n/**\n * Get the document object.  This method is overridden in the Node.js build of\n * Blockly. See gulpfile.js, package-blockly-node task.\n * @return {!Document} The document object.\n * @public\n */\nBlockly.utils.xml.document = function() {\n  return document;\n};\n\n/**\n * Create DOM element for XML.\n * @param {string} tagName Name of DOM element.\n * @return {!Element} New DOM element.\n * @public\n */\nBlockly.utils.xml.createElement = function(tagName) {\n  return Blockly.utils.xml.document().createElementNS(\n      Blockly.utils.xml.NAME_SPACE, tagName);\n};\n\n/**\n * Create text element for XML.\n * @param {string} text Text content.\n * @return {!Text} New DOM text node.\n * @public\n */\nBlockly.utils.xml.createTextNode = function(text) {\n  return Blockly.utils.xml.document().createTextNode(text);\n};\n\n/**\n * Converts an XML string into a DOM tree.\n * @param {string} text XML string.\n * @return {Document} The DOM document.\n * @throws if XML doesn't parse.\n * @public\n */\nBlockly.utils.xml.textToDomDocument = function(text) {\n  var oParser = new DOMParser();\n  return oParser.parseFromString(text, 'text/xml');\n};\n\n/**\n * Converts a DOM structure into plain text.\n * Currently the text format is fairly ugly: all one line with no whitespace.\n * @param {!Node} dom A tree of XML nodes.\n * @return {string} Text representation.\n * @public\n */\nBlockly.utils.xml.domToText = function(dom) {\n  var oSerializer = new XMLSerializer();\n  return oSerializer.serializeToString(dom);\n};\n"],"file":"xml.min.js"}