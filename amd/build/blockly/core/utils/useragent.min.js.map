{"version":3,"sources":["../../../../src/blockly/core/utils/useragent.js"],"names":["goog","provide","require","Blockly","utils","userAgent","IE","EDGE","JAVA_FX","CHROME","WEBKIT","GECKO","ANDROID","IPAD","IPOD","IPHONE","MAC","TABLET","MOBILE","raw","rawUpper","toUpperCase","has","name","indexOf","global","navigator"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Useragent detection.\n * These methods are not specific to Blockly, and could be factored out into\n * a JavaScript framework such as Closure.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\n/**\n * @name Blockly.utils.userAgent\n * @namespace\n */\ngoog.provide('Blockly.utils.userAgent');\n\ngoog.require('Blockly.utils.global');\n\n/** @const {boolean} */\nBlockly.utils.userAgent.IE;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.EDGE;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.JAVA_FX;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.CHROME;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.WEBKIT;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.GECKO;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.ANDROID;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.IPAD;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.IPOD;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.IPHONE;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.MAC;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.TABLET;\n\n/** @const {boolean} */\nBlockly.utils.userAgent.MOBILE;\n\n(function(raw) {\n  Blockly.utils.userAgent.raw = raw;\n  var rawUpper = Blockly.utils.userAgent.raw.toUpperCase();\n  /**\n   * Case-insensitive test of whether name is in the useragent string.\n   * @param {string} name Name to test.\n   * @return {boolean} True if name is present.\n   */\n  function has(name) {\n    return rawUpper.indexOf(name.toUpperCase()) != -1;\n  }\n\n  // Browsers.  Logic from:\n  // https://github.com/google/closure-library/blob/master/closure/goog/labs/useragent/browser.js\n  Blockly.utils.userAgent.IE = has('Trident') || has('MSIE');\n  Blockly.utils.userAgent.EDGE = has('Edge');\n  // Useragent for JavaFX:\n  // Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.44\n  //     (KHTML, like Gecko) JavaFX/8.0 Safari/537.44\n  Blockly.utils.userAgent.JAVA_FX = has('JavaFX');\n  Blockly.utils.userAgent.CHROME = (has('Chrome') || has('CriOS')) &&\n        !Blockly.utils.userAgent.EDGE;\n\n  // Engines.  Logic from:\n  // https://github.com/google/closure-library/blob/master/closure/goog/labs/useragent/engine.js\n  Blockly.utils.userAgent.WEBKIT = has('WebKit') &&\n      !Blockly.utils.userAgent.EDGE;\n  Blockly.utils.userAgent.GECKO = has('Gecko') &&\n      !Blockly.utils.userAgent.WEBKIT &&\n      !Blockly.utils.userAgent.IE &&\n      !Blockly.utils.userAgent.EDGE;\n\n  // Platforms.  Logic from:\n  // https://github.com/google/closure-library/blob/master/closure/goog/labs/useragent/platform.js\n  Blockly.utils.userAgent.ANDROID = has('Android');\n  Blockly.utils.userAgent.IPAD = has('iPad');\n  Blockly.utils.userAgent.IPOD = has('iPod');\n  Blockly.utils.userAgent.IPHONE = has('iPhone') &&\n      !Blockly.utils.userAgent.IPAD && !Blockly.utils.userAgent.IPOD;\n  Blockly.utils.userAgent.MAC = has('Macintosh');\n\n  // Devices.  Logic from:\n  // https://github.com/google/closure-library/blob/master/closure/goog/labs/useragent/device.js\n  Blockly.utils.userAgent.TABLET = Blockly.utils.userAgent.IPAD ||\n      (Blockly.utils.userAgent.ANDROID && !has('Mobile')) || has('Silk');\n  Blockly.utils.userAgent.MOBILE = !Blockly.utils.userAgent.TABLET &&\n      (Blockly.utils.userAgent.IPOD || Blockly.utils.userAgent.IPHONE ||\n       Blockly.utils.userAgent.ANDROID || has('IEMobile'));\n})((Blockly.utils.global.navigator && Blockly.utils.global.navigator.userAgent) || '');\n"],"file":"useragent.min.js"}