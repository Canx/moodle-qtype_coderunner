'use strict';function _typeof(a){"@babel/helpers - typeof";if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){_typeof=function(a){return typeof a}}else{_typeof=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return _typeof(a)}goog.provide("Blockly.utils.object");Blockly.utils.object.inherits=function(a,b){a.superClass_=b.prototype;a.prototype=Object.create(b.prototype);a.prototype.constructor=a};Blockly.utils.object.mixin=function(a,b){for(var c in b){a[c]=b[c]}};Blockly.utils.object.deepMerge=function(a,b){for(var c in b){if(null!=b[c]&&"object"===_typeof(b[c])){a[c]=Blockly.utils.object.deepMerge(a[c]||Object.create(null),b[c])}else{a[c]=b[c]}}return a};Blockly.utils.object.values=function(a){if(Object.values){return Object.values(a)}return Object.keys(a).map(function(b){return a[b]})};
//# sourceMappingURL=object.min.js.map
