{"version":3,"sources":["../../../src/blockly/core/constants.js"],"names":["goog","provide","Blockly","LINE_MODE_MULTIPLIER","PAGE_MODE_MULTIPLIER","DRAG_RADIUS","FLYOUT_DRAG_RADIUS","SNAP_RADIUS","CONNECTING_SNAP_RADIUS","CURRENT_CONNECTION_PREFERENCE","BUMP_DELAY","BUMP_RANDOMNESS","COLLAPSE_CHARS","LONGPRESS","SOUND_LIMIT","DRAG_STACK","HSV_SATURATION","HSV_VALUE","SPRITE","width","height","url","INPUT_VALUE","OUTPUT_VALUE","NEXT_STATEMENT","PREVIOUS_STATEMENT","DUMMY_INPUT","ALIGN_LEFT","ALIGN_CENTRE","ALIGN_RIGHT","DRAG_NONE","DRAG_STICKY","DRAG_BEGIN","DRAG_FREE","OPPOSITE_TYPE","TOOLBOX_AT_TOP","TOOLBOX_AT_BOTTOM","TOOLBOX_AT_LEFT","TOOLBOX_AT_RIGHT","DELETE_AREA_NONE","DELETE_AREA_TRASH","DELETE_AREA_TOOLBOX","VARIABLE_CATEGORY_NAME","VARIABLE_DYNAMIC_CATEGORY_NAME","PROCEDURE_CATEGORY_NAME","RENAME_VARIABLE_ID","DELETE_VARIABLE_ID"],"mappings":"AAUA,aAEAA,IAAI,CAACC,OAAL,CAAa,mBAAb,EAMAC,OAAO,CAACC,oBAAR,CAA+B,EAA/B,CAMAD,OAAO,CAACE,oBAAR,CAA+B,GAA/B,CAKAF,OAAO,CAACG,WAAR,CAAsB,CAAtB,CAOAH,OAAO,CAACI,kBAAR,CAA6B,EAA7B,CAKAJ,OAAO,CAACK,WAAR,CAAsB,EAAtB,CAMAL,OAAO,CAACM,sBAAR,CAAiCN,OAAO,CAACK,WAAzC,CAOAL,OAAO,CAACO,6BAAR,CAAwC,CAAxC,CAKAP,OAAO,CAACQ,UAAR,CAAqB,GAArB,CAKAR,OAAO,CAACS,eAAR,CAA0B,EAA1B,CAKAT,OAAO,CAACU,cAAR,CAAyB,EAAzB,CAKAV,OAAO,CAACW,SAAR,CAAoB,GAApB,CAMAX,OAAO,CAACY,WAAR,CAAsB,GAAtB,CAMAZ,OAAO,CAACa,UAAR,IAMAb,OAAO,CAACc,cAAR,CAAyB,GAAzB,CAMAd,OAAO,CAACe,SAAR,CAAoB,GAApB,CAKAf,OAAO,CAACgB,MAAR,CAAiB,CACfC,KAAK,CAAE,EADQ,CAEfC,MAAM,CAAE,GAFO,CAGfC,GAAG,CAAE,aAHU,CAAjB,CAYAnB,OAAO,CAACoB,WAAR,CAAsB,CAAtB,CAMApB,OAAO,CAACqB,YAAR,CAAuB,CAAvB,CAMArB,OAAO,CAACsB,cAAR,CAAyB,CAAzB,CAMAtB,OAAO,CAACuB,kBAAR,CAA6B,CAA7B,CAMAvB,OAAO,CAACwB,WAAR,CAAsB,CAAtB,CAMAxB,OAAO,CAACyB,UAAR,CAAqB,CAAC,CAAtB,CAMAzB,OAAO,CAAC0B,YAAR,CAAuB,CAAvB,CAMA1B,OAAO,CAAC2B,WAAR,CAAsB,CAAtB,CAMA3B,OAAO,CAAC4B,SAAR,CAAoB,CAApB,CAMA5B,OAAO,CAAC6B,WAAR,CAAsB,CAAtB,CAOA7B,OAAO,CAAC8B,UAAR,CAAqB,CAArB,CAMA9B,OAAO,CAAC+B,SAAR,CAAoB,CAApB,CAMA/B,OAAO,CAACgC,aAAR,CAAwB,EAAxB,CACAhC,OAAO,CAACgC,aAAR,CAAsBhC,OAAO,CAACoB,WAA9B,EAA6CpB,OAAO,CAACqB,YAArD,CACArB,OAAO,CAACgC,aAAR,CAAsBhC,OAAO,CAACqB,YAA9B,EAA8CrB,OAAO,CAACoB,WAAtD,CACApB,OAAO,CAACgC,aAAR,CAAsBhC,OAAO,CAACsB,cAA9B,EAAgDtB,OAAO,CAACuB,kBAAxD,CACAvB,OAAO,CAACgC,aAAR,CAAsBhC,OAAO,CAACuB,kBAA9B,EAAoDvB,OAAO,CAACsB,cAA5D,CAOAtB,OAAO,CAACiC,cAAR,CAAyB,CAAzB,CAMAjC,OAAO,CAACkC,iBAAR,CAA4B,CAA5B,CAMAlC,OAAO,CAACmC,eAAR,CAA0B,CAA1B,CAMAnC,OAAO,CAACoC,gBAAR,CAA2B,CAA3B,CAOApC,OAAO,CAACqC,gBAAR,CAA2B,IAA3B,CAMArC,OAAO,CAACsC,iBAAR,CAA4B,CAA5B,CAOAtC,OAAO,CAACuC,mBAAR,CAA8B,CAA9B,CAQAvC,OAAO,CAACwC,sBAAR,CAAiC,UAAjC,CAOAxC,OAAO,CAACyC,8BAAR,CAAyC,kBAAzC,CAQAzC,OAAO,CAAC0C,uBAAR,CAAkC,WAAlC,CAQA1C,OAAO,CAAC2C,kBAAR,CAA6B,oBAA7B,CAQA3C,OAAO,CAAC4C,kBAAR,CAA6B,oBAA7B","sourcesContent":["/**\n * @license\n * Copyright 2016 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Blockly constants.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.constants');\n\n/**\n * The multiplier for scroll wheel deltas using the line delta mode.\n * @type {number}\n */\nBlockly.LINE_MODE_MULTIPLIER = 40;\n\n/**\n * The multiplier for scroll wheel deltas using the page delta mode.\n * @type {number}\n */\nBlockly.PAGE_MODE_MULTIPLIER = 125;\n\n/**\n * Number of pixels the mouse must move before a drag starts.\n */\nBlockly.DRAG_RADIUS = 5;\n\n/**\n * Number of pixels the mouse must move before a drag/scroll starts from the\n * flyout.  Because the drag-intention is determined when this is reached, it is\n * larger than Blockly.DRAG_RADIUS so that the drag-direction is clearer.\n */\nBlockly.FLYOUT_DRAG_RADIUS = 10;\n\n/**\n * Maximum misalignment between connections for them to snap together.\n */\nBlockly.SNAP_RADIUS = 28;\n\n/**\n * Maximum misalignment between connections for them to snap together,\n * when a connection is already highlighted.\n */\nBlockly.CONNECTING_SNAP_RADIUS = Blockly.SNAP_RADIUS;\n\n/**\n * How much to prefer staying connected to the current connection over moving to\n * a new connection.  The current previewed connection is considered to be this\n * much closer to the matching connection on the block than it actually is.\n */\nBlockly.CURRENT_CONNECTION_PREFERENCE = 8;\n\n/**\n * Delay in ms between trigger and bumping unconnected block out of alignment.\n */\nBlockly.BUMP_DELAY = 250;\n\n/**\n * Maximum randomness in workspace units for bumping a block.\n */\nBlockly.BUMP_RANDOMNESS = 10;\n\n/**\n * Number of characters to truncate a collapsed block to.\n */\nBlockly.COLLAPSE_CHARS = 30;\n\n/**\n * Length in ms for a touch to become a long press.\n */\nBlockly.LONGPRESS = 750;\n\n/**\n * Prevent a sound from playing if another sound preceded it within this many\n * milliseconds.\n */\nBlockly.SOUND_LIMIT = 100;\n\n/**\n * When dragging a block out of a stack, split the stack in two (true), or drag\n * out the block healing the stack (false).\n */\nBlockly.DRAG_STACK = true;\n\n/**\n * The richness of block colours, regardless of the hue.\n * Must be in the range of 0 (inclusive) to 1 (exclusive).\n */\nBlockly.HSV_SATURATION = 0.45;\n\n/**\n * The intensity of block colours, regardless of the hue.\n * Must be in the range of 0 (inclusive) to 1 (exclusive).\n */\nBlockly.HSV_VALUE = 0.65;\n\n/**\n * Sprited icons and images.\n */\nBlockly.SPRITE = {\n  width: 96,\n  height: 124,\n  url: 'sprites.png'\n};\n\n// Constants below this point are not intended to be changed.\n\n/**\n * ENUM for a right-facing value input.  E.g. 'set item to' or 'return'.\n * @const\n */\nBlockly.INPUT_VALUE = 1;\n\n/**\n * ENUM for a left-facing value output.  E.g. 'random fraction'.\n * @const\n */\nBlockly.OUTPUT_VALUE = 2;\n\n/**\n * ENUM for a down-facing block stack.  E.g. 'if-do' or 'else'.\n * @const\n */\nBlockly.NEXT_STATEMENT = 3;\n\n/**\n * ENUM for an up-facing block stack.  E.g. 'break out of loop'.\n * @const\n */\nBlockly.PREVIOUS_STATEMENT = 4;\n\n/**\n * ENUM for an dummy input.  Used to add field(s) with no input.\n * @const\n */\nBlockly.DUMMY_INPUT = 5;\n\n/**\n * ENUM for left alignment.\n * @const\n */\nBlockly.ALIGN_LEFT = -1;\n\n/**\n * ENUM for centre alignment.\n * @const\n */\nBlockly.ALIGN_CENTRE = 0;\n\n/**\n * ENUM for right alignment.\n * @const\n */\nBlockly.ALIGN_RIGHT = 1;\n\n/**\n * ENUM for no drag operation.\n * @const\n */\nBlockly.DRAG_NONE = 0;\n\n/**\n * ENUM for inside the sticky DRAG_RADIUS.\n * @const\n */\nBlockly.DRAG_STICKY = 1;\n\n/**\n * ENUM for inside the non-sticky DRAG_RADIUS, for differentiating between\n * clicks and drags.\n * @const\n */\nBlockly.DRAG_BEGIN = 1;\n\n/**\n * ENUM for freely draggable (outside the DRAG_RADIUS, if one applies).\n * @const\n */\nBlockly.DRAG_FREE = 2;\n\n/**\n * Lookup table for determining the opposite type of a connection.\n * @const\n */\nBlockly.OPPOSITE_TYPE = [];\nBlockly.OPPOSITE_TYPE[Blockly.INPUT_VALUE] = Blockly.OUTPUT_VALUE;\nBlockly.OPPOSITE_TYPE[Blockly.OUTPUT_VALUE] = Blockly.INPUT_VALUE;\nBlockly.OPPOSITE_TYPE[Blockly.NEXT_STATEMENT] = Blockly.PREVIOUS_STATEMENT;\nBlockly.OPPOSITE_TYPE[Blockly.PREVIOUS_STATEMENT] = Blockly.NEXT_STATEMENT;\n\n\n/**\n * ENUM for toolbox and flyout at top of screen.\n * @const\n */\nBlockly.TOOLBOX_AT_TOP = 0;\n\n/**\n * ENUM for toolbox and flyout at bottom of screen.\n * @const\n */\nBlockly.TOOLBOX_AT_BOTTOM = 1;\n\n/**\n * ENUM for toolbox and flyout at left of screen.\n * @const\n */\nBlockly.TOOLBOX_AT_LEFT = 2;\n\n/**\n * ENUM for toolbox and flyout at right of screen.\n * @const\n */\nBlockly.TOOLBOX_AT_RIGHT = 3;\n\n/**\n * ENUM representing that an event is not in any delete areas.\n * Null for backwards compatibility reasons.\n * @const\n */\nBlockly.DELETE_AREA_NONE = null;\n\n/**\n * ENUM representing that an event is in the delete area of the trash can.\n * @const\n */\nBlockly.DELETE_AREA_TRASH = 1;\n\n/**\n * ENUM representing that an event is in the delete area of the toolbox or\n * flyout.\n * @const\n */\nBlockly.DELETE_AREA_TOOLBOX = 2;\n\n/**\n * String for use in the \"custom\" attribute of a category in toolbox XML.\n * This string indicates that the category should be dynamically populated with\n * variable blocks.\n * @const {string}\n */\nBlockly.VARIABLE_CATEGORY_NAME = 'VARIABLE';\n/**\n * String for use in the \"custom\" attribute of a category in toolbox XML.\n * This string indicates that the category should be dynamically populated with\n * variable blocks.\n * @const {string}\n */\nBlockly.VARIABLE_DYNAMIC_CATEGORY_NAME = 'VARIABLE_DYNAMIC';\n\n/**\n * String for use in the \"custom\" attribute of a category in toolbox XML.\n * This string indicates that the category should be dynamically populated with\n * procedure blocks.\n * @const {string}\n */\nBlockly.PROCEDURE_CATEGORY_NAME = 'PROCEDURE';\n\n/**\n * String for use in the dropdown created in field_variable.\n * This string indicates that this option in the dropdown is 'Rename\n * variable...' and if selected, should trigger the prompt to rename a variable.\n * @const {string}\n */\nBlockly.RENAME_VARIABLE_ID = 'RENAME_VARIABLE_ID';\n\n/**\n * String for use in the dropdown created in field_variable.\n * This string indicates that this option in the dropdown is 'Delete the \"%1\"\n * variable' and if selected, should trigger the prompt to delete a variable.\n * @const {string}\n */\nBlockly.DELETE_VARIABLE_ID = 'DELETE_VARIABLE_ID';\n"],"file":"constants.min.js"}