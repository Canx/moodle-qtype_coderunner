{"version":3,"sources":["../../../src/blockly/core/block_events.js"],"names":["goog","provide","require","Blockly","Events","BlockBase","block","superClass_","constructor","call","blockId","id","workspaceId","workspace","utils","object","inherits","Abstract","prototype","toJson","json","fromJson","Change","element","name","oldValue","newValue","BlockChange","type","CHANGE","isNull","run","forward","getEventWorkspace_","getBlockById","console","warn","mutator","setVisible","value","field","getField","setValue","setCommentText","setCollapsed","setEnabled","setInputsInline","oldMutation","mutationToDom","oldMutationDom","Xml","domToText","domToMutation","dom","textToDom","fire","Create","rendered","xml","blockToDomWithXY","blockToDom","ids","getDescendantIds","BlockCreate","CREATE","createElement","appendChild","domToWorkspace","i","dispose","Delete","getParent","Error","oldXml","BlockDelete","DELETE","Move","location","currentLocation_","oldParentId","parentId","oldInputName","inputName","oldCoordinate","coordinate","BlockMove","MOVE","newParentId","newInputName","newCoordinate","Math","round","x","y","xy","split","Coordinate","recordNew","parent","input","getInputWithBlock","getRelativeToSurfaceXY","equals","parentBlock","unplug","moveBy","blockConnection","outputConnection","previousConnection","parentConnection","getInput","connection","PREVIOUS_STATEMENT","nextConnection","connect"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Classes for all types of block events.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.Events.BlockBase');\ngoog.provide('Blockly.Events.BlockChange');\ngoog.provide('Blockly.Events.BlockCreate');\ngoog.provide('Blockly.Events.BlockDelete');\ngoog.provide('Blockly.Events.BlockMove');\ngoog.provide('Blockly.Events.Change');  // Deprecated.\ngoog.provide('Blockly.Events.Create');  // Deprecated.\ngoog.provide('Blockly.Events.Delete');  // Deprecated.\ngoog.provide('Blockly.Events.Move');  // Deprecated.\n\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.Abstract');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.xml');\n// TODO: Fix recursive dependency.\n// goog.require('Blockly.Xml');\n\n\n/**\n * Abstract class for a block event.\n * @param {Blockly.Block} block The block this event corresponds to.\n * @extends {Blockly.Events.Abstract}\n * @constructor\n */\nBlockly.Events.BlockBase = function(block) {\n  Blockly.Events.BlockBase.superClass_.constructor.call(this);\n\n  /**\n   * The block id for the block this event pertains to\n   * @type {string}\n   */\n  this.blockId = block.id;\n  this.workspaceId = block.workspace.id;\n};\nBlockly.utils.object.inherits(Blockly.Events.BlockBase,\n    Blockly.Events.Abstract);\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.BlockBase.prototype.toJson = function() {\n  var json = Blockly.Events.BlockBase.superClass_.toJson.call(this);\n  json['blockId'] = this.blockId;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.BlockBase.prototype.fromJson = function(json) {\n  Blockly.Events.BlockBase.superClass_.fromJson.call(this, json);\n  this.blockId = json['blockId'];\n};\n\n/**\n * Class for a block change event.\n * @param {Blockly.Block} block The changed block.  Null for a blank event.\n * @param {string} element One of 'field', 'comment', 'disabled', etc.\n * @param {?string} name Name of input or field affected, or null.\n * @param {*} oldValue Previous value of element.\n * @param {*} newValue New value of element.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.Change = function(block, element, name, oldValue, newValue) {\n  if (!block) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  Blockly.Events.Change.superClass_.constructor.call(this, block);\n  this.element = element;\n  this.name = name;\n  this.oldValue = oldValue;\n  this.newValue = newValue;\n};\nBlockly.utils.object.inherits(Blockly.Events.Change, Blockly.Events.BlockBase);\n\n/**\n * Class for a block change event.\n * @param {Blockly.Block} block The changed block.  Null for a blank event.\n * @param {string} element One of 'field', 'comment', 'disabled', etc.\n * @param {?string} name Name of input or field affected, or null.\n * @param {*} oldValue Previous value of element.\n * @param {*} newValue New value of element.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.BlockChange = Blockly.Events.Change;\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.Change.prototype.type = Blockly.Events.CHANGE;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.Change.prototype.toJson = function() {\n  var json = Blockly.Events.Change.superClass_.toJson.call(this);\n  json['element'] = this.element;\n  if (this.name) {\n    json['name'] = this.name;\n  }\n  json['newValue'] = this.newValue;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.Change.prototype.fromJson = function(json) {\n  Blockly.Events.Change.superClass_.fromJson.call(this, json);\n  this.element = json['element'];\n  this.name = json['name'];\n  this.newValue = json['newValue'];\n};\n\n/**\n * Does this event record any change of state?\n * @return {boolean} False if something changed.\n */\nBlockly.Events.Change.prototype.isNull = function() {\n  return this.oldValue == this.newValue;\n};\n\n/**\n * Run a change event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.Change.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  var block = workspace.getBlockById(this.blockId);\n  if (!block) {\n    console.warn(\"Can't change non-existent block: \" + this.blockId);\n    return;\n  }\n  if (block.mutator) {\n    // Close the mutator (if open) since we don't want to update it.\n    block.mutator.setVisible(false);\n  }\n  var value = forward ? this.newValue : this.oldValue;\n  switch (this.element) {\n    case 'field':\n      var field = block.getField(this.name);\n      if (field) {\n        field.setValue(value);\n      } else {\n        console.warn(\"Can't set non-existent field: \" + this.name);\n      }\n      break;\n    case 'comment':\n      block.setCommentText(/** @type {string} */ (value) || null);\n      break;\n    case 'collapsed':\n      block.setCollapsed(!!value);\n      break;\n    case 'disabled':\n      block.setEnabled(!value);\n      break;\n    case 'inline':\n      block.setInputsInline(!!value);\n      break;\n    case 'mutation':\n      var oldMutation = '';\n      if (block.mutationToDom) {\n        var oldMutationDom = block.mutationToDom();\n        oldMutation = oldMutationDom && Blockly.Xml.domToText(oldMutationDom);\n      }\n      if (block.domToMutation) {\n        var dom = Blockly.Xml.textToDom(/** @type {string} */ (value) || '<mutation/>');\n        block.domToMutation(dom);\n      }\n      Blockly.Events.fire(new Blockly.Events.Change(\n          block, 'mutation', null, oldMutation, value));\n      break;\n    default:\n      console.warn('Unknown change type: ' + this.element);\n  }\n};\n\n/**\n * Class for a block creation event.\n * @param {Blockly.Block} block The created block.  Null for a blank event.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.Create = function(block) {\n  if (!block) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  Blockly.Events.Create.superClass_.constructor.call(this, block);\n\n  if (block.workspace.rendered) {\n    this.xml = Blockly.Xml.blockToDomWithXY(block);\n  } else {\n    this.xml = Blockly.Xml.blockToDom(block);\n  }\n  this.ids = Blockly.Events.getDescendantIds(block);\n};\nBlockly.utils.object.inherits(Blockly.Events.Create, Blockly.Events.BlockBase);\n\n/**\n * Class for a block creation event.\n * @param {Blockly.Block} block The created block. Null for a blank event.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.BlockCreate = Blockly.Events.Create;\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.Create.prototype.type = Blockly.Events.CREATE;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.Create.prototype.toJson = function() {\n  var json = Blockly.Events.Create.superClass_.toJson.call(this);\n  json['xml'] = Blockly.Xml.domToText(this.xml);\n  json['ids'] = this.ids;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.Create.prototype.fromJson = function(json) {\n  Blockly.Events.Create.superClass_.fromJson.call(this, json);\n  this.xml = Blockly.Xml.textToDom(json['xml']);\n  this.ids = json['ids'];\n};\n\n/**\n * Run a creation event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.Create.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  if (forward) {\n    var xml = Blockly.utils.xml.createElement('xml');\n    xml.appendChild(this.xml);\n    Blockly.Xml.domToWorkspace(xml, workspace);\n  } else {\n    for (var i = 0, id; (id = this.ids[i]); i++) {\n      var block = workspace.getBlockById(id);\n      if (block) {\n        block.dispose(false);\n      } else if (id == this.blockId) {\n        // Only complain about root-level block.\n        console.warn(\"Can't uncreate non-existent block: \" + id);\n      }\n    }\n  }\n};\n\n/**\n * Class for a block deletion event.\n * @param {Blockly.Block} block The deleted block.  Null for a blank event.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.Delete = function(block) {\n  if (!block) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  if (block.getParent()) {\n    throw Error('Connected blocks cannot be deleted.');\n  }\n  Blockly.Events.Delete.superClass_.constructor.call(this, block);\n\n  if (block.workspace.rendered) {\n    this.oldXml = Blockly.Xml.blockToDomWithXY(block);\n  } else {\n    this.oldXml = Blockly.Xml.blockToDom(block);\n  }\n  this.ids = Blockly.Events.getDescendantIds(block);\n};\nBlockly.utils.object.inherits(Blockly.Events.Delete, Blockly.Events.BlockBase);\n\n/**\n * Class for a block deletion event.\n * @param {Blockly.Block} block The deleted block.  Null for a blank event.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.BlockDelete = Blockly.Events.Delete;\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.Delete.prototype.type = Blockly.Events.DELETE;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.Delete.prototype.toJson = function() {\n  var json = Blockly.Events.Delete.superClass_.toJson.call(this);\n  json['ids'] = this.ids;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.Delete.prototype.fromJson = function(json) {\n  Blockly.Events.Delete.superClass_.fromJson.call(this, json);\n  this.ids = json['ids'];\n};\n\n/**\n * Run a deletion event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.Delete.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  if (forward) {\n    for (var i = 0, id; (id = this.ids[i]); i++) {\n      var block = workspace.getBlockById(id);\n      if (block) {\n        block.dispose(false);\n      } else if (id == this.blockId) {\n        // Only complain about root-level block.\n        console.warn(\"Can't delete non-existent block: \" + id);\n      }\n    }\n  } else {\n    var xml = Blockly.utils.xml.createElement('xml');\n    xml.appendChild(this.oldXml);\n    Blockly.Xml.domToWorkspace(xml, workspace);\n  }\n};\n\n/**\n * Class for a block move event.  Created before the move.\n * @param {Blockly.Block} block The moved block.  Null for a blank event.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.Move = function(block) {\n  if (!block) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  Blockly.Events.Move.superClass_.constructor.call(this, block);\n  var location = this.currentLocation_();\n  this.oldParentId = location.parentId;\n  this.oldInputName = location.inputName;\n  this.oldCoordinate = location.coordinate;\n};\nBlockly.utils.object.inherits(Blockly.Events.Move, Blockly.Events.BlockBase);\n\n/**\n * Class for a block move event.  Created before the move.\n * @param {Blockly.Block} block The moved block.  Null for a blank event.\n * @extends {Blockly.Events.BlockBase}\n * @constructor\n */\nBlockly.Events.BlockMove = Blockly.Events.Move;\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.Move.prototype.type = Blockly.Events.MOVE;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.Move.prototype.toJson = function() {\n  var json = Blockly.Events.Move.superClass_.toJson.call(this);\n  if (this.newParentId) {\n    json['newParentId'] = this.newParentId;\n  }\n  if (this.newInputName) {\n    json['newInputName'] = this.newInputName;\n  }\n  if (this.newCoordinate) {\n    json['newCoordinate'] = Math.round(this.newCoordinate.x) + ',' +\n        Math.round(this.newCoordinate.y);\n  }\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.Move.prototype.fromJson = function(json) {\n  Blockly.Events.Move.superClass_.fromJson.call(this, json);\n  this.newParentId = json['newParentId'];\n  this.newInputName = json['newInputName'];\n  if (json['newCoordinate']) {\n    var xy = json['newCoordinate'].split(',');\n    this.newCoordinate =\n        new Blockly.utils.Coordinate(Number(xy[0]), Number(xy[1]));\n  }\n};\n\n/**\n * Record the block's new location.  Called after the move.\n */\nBlockly.Events.Move.prototype.recordNew = function() {\n  var location = this.currentLocation_();\n  this.newParentId = location.parentId;\n  this.newInputName = location.inputName;\n  this.newCoordinate = location.coordinate;\n};\n\n/**\n * Returns the parentId and input if the block is connected,\n *   or the XY location if disconnected.\n * @return {!Object} Collection of location info.\n * @private\n */\nBlockly.Events.Move.prototype.currentLocation_ = function() {\n  var workspace = this.getEventWorkspace_();\n  var block = workspace.getBlockById(this.blockId);\n  var location = {};\n  var parent = block.getParent();\n  if (parent) {\n    location.parentId = parent.id;\n    var input = parent.getInputWithBlock(block);\n    if (input) {\n      location.inputName = input.name;\n    }\n  } else {\n    location.coordinate = block.getRelativeToSurfaceXY();\n  }\n  return location;\n};\n\n/**\n * Does this event record any change of state?\n * @return {boolean} False if something changed.\n */\nBlockly.Events.Move.prototype.isNull = function() {\n  return this.oldParentId == this.newParentId &&\n      this.oldInputName == this.newInputName &&\n      Blockly.utils.Coordinate.equals(this.oldCoordinate, this.newCoordinate);\n};\n\n/**\n * Run a move event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.Move.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  var block = workspace.getBlockById(this.blockId);\n  if (!block) {\n    console.warn(\"Can't move non-existent block: \" + this.blockId);\n    return;\n  }\n  var parentId = forward ? this.newParentId : this.oldParentId;\n  var inputName = forward ? this.newInputName : this.oldInputName;\n  var coordinate = forward ? this.newCoordinate : this.oldCoordinate;\n  var parentBlock = null;\n  if (parentId) {\n    parentBlock = workspace.getBlockById(parentId);\n    if (!parentBlock) {\n      console.warn(\"Can't connect to non-existent block: \" + parentId);\n      return;\n    }\n  }\n  if (block.getParent()) {\n    block.unplug();\n  }\n  if (coordinate) {\n    var xy = block.getRelativeToSurfaceXY();\n    block.moveBy(coordinate.x - xy.x, coordinate.y - xy.y);\n  } else {\n    var blockConnection = block.outputConnection || block.previousConnection;\n    var parentConnection;\n    if (inputName) {\n      var input = parentBlock.getInput(inputName);\n      if (input) {\n        parentConnection = input.connection;\n      }\n    } else if (blockConnection.type == Blockly.PREVIOUS_STATEMENT) {\n      parentConnection = parentBlock.nextConnection;\n    }\n    if (parentConnection) {\n      blockConnection.connect(parentConnection);\n    } else {\n      console.warn(\"Can't connect to non-existent input: \" + inputName);\n    }\n  }\n};\n"],"file":"block_events.min.js"}