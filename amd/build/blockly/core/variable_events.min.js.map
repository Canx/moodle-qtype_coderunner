{"version":3,"sources":["../../../src/blockly/core/variable_events.js"],"names":["goog","provide","require","Blockly","Events","VarBase","variable","superClass_","constructor","call","varId","getId","workspaceId","workspace","id","utils","object","inherits","Abstract","prototype","toJson","json","fromJson","VarCreate","varType","type","varName","name","VAR_CREATE","run","forward","getEventWorkspace_","createVariable","deleteVariableById","VarDelete","VAR_DELETE","VarRename","newName","oldName","VAR_RENAME","renameVariableById"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Classes for all types of variable events.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.Events.VarBase');\ngoog.provide('Blockly.Events.VarCreate');\ngoog.provide('Blockly.Events.VarDelete');\ngoog.provide('Blockly.Events.VarRename');\n\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.Abstract');\ngoog.require('Blockly.utils.object');\n\n\n/**\n * Abstract class for a variable event.\n * @param {Blockly.VariableModel} variable The variable this event corresponds\n *     to.\n * @extends {Blockly.Events.Abstract}\n * @constructor\n */\nBlockly.Events.VarBase = function(variable) {\n  Blockly.Events.VarBase.superClass_.constructor.call(this);\n\n  /**\n   * The variable id for the variable this event pertains to.\n   * @type {string}\n   */\n  this.varId = variable.getId();\n  this.workspaceId = variable.workspace.id;\n};\nBlockly.utils.object.inherits(Blockly.Events.VarBase, Blockly.Events.Abstract);\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.VarBase.prototype.toJson = function() {\n  var json = Blockly.Events.VarBase.superClass_.toJson.call(this);\n  json['varId'] = this.varId;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.VarBase.prototype.fromJson = function(json) {\n  Blockly.Events.VarBase.superClass_.toJson.call(this);\n  this.varId = json['varId'];\n};\n\n/**\n * Class for a variable creation event.\n * @param {Blockly.VariableModel} variable The created variable.\n *     Null for a blank event.\n * @extends {Blockly.Events.VarBase}\n * @constructor\n */\nBlockly.Events.VarCreate = function(variable) {\n  if (!variable) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  Blockly.Events.VarCreate.superClass_.constructor.call(this, variable);\n  this.varType = variable.type;\n  this.varName = variable.name;\n};\nBlockly.utils.object.inherits(Blockly.Events.VarCreate, Blockly.Events.VarBase);\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.VarCreate.prototype.type = Blockly.Events.VAR_CREATE;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.VarCreate.prototype.toJson = function() {\n  var json = Blockly.Events.VarCreate.superClass_.toJson.call(this);\n  json['varType'] = this.varType;\n  json['varName'] = this.varName;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.VarCreate.prototype.fromJson = function(json) {\n  Blockly.Events.VarCreate.superClass_.fromJson.call(this, json);\n  this.varType = json['varType'];\n  this.varName = json['varName'];\n};\n\n/**\n * Run a variable creation event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.VarCreate.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  if (forward) {\n    workspace.createVariable(this.varName, this.varType, this.varId);\n  } else {\n    workspace.deleteVariableById(this.varId);\n  }\n};\n\n/**\n * Class for a variable deletion event.\n * @param {Blockly.VariableModel} variable The deleted variable.\n *     Null for a blank event.\n * @extends {Blockly.Events.VarBase}\n * @constructor\n */\nBlockly.Events.VarDelete = function(variable) {\n  if (!variable) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  Blockly.Events.VarDelete.superClass_.constructor.call(this, variable);\n  this.varType = variable.type;\n  this.varName = variable.name;\n};\nBlockly.utils.object.inherits(Blockly.Events.VarDelete, Blockly.Events.VarBase);\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.VarDelete.prototype.type = Blockly.Events.VAR_DELETE;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.VarDelete.prototype.toJson = function() {\n  var json = Blockly.Events.VarDelete.superClass_.toJson.call(this);\n  json['varType'] = this.varType;\n  json['varName'] = this.varName;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.VarDelete.prototype.fromJson = function(json) {\n  Blockly.Events.VarDelete.superClass_.fromJson.call(this, json);\n  this.varType = json['varType'];\n  this.varName = json['varName'];\n};\n\n/**\n * Run a variable deletion event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.VarDelete.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  if (forward) {\n    workspace.deleteVariableById(this.varId);\n  } else {\n    workspace.createVariable(this.varName, this.varType, this.varId);\n  }\n};\n\n/**\n * Class for a variable rename event.\n * @param {Blockly.VariableModel} variable The renamed variable.\n *     Null for a blank event.\n * @param {string} newName The new name the variable will be changed to.\n * @extends {Blockly.Events.VarBase}\n * @constructor\n */\nBlockly.Events.VarRename = function(variable, newName) {\n  if (!variable) {\n    return;  // Blank event to be populated by fromJson.\n  }\n  Blockly.Events.VarRename.superClass_.constructor.call(this, variable);\n  this.oldName = variable.name;\n  this.newName = newName;\n};\nBlockly.utils.object.inherits(Blockly.Events.VarRename, Blockly.Events.VarBase);\n\n/**\n * Type of this event.\n * @type {string}\n */\nBlockly.Events.VarRename.prototype.type = Blockly.Events.VAR_RENAME;\n\n/**\n * Encode the event as JSON.\n * @return {!Object} JSON representation.\n */\nBlockly.Events.VarRename.prototype.toJson = function() {\n  var json = Blockly.Events.VarRename.superClass_.toJson.call(this);\n  json['oldName'] = this.oldName;\n  json['newName'] = this.newName;\n  return json;\n};\n\n/**\n * Decode the JSON event.\n * @param {!Object} json JSON representation.\n */\nBlockly.Events.VarRename.prototype.fromJson = function(json) {\n  Blockly.Events.VarRename.superClass_.fromJson.call(this, json);\n  this.oldName = json['oldName'];\n  this.newName = json['newName'];\n};\n\n/**\n * Run a variable rename event.\n * @param {boolean} forward True if run forward, false if run backward (undo).\n */\nBlockly.Events.VarRename.prototype.run = function(forward) {\n  var workspace = this.getEventWorkspace_();\n  if (forward) {\n    workspace.renameVariableById(this.varId, this.newName);\n  } else {\n    workspace.renameVariableById(this.varId, this.oldName);\n  }\n};\n"],"file":"variable_events.min.js"}