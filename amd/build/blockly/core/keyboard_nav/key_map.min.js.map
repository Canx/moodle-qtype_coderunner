{"version":3,"sources":["../../../../src/blockly/core/keyboard_nav/key_map.js"],"names":["goog","provide","require","Blockly","user","keyMap","map_","modifierKeys","SHIFT","CONTROL","ALT","META","setActionForKey","keyCode","action","oldKey","getKeyByAction","setKeyMap","getKeyMap","map","utils","object","mixin","getActionByKeyCode","keys","Object","i","key","name","serializeKeyEvent","e","modifiers","values","keyName","getModifierState","checkModifiers_","validModifiers","modifier","indexOf","Error","createSerializedKey","validModifier","createDefaultKeyMap","controlK","KeyCodes","K","shiftW","W","shiftA","A","shiftS","S","shiftD","D","navigation","ACTION_PREVIOUS","ACTION_OUT","ACTION_NEXT","ACTION_IN","I","ACTION_INSERT","ENTER","ACTION_MARK","X","ACTION_DISCONNECT","T","ACTION_TOOLBOX","E","ACTION_EXIT","ESC","ACTION_TOGGLE_KEYBOARD_NAV","ACTION_MOVE_WS_CURSOR_UP","ACTION_MOVE_WS_CURSOR_LEFT","ACTION_MOVE_WS_CURSOR_DOWN","ACTION_MOVE_WS_CURSOR_RIGHT"],"mappings":"AAWA,aAEAA,IAAI,CAACC,OAAL,CAAa,qBAAb,EAIAD,IAAI,CAACE,OAAL,CAAa,wBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,sBAAb,EAQAC,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApB,CAA2B,EAA3B,CAMAH,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAmC,CACjCC,KAAK,CAAE,OAD0B,CAEjCC,OAAO,CAAE,SAFwB,CAGjCC,GAAG,CAAE,KAH4B,CAIjCC,IAAI,CAAE,MAJ2B,CAAnC,CAaAR,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBO,eAApB,CAAsC,SAASC,CAAT,CAAkBC,CAAlB,CAA0B,CAC9D,GAAIC,CAAAA,CAAM,CAAGZ,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBW,cAApB,CAAmCF,CAAnC,CAAb,CAEA,GAAIC,CAAJ,CAAY,CACV,MAAOZ,CAAAA,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApB,CAAyBS,CAAzB,CACR,CACDZ,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApB,CAAyBO,CAAzB,EAAoCC,CACrC,CAPD,CAcAX,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBY,SAApB,CAAgC,SAASZ,CAAT,CAAiB,CAC/CF,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApB,CAA2BD,CAC5B,CAFD,CASAF,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBa,SAApB,CAAgC,UAAW,CACzC,GAAIC,CAAAA,CAAG,CAAG,EAAV,CACAhB,OAAO,CAACiB,KAAR,CAAcC,MAAd,CAAqBC,KAArB,CAA2BH,CAA3B,CAAgChB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApD,EACA,MAAOa,CAAAA,CACR,CAJD,CAYAhB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBkB,kBAApB,CAAyC,SAASV,CAAT,CAAkB,CACzD,MAAOV,CAAAA,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApB,CAAyBO,CAAzB,CACR,CAFD,CAWAV,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBW,cAApB,CAAqC,SAASF,CAAT,CAAiB,CAEpD,OADIU,CAAAA,CAAI,CAAGC,MAAM,CAACD,IAAP,CAAYrB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAAhC,CACX,CAASoB,CAAC,CAAG,CAAb,CAAgBC,CAAhB,CAAsBA,CAAG,CAAGH,CAAI,CAACE,CAAD,CAAhC,CAAsCA,CAAC,EAAvC,CAA2C,CACzC,GAAIvB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBC,IAApB,CAAyBqB,CAAzB,EAA8BC,IAA9B,GAAuCd,CAAM,CAACc,IAAlD,CAAwD,CACtD,MAAOD,CAAAA,CACR,CACF,CACD,MAAO,KACR,CARD,CAgBAxB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBwB,iBAApB,CAAwC,SAASC,CAAT,CAAY,CAGlD,OAFIC,CAAAA,CAAS,CAAG5B,OAAO,CAACiB,KAAR,CAAcC,MAAd,CAAqBW,MAArB,CAA4B7B,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAAhD,CAEhB,CADIoB,CAAG,CAAG,EACV,CAASD,CAAC,CAAG,CAAb,CAAgBO,CAAhB,CAA0BA,CAAO,CAAGF,CAAS,CAACL,CAAD,CAA7C,CAAmDA,CAAC,EAApD,CAAwD,CACtD,GAAII,CAAC,CAACI,gBAAF,CAAmBD,CAAnB,CAAJ,CAAiC,CAC/BN,CAAG,EAAIM,CACR,CACF,CACDN,CAAG,EAAIG,CAAC,CAACjB,OAAT,CACA,MAAOc,CAAAA,CACR,CAVD,CAmBAxB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoB8B,eAApB,CAAsC,SAASJ,CAAT,CAAoBK,CAApB,CAAoC,CACxE,IAAK,GAAIV,CAAAA,CAAC,CAAG,CAAR,CAAWW,CAAhB,CAA2BA,CAAQ,CAAGN,CAAS,CAACL,CAAD,CAA/C,CAAqDA,CAAC,EAAtD,CAA0D,CACxD,GAAuC,CAAnC,CAAAU,CAAc,CAACE,OAAf,CAAuBD,CAAvB,CAAJ,CAA0C,CACxC,KAAME,CAAAA,KAAK,CAACF,CAAQ,CAAG,+BAAZ,CACZ,CACF,CACF,CAND,CAeAlC,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBmC,mBAApB,CAA0C,SAAS3B,CAAT,CAAkBkB,CAAlB,CAA6B,IACjEJ,CAAAA,CAAG,CAAG,EAD2D,CAEjES,CAAc,CAAGjC,OAAO,CAACiB,KAAR,CAAcC,MAAd,CAAqBW,MAArB,CAA4B7B,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAAhD,CAFgD,CAGrEJ,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoB8B,eAApB,CAAoCJ,CAApC,CAA+CK,CAA/C,EACA,IAAK,GAAIV,CAAAA,CAAC,CAAG,CAAR,CAAWe,CAAhB,CAAgCA,CAAa,CAAGL,CAAc,CAACV,CAAD,CAA9D,CAAoEA,CAAC,EAArE,CAAyE,CACvE,GAAuC,CAAC,CAApC,CAAAK,CAAS,CAACO,OAAV,CAAkBG,CAAlB,CAAJ,CAA2C,CACzCd,CAAG,EAAIc,CACR,CACF,CACDd,CAAG,EAAId,CAAP,CACA,MAAOc,CAAAA,CACR,CAXD,CAkBAxB,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBqC,mBAApB,CAA0C,UAAW,IAC/CvB,CAAAA,CAAG,CAAG,EADyC,CAE/CwB,CAAQ,CAAGxC,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBmC,mBAApB,CACXrC,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBC,CADZ,CACe,CAAC1C,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAiCE,OAAlC,CACxBN,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAiCC,KADT,CADf,CAFoC,CAK/CsC,CAAM,CAAG3C,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBmC,mBAApB,CACTrC,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBG,CADd,CACiB,CAAC5C,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAiCC,KAAlC,CADjB,CALsC,CAO/CwC,CAAM,CAAG7C,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBmC,mBAApB,CACTrC,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBK,CADd,CACiB,CAAC9C,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAiCC,KAAlC,CADjB,CAPsC,CAS/C0C,CAAM,CAAG/C,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBmC,mBAApB,CACTrC,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBO,CADd,CACiB,CAAChD,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAiCC,KAAlC,CADjB,CATsC,CAW/C4C,CAAM,CAAGjD,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBmC,mBAApB,CACTrC,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBS,CADd,CACiB,CAAClD,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBE,YAApB,CAAiCC,KAAlC,CADjB,CAXsC,CAcnDW,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBG,CAAxB,CAAH,CAAgC5C,OAAO,CAACmD,UAAR,CAAmBC,eAAnD,CACApC,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBK,CAAxB,CAAH,CAAgC9C,OAAO,CAACmD,UAAR,CAAmBE,UAAnD,CACArC,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBO,CAAxB,CAAH,CAAgChD,OAAO,CAACmD,UAAR,CAAmBG,WAAnD,CACAtC,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBS,CAAxB,CAAH,CAAgClD,OAAO,CAACmD,UAAR,CAAmBI,SAAnD,CACAvC,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBe,CAAxB,CAAH,CAAgCxD,OAAO,CAACmD,UAAR,CAAmBM,aAAnD,CACAzC,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBiB,KAAxB,CAAH,CAAoC1D,OAAO,CAACmD,UAAR,CAAmBQ,WAAvD,CACA3C,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBmB,CAAxB,CAAH,CAAgC5D,OAAO,CAACmD,UAAR,CAAmBU,iBAAnD,CACA7C,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBqB,CAAxB,CAAH,CAAgC9D,OAAO,CAACmD,UAAR,CAAmBY,cAAnD,CACA/C,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuBuB,CAAxB,CAAH,CAAgChE,OAAO,CAACmD,UAAR,CAAmBc,WAAnD,CACAjD,CAAG,CAAChB,OAAO,CAACiB,KAAR,CAAcwB,QAAd,CAAuByB,GAAxB,CAAH,CAAkClE,OAAO,CAACmD,UAAR,CAAmBc,WAArD,CACAjD,CAAG,CAACwB,CAAD,CAAH,CAAgBxC,OAAO,CAACmD,UAAR,CAAmBgB,0BAAnC,CACAnD,CAAG,CAAC2B,CAAD,CAAH,CAAc3C,OAAO,CAACmD,UAAR,CAAmBiB,wBAAjC,CACApD,CAAG,CAAC6B,CAAD,CAAH,CAAc7C,OAAO,CAACmD,UAAR,CAAmBkB,0BAAjC,CACArD,CAAG,CAAC+B,CAAD,CAAH,CAAc/C,OAAO,CAACmD,UAAR,CAAmBmB,0BAAjC,CACAtD,CAAG,CAACiC,CAAD,CAAH,CAAcjD,OAAO,CAACmD,UAAR,CAAmBoB,2BAAjC,CACA,MAAOvD,CAAAA,CACR,CA9BD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The namespace used to keep track of keyboard actions and the\n * key codes used to execute those actions.\n * This is used primarily for keyboard navigation.\n */\n'use strict';\n\ngoog.provide('Blockly.user.keyMap');\n\n// TODO: Fix circular dependency.\n// goog.require('Blockly.navigation');\ngoog.require('Blockly.utils.KeyCodes');\ngoog.require('Blockly.utils.object');\n\n\n/**\n * Holds the serialized key to key action mapping.\n * @type {!Object<string, Blockly.Action>}\n * @private\n */\nBlockly.user.keyMap.map_ = {};\n\n/**\n * Object holding valid modifiers.\n * @enum {string}\n */\nBlockly.user.keyMap.modifierKeys = {\n  SHIFT: 'Shift',\n  CONTROL: 'Control',\n  ALT: 'Alt',\n  META: 'Meta'\n};\n\n/**\n * Update the key map to contain the new action.\n * @param {string} keyCode The key code serialized by the serializeKeyEvent.\n * @param {!Blockly.Action} action The action to be executed when the keys\n *     corresponding to the serialized key code is pressed.\n */\nBlockly.user.keyMap.setActionForKey = function(keyCode, action) {\n  var oldKey = Blockly.user.keyMap.getKeyByAction(action);\n  // If the action already exists in the key map remove it and add the new mapping.\n  if (oldKey) {\n    delete Blockly.user.keyMap.map_[oldKey];\n  }\n  Blockly.user.keyMap.map_[keyCode] = action;\n};\n\n/**\n * Creates a new key map.\n * @param {!Object<string, Blockly.Action>} keyMap The object holding the key\n *     to action mapping.\n */\nBlockly.user.keyMap.setKeyMap = function(keyMap) {\n  Blockly.user.keyMap.map_ = keyMap;\n};\n\n/**\n * Gets the current key map.\n * @return {Object<string,Blockly.Action>} The object holding the key to\n *     action mapping.\n */\nBlockly.user.keyMap.getKeyMap = function() {\n  var map = {};\n  Blockly.utils.object.mixin(map, Blockly.user.keyMap.map_);\n  return map;\n};\n\n/**\n * Get the action by the serialized key code.\n * @param {string} keyCode The serialized key code.\n * @return {Blockly.Action|undefined} The action holding the function to\n *     call when the given keyCode is used or undefined if no action exists.\n */\nBlockly.user.keyMap.getActionByKeyCode = function(keyCode) {\n  return Blockly.user.keyMap.map_[keyCode];\n};\n\n/**\n * Get the serialized key that corresponds to the action.\n * @param {!Blockly.Action} action The action for which we want to get\n *     the key.\n * @return {?string} The serialized key or null if the action does not have\n *     a key mapping.\n */\nBlockly.user.keyMap.getKeyByAction = function(action) {\n  var keys = Object.keys(Blockly.user.keyMap.map_);\n  for (var i = 0, key; (key = keys[i]); i++) {\n    if (Blockly.user.keyMap.map_[key].name === action.name) {\n      return key;\n    }\n  }\n  return null;\n};\n\n/**\n * Serialize the key event.\n * @param {!KeyboardEvent} e A key up event holding the key code.\n * @return {string} A string containing the serialized key event.\n * @package\n */\nBlockly.user.keyMap.serializeKeyEvent = function(e) {\n  var modifiers = Blockly.utils.object.values(Blockly.user.keyMap.modifierKeys);\n  var key = '';\n  for (var i = 0, keyName; (keyName = modifiers[i]); i++) {\n    if (e.getModifierState(keyName)) {\n      key += keyName;\n    }\n  }\n  key += e.keyCode;\n  return key;\n};\n\n/**\n * Checks whether any of the given modifiers are not valid.\n * @param {!Array.<string>} modifiers List of modifiers to be used with the key.\n * @param {!Array.<string>} validModifiers List of modifiers we support.\n * @throws {Error} if the modifier is not in the valid modifiers list.\n * @private\n */\nBlockly.user.keyMap.checkModifiers_ = function(modifiers, validModifiers) {\n  for (var i = 0, modifier; (modifier = modifiers[i]); i++) {\n    if (validModifiers.indexOf(modifier) < 0) {\n      throw Error(modifier + ' is not a valid modifier key.');\n    }\n  }\n};\n\n/**\n * Create the serialized key code that will be used in the key map.\n * @param {number} keyCode Number code representing the key.\n * @param {!Array.<string>} modifiers List of modifiers to be used with the key.\n *     All valid modifiers can be found in the Blockly.user.keyMap.modifierKeys.\n * @return {string} The serialized key code for the given modifiers and key.\n */\nBlockly.user.keyMap.createSerializedKey = function(keyCode, modifiers) {\n  var key = '';\n  var validModifiers = Blockly.utils.object.values(Blockly.user.keyMap.modifierKeys);\n  Blockly.user.keyMap.checkModifiers_(modifiers, validModifiers);\n  for (var i = 0, validModifier; (validModifier = validModifiers[i]); i++) {\n    if (modifiers.indexOf(validModifier) > -1) {\n      key += validModifier;\n    }\n  }\n  key += keyCode;\n  return key;\n};\n\n/**\n * Creates the default key map.\n * @return {!Object<string,Blockly.Action>} An object holding the default key\n *     to action mapping.\n */\nBlockly.user.keyMap.createDefaultKeyMap = function() {\n  var map = {};\n  var controlK = Blockly.user.keyMap.createSerializedKey(\n      Blockly.utils.KeyCodes.K, [Blockly.user.keyMap.modifierKeys.CONTROL,\n        Blockly.user.keyMap.modifierKeys.SHIFT]);\n  var shiftW = Blockly.user.keyMap.createSerializedKey(\n      Blockly.utils.KeyCodes.W, [Blockly.user.keyMap.modifierKeys.SHIFT]);\n  var shiftA = Blockly.user.keyMap.createSerializedKey(\n      Blockly.utils.KeyCodes.A, [Blockly.user.keyMap.modifierKeys.SHIFT]);\n  var shiftS = Blockly.user.keyMap.createSerializedKey(\n      Blockly.utils.KeyCodes.S, [Blockly.user.keyMap.modifierKeys.SHIFT]);\n  var shiftD = Blockly.user.keyMap.createSerializedKey(\n      Blockly.utils.KeyCodes.D, [Blockly.user.keyMap.modifierKeys.SHIFT]);\n\n  map[Blockly.utils.KeyCodes.W] = Blockly.navigation.ACTION_PREVIOUS;\n  map[Blockly.utils.KeyCodes.A] = Blockly.navigation.ACTION_OUT;\n  map[Blockly.utils.KeyCodes.S] = Blockly.navigation.ACTION_NEXT;\n  map[Blockly.utils.KeyCodes.D] = Blockly.navigation.ACTION_IN;\n  map[Blockly.utils.KeyCodes.I] = Blockly.navigation.ACTION_INSERT;\n  map[Blockly.utils.KeyCodes.ENTER] = Blockly.navigation.ACTION_MARK;\n  map[Blockly.utils.KeyCodes.X] = Blockly.navigation.ACTION_DISCONNECT;\n  map[Blockly.utils.KeyCodes.T] = Blockly.navigation.ACTION_TOOLBOX;\n  map[Blockly.utils.KeyCodes.E] = Blockly.navigation.ACTION_EXIT;\n  map[Blockly.utils.KeyCodes.ESC] = Blockly.navigation.ACTION_EXIT;\n  map[controlK] = Blockly.navigation.ACTION_TOGGLE_KEYBOARD_NAV;\n  map[shiftW] = Blockly.navigation.ACTION_MOVE_WS_CURSOR_UP;\n  map[shiftA] = Blockly.navigation.ACTION_MOVE_WS_CURSOR_LEFT;\n  map[shiftS] = Blockly.navigation.ACTION_MOVE_WS_CURSOR_DOWN;\n  map[shiftD] = Blockly.navigation.ACTION_MOVE_WS_CURSOR_RIGHT;\n  return map;\n};\n"],"file":"key_map.min.js"}