{"version":3,"sources":["../../../../src/blockly/core/keyboard_nav/tab_navigate_cursor.js"],"names":["goog","provide","require","Blockly","TabNavigateCursor","superClass_","constructor","call","utils","object","inherits","BasicCursor","prototype","validNode_","node","isValid","type","getType","location","getLocation","ASTNode","types","FIELD","isTabNavigable","isClickable"],"mappings":"AAWA,aAEAA,IAAI,CAACC,OAAL,CAAa,2BAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,iBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,qBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,sBAAb,EAQAC,OAAO,CAACC,iBAAR,CAA4B,UAAW,CACrCD,OAAO,CAACC,iBAAR,CAA0BC,WAA1B,CAAsCC,WAAtC,CAAkDC,IAAlD,CAAuD,IAAvD,CACD,CAFD,CAGAJ,OAAO,CAACK,KAAR,CAAcC,MAAd,CAAqBC,QAArB,CAA8BP,OAAO,CAACC,iBAAtC,CAAyDD,OAAO,CAACQ,WAAjE,EAQAR,OAAO,CAACC,iBAAR,CAA0BQ,SAA1B,CAAoCC,UAApC,CAAiD,SAASC,CAAT,CAAe,IAC1DC,CAAAA,CAAO,GADmD,CAE1DC,CAAI,CAAGF,CAAI,EAAIA,CAAI,CAACG,OAAL,EAF2C,CAG9D,GAAIH,CAAJ,CAAU,CACR,GAAII,CAAAA,CAAQ,CAAiCJ,CAAI,CAACK,WAAL,EAA7C,CACA,GAAIH,CAAI,EAAIb,OAAO,CAACiB,OAAR,CAAgBC,KAAhB,CAAsBC,KAA9B,EACAJ,CADA,EACYA,CAAQ,CAACK,cAAT,EADZ,EACyCL,CAAQ,CAACM,WAAT,EAD7C,CACqE,CACnET,CAAO,GACR,CACF,CACD,MAAOA,CAAAA,CACR,CAXD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The class representing a cursor that is used to navigate\n * between tab navigable fields.\n * @author samelh@google.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.TabNavigateCursor');\n\ngoog.require('Blockly.ASTNode');\ngoog.require('Blockly.BasicCursor');\ngoog.require('Blockly.utils.object');\n\n\n/**\n * A cursor for navigating between tab navigable fields.\n * @constructor\n * @extends {Blockly.BasicCursor}\n */\nBlockly.TabNavigateCursor = function() {\n  Blockly.TabNavigateCursor.superClass_.constructor.call(this);\n};\nBlockly.utils.object.inherits(Blockly.TabNavigateCursor, Blockly.BasicCursor);\n\n/**\n * Skip all nodes except for tab navigable fields.\n * @param {Blockly.ASTNode} node The AST node to check whether it is valid.\n * @return {boolean} True if the node should be visited, false otherwise.\n * @override\n */\nBlockly.TabNavigateCursor.prototype.validNode_ = function(node) {\n  var isValid = false;\n  var type = node && node.getType();\n  if (node) {\n    var location = /** @type {Blockly.Field} */ (node.getLocation());\n    if (type == Blockly.ASTNode.types.FIELD &&\n        location && location.isTabNavigable() && location.isClickable()) {\n      isValid = true;\n    }\n  }\n  return isValid;\n};\n"],"file":"tab_navigate_cursor.min.js"}