{"version":3,"sources":["../../../../src/blockly/core/keyboard_nav/navigation.js"],"names":["goog","provide","require","Blockly","navigation","loggingCallback","STATE_FLYOUT","STATE_WS","STATE_TOOLBOX","WS_MOVE_DISTANCE","currentState_","actionNames","PREVIOUS","NEXT","IN","OUT","INSERT","MARK","DISCONNECT","TOOLBOX","EXIT","TOGGLE_KEYBOARD_NAV","MOVE_WS_CURSOR_UP","MOVE_WS_CURSOR_DOWN","MOVE_WS_CURSOR_LEFT","MOVE_WS_CURSOR_RIGHT","MARKER_NAME","getMarker","getNavigationWorkspace","getMainWorkspace","focusToolbox_","toolbox","getToolbox","resetFlyout_","getCurNode","markAtCursor_","selectFirstCategory","focusFlyout_","topBlock","workspace","flyout","getFlyout","getWorkspace","topBlocks","getTopBlocks","length","astNode","ASTNode","createStackNode","getFlyoutCursor_","setCurNode","focusWorkspace_","hideChaff","cursor","getCursor","reset","createTopNode","wsCoord","utils","Coordinate","wsNode","createWorkspaceNode","rendered","insertFromFlyout","isVisible","warn_","curBlock","getLocation","isEnabled","newBlock","createBlock","render","setConnectionTracking","createBlockNode","modify_","removeMark_","shouldHide","hide","modifyWarn_","markerNode","cursorNode","markerType","getType","cursorType","types","FIELD","BLOCK","STACK","WORKSPACE","moveBlockToWorkspace_","block","isShadow","getParent","unplug","moveTo","getWsCoordinate","cursorLoc","markerLoc","isConnection","connect_","insertBlock","getSourceBlock","disconnectChild_","movingConnection","destConnection","movingBlock","destBlock","getRootBlock","getDescendants","indexOf","getInferiorConnection_","disconnect","moveAndConnect_","canConnectWithReason","Connection","CAN_CONNECT","isSuperior","rootBlock","positionNearConnection","connect","connection","previousConnection","outputConnection","getSuperiorConnection_","targetConnection","movingInferior","destSuperior","movingSuperior","destInferior","checkConnection","e","type","PREVIOUS_STATEMENT","nextConnection","NEXT_STATEMENT","INPUT_VALUE","OUTPUT_VALUE","i","inputConnection","inputList","disconnectBlocks_","curNode","log_","curConnection","isConnected","superiorConnection","inferiorConnection","bumpAwayFrom","bringToFront","connectionNode","createConnectionNode","marker","setState","newState","moveCursorOnBlockDelete","deletedBlock","topConnection","getRelativeToSurfaceXY","getChildren","moveCursorOnBlockMutation","mutatedBlock","enableKeyboardAccessibility","keyboardAccessibilityMode","disableKeyboardAccessibility","msg","console","log","warn","error_","error","onKeyPress","key","user","keyMap","serializeKeyEvent","action","getActionByKeyCode","onBlocklyAction","readOnly","options","actionHandled","handleActions_","READONLY_ACTION_LIST","name","toolboxOnAction_","workspaceOnAction_","flyoutOnAction_","handled","moveWSCursor_","xDirection","yDirection","newX","x","newY","y","handleEnterForWS_","nodeType","showEditor","ACTION_PREVIOUS","Action","ACTION_OUT","ACTION_NEXT","ACTION_IN","ACTION_INSERT","ACTION_MARK","ACTION_DISCONNECT","ACTION_TOOLBOX","ACTION_EXIT","ACTION_TOGGLE_KEYBOARD_NAV","ACTION_MOVE_WS_CURSOR_LEFT","ACTION_MOVE_WS_CURSOR_RIGHT","ACTION_MOVE_WS_CURSOR_UP","ACTION_MOVE_WS_CURSOR_DOWN"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The class in charge of handling actions related to keyboard\n *     navigation.\n * @author aschmiedt@google.com (Abby Schmiedt)\n */\n'use strict';\n\ngoog.provide('Blockly.navigation');\n\ngoog.require('Blockly.Action');\ngoog.require('Blockly.ASTNode');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.user.keyMap');\n\n/**\n * A function to call to give feedback to the user about logs, warnings, and\n * errors.  You can override this to customize feedback (e.g. warning sounds,\n * reading out the warning text, etc).\n * Null by default.\n * The first argument is one of 'log', 'warn', and 'error'.\n * The second argument is the message.\n * @type {?function(string, string)}\n * @public\n */\nBlockly.navigation.loggingCallback = null;\n\n/**\n * State indicating focus is currently on the flyout.\n * @type {number}\n * @const\n */\nBlockly.navigation.STATE_FLYOUT = 1;\n\n/**\n * State indicating focus is currently on the workspace.\n * @type {number}\n * @const\n */\nBlockly.navigation.STATE_WS = 2;\n\n/**\n * State indicating focus is currently on the toolbox.\n * @type {number}\n * @const\n */\nBlockly.navigation.STATE_TOOLBOX = 3;\n\n/**\n * The distance to move the cursor on the workspace.\n * @type {number}\n * @const\n */\nBlockly.navigation.WS_MOVE_DISTANCE = 40;\n\n/**\n * The current state the user is in.\n * Initialized to workspace state since a user enters navigation mode by shift\n * clicking on a block or workspace.\n * @type {number}\n * @private\n */\nBlockly.navigation.currentState_ = Blockly.navigation.STATE_WS;\n\n/**\n * Object holding default action names.\n * @enum {string}\n */\nBlockly.navigation.actionNames = {\n  PREVIOUS: 'previous',\n  NEXT: 'next',\n  IN: 'in',\n  OUT: 'out',\n  INSERT: 'insert',\n  MARK: 'mark',\n  DISCONNECT: 'disconnect',\n  TOOLBOX: 'toolbox',\n  EXIT: 'exit',\n  TOGGLE_KEYBOARD_NAV: 'toggle_keyboard_nav',\n  MOVE_WS_CURSOR_UP: 'move workspace cursor up',\n  MOVE_WS_CURSOR_DOWN: 'move workspace cursor down',\n  MOVE_WS_CURSOR_LEFT: 'move workspace cursor left',\n  MOVE_WS_CURSOR_RIGHT: 'move workspace cursor right'\n};\n\n/**\n * The name of the marker reserved for internal use.\n * @type {string}\n * @const\n */\nBlockly.navigation.MARKER_NAME = 'local_marker_1';\n\n/** ****** */\n/** Focus  */\n/** ****** */\n\n/**\n * Get the local marker.\n * @return {Blockly.Marker} The local marker for the main workspace.\n */\nBlockly.navigation.getMarker = function() {\n  return Blockly.navigation.getNavigationWorkspace()\n      .getMarker(Blockly.navigation.MARKER_NAME);\n};\n\n/**\n * Get the workspace that is being navigated.\n * @return {!Blockly.WorkspaceSvg} The workspace being navigated.\n */\nBlockly.navigation.getNavigationWorkspace = function() {\n  return /** @type {!Blockly.WorkspaceSvg} */ (Blockly.getMainWorkspace());\n};\n\n/**\n * If a toolbox exists, set the navigation state to toolbox and select the first\n * category in the toolbox.\n * @private\n */\nBlockly.navigation.focusToolbox_ = function() {\n  var toolbox = Blockly.navigation.getNavigationWorkspace().getToolbox();\n  if (toolbox) {\n    Blockly.navigation.currentState_ = Blockly.navigation.STATE_TOOLBOX;\n    Blockly.navigation.resetFlyout_(false /* shouldHide */);\n\n    if (!Blockly.navigation.getMarker().getCurNode()) {\n      Blockly.navigation.markAtCursor_();\n    }\n    toolbox.selectFirstCategory();\n  }\n};\n\n/**\n * Change focus to the flyout.\n * @private\n */\nBlockly.navigation.focusFlyout_ = function() {\n  var topBlock = null;\n  Blockly.navigation.currentState_ = Blockly.navigation.STATE_FLYOUT;\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var toolbox = workspace.getToolbox();\n  var flyout = toolbox ? toolbox.getFlyout() : workspace.getFlyout();\n\n  if (!Blockly.navigation.getMarker().getCurNode()) {\n    Blockly.navigation.markAtCursor_();\n  }\n\n  if (flyout && flyout.getWorkspace()) {\n    var topBlocks = flyout.getWorkspace().getTopBlocks(true);\n    if (topBlocks.length > 0) {\n      topBlock = topBlocks[0];\n      var astNode = Blockly.ASTNode.createStackNode(topBlock);\n      Blockly.navigation.getFlyoutCursor_().setCurNode(astNode);\n    }\n  }\n};\n\n/**\n * Finds where the cursor should go on the workspace. This is either the top\n * block or a set position on the workspace.\n * @private\n */\nBlockly.navigation.focusWorkspace_ = function() {\n  Blockly.hideChaff();\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var cursor = workspace.getCursor();\n  var reset = !!workspace.getToolbox();\n  var topBlocks = workspace.getTopBlocks(true);\n\n  Blockly.navigation.resetFlyout_(reset);\n  Blockly.navigation.currentState_ = Blockly.navigation.STATE_WS;\n  if (topBlocks.length > 0) {\n    cursor.setCurNode(Blockly.ASTNode.createTopNode(topBlocks[0]));\n  } else {\n    // TODO: Find the center of the visible workspace.\n    var wsCoord = new Blockly.utils.Coordinate(100, 100);\n    var wsNode = Blockly.ASTNode.createWorkspaceNode(workspace, wsCoord);\n    cursor.setCurNode(wsNode);\n  }\n};\n\n/** ****************** */\n/** Flyout Navigation  */\n/** ****************** */\n\n/**\n * Get the cursor from the flyouts workspace.\n * @return {Blockly.FlyoutCursor} The flyouts cursor or null if no flyout exists.\n * @private\n */\nBlockly.navigation.getFlyoutCursor_ = function() {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var cursor = null;\n  if (workspace.rendered) {\n    var toolbox = workspace.getToolbox();\n    var flyout = toolbox ? toolbox.getFlyout() : workspace.getFlyout();\n    cursor = flyout ? flyout.getWorkspace().getCursor() : null;\n  }\n  return /** @type {Blockly.FlyoutCursor} */ (cursor);\n};\n\n/**\n * If there is a marked connection try connecting the block from the flyout to\n * that connection. If no connection has been marked then inserting will place\n * it on the workspace.\n */\nBlockly.navigation.insertFromFlyout = function() {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var flyout = workspace.getFlyout();\n  if (!flyout || !flyout.isVisible()) {\n    Blockly.navigation.warn_('Trying to insert from the flyout when the flyout does not ' +\n      ' exist or is not visible');\n    return;\n  }\n\n  var curBlock = /** @type {!Blockly.BlockSvg} */ (\n    Blockly.navigation.getFlyoutCursor_().getCurNode().getLocation());\n  if (!curBlock.isEnabled()) {\n    Blockly.navigation.warn_('Can\\'t insert a disabled block.');\n    return;\n  }\n\n  var newBlock = flyout.createBlock(curBlock);\n  // Render to get the sizing right.\n  newBlock.render();\n  // Connections are not tracked when the block is first created.  Normally\n  // there's enough time for them to become tracked in the user's mouse\n  // movements, but not here.\n  newBlock.setConnectionTracking(true);\n  workspace.getCursor().setCurNode(\n      Blockly.ASTNode.createBlockNode(newBlock));\n  if (!Blockly.navigation.modify_()) {\n    Blockly.navigation.warn_('Something went wrong while inserting a block from the flyout.');\n  }\n\n  Blockly.navigation.focusWorkspace_();\n  workspace.getCursor().setCurNode(Blockly.ASTNode.createTopNode(newBlock));\n  Blockly.navigation.removeMark_();\n};\n\n/**\n * Reset flyout information, and optionally close the flyout.\n * @param {boolean} shouldHide True if the flyout should be hidden.\n * @private\n */\nBlockly.navigation.resetFlyout_ = function(shouldHide) {\n  if (Blockly.navigation.getFlyoutCursor_()) {\n    Blockly.navigation.getFlyoutCursor_().hide();\n    if (shouldHide) {\n      Blockly.navigation.getNavigationWorkspace().getFlyout().hide();\n    }\n  }\n};\n\n/** **************** */\n/** Modify Workspace */\n/** **************** */\n\n/**\n * Warns the user if the cursor or marker is on a type that can not be connected.\n * @return {boolean} True if the marker and cursor are valid types, false\n *     otherwise.\n * @private\n */\nBlockly.navigation.modifyWarn_ = function() {\n  var markerNode = Blockly.navigation.getMarker().getCurNode();\n  var cursorNode = Blockly.navigation.getNavigationWorkspace()\n      .getCursor().getCurNode();\n\n  if (!markerNode) {\n    Blockly.navigation.warn_('Cannot insert with no marked node.');\n    return false;\n  }\n\n  if (!cursorNode) {\n    Blockly.navigation.warn_('Cannot insert with no cursor node.');\n    return false;\n  }\n  var markerType = markerNode.getType();\n  var cursorType = cursorNode.getType();\n\n  // Check the marker for invalid types.\n  if (markerType == Blockly.ASTNode.types.FIELD) {\n    Blockly.navigation.warn_('Should not have been able to mark a field.');\n    return false;\n  } else if (markerType == Blockly.ASTNode.types.BLOCK) {\n    Blockly.navigation.warn_('Should not have been able to mark a block.');\n    return false;\n  } else if (markerType == Blockly.ASTNode.types.STACK) {\n    Blockly.navigation.warn_('Should not have been able to mark a stack.');\n    return false;\n  }\n\n  // Check the cursor for invalid types.\n  if (cursorType == Blockly.ASTNode.types.FIELD) {\n    Blockly.navigation.warn_('Cannot attach a field to anything else.');\n    return false;\n  } else if (cursorType == Blockly.ASTNode.types.WORKSPACE) {\n    Blockly.navigation.warn_('Cannot attach a workspace to anything else.');\n    return false;\n  }\n  return true;\n};\n\n/**\n * Disconnect the block from its parent and move to the position of the\n * workspace node.\n * @param {Blockly.BlockSvg} block The block to be moved to the workspace.\n * @param {!Blockly.ASTNode} wsNode The workspace node holding the position the\n *     block will be moved to.\n * @return {boolean} True if the block can be moved to the workspace,\n *     false otherwise.\n * @private\n */\nBlockly.navigation.moveBlockToWorkspace_ = function(block, wsNode) {\n  if (!block) {\n    return false;\n  }\n  if (block.isShadow()) {\n    Blockly.navigation.warn_('Cannot move a shadow block to the workspace.');\n    return false;\n  }\n  if (block.getParent()) {\n    block.unplug(false);\n  }\n  block.moveTo(wsNode.getWsCoordinate());\n  return true;\n};\n\n/**\n * Handle the modifier key (currently I for Insert).\n * Tries to connect the current marker and cursor location. Warns the user if\n * the two locations can not be connected.\n * @return {boolean} True if the key was handled; false if something went wrong.\n * @private\n */\nBlockly.navigation.modify_ = function() {\n  var markerNode = Blockly.navigation.getMarker().getCurNode();\n  var cursorNode = Blockly.navigation.getNavigationWorkspace()\n      .getCursor().getCurNode();\n  if (!Blockly.navigation.modifyWarn_()) {\n    return false;\n  }\n\n  var markerType = markerNode.getType();\n  var cursorType = cursorNode.getType();\n\n  var cursorLoc = cursorNode.getLocation();\n  var markerLoc = markerNode.getLocation();\n\n  if (markerNode.isConnection() && cursorNode.isConnection()) {\n    cursorLoc = /** @type {!Blockly.RenderedConnection} */ (cursorLoc);\n    markerLoc = /** @type {!Blockly.RenderedConnection} */ (markerLoc);\n    return Blockly.navigation.connect_(cursorLoc, markerLoc);\n  } else if (markerNode.isConnection() &&\n      (cursorType == Blockly.ASTNode.types.BLOCK ||\n      cursorType == Blockly.ASTNode.types.STACK)) {\n    cursorLoc = /** @type {!Blockly.BlockSvg} */ (cursorLoc);\n    markerLoc = /** @type {!Blockly.RenderedConnection} */ (markerLoc);\n    return Blockly.navigation.insertBlock(cursorLoc, markerLoc);\n  } else if (markerType == Blockly.ASTNode.types.WORKSPACE) {\n    var block = cursorNode ? cursorNode.getSourceBlock() : null;\n    return Blockly.navigation.moveBlockToWorkspace_(\n        /** @type {Blockly.BlockSvg} */ (block), markerNode);\n  }\n  Blockly.navigation.warn_('Unexpected state in Blockly.navigation.modify_.');\n  return false;\n};\n\n/**\n * If one of the connections source blocks is a child of the other, disconnect\n * the child.\n * @param {!Blockly.RenderedConnection} movingConnection The connection that is\n *     being moved.\n * @param {!Blockly.RenderedConnection} destConnection The connection to be\n *     moved to.\n * @private\n */\nBlockly.navigation.disconnectChild_ = function(movingConnection, destConnection) {\n  var movingBlock = movingConnection.getSourceBlock();\n  var destBlock = destConnection.getSourceBlock();\n\n  if (movingBlock.getRootBlock() == destBlock.getRootBlock()) {\n    if (movingBlock.getDescendants(false).indexOf(destBlock) > -1) {\n      Blockly.navigation.getInferiorConnection_(destConnection).disconnect();\n    } else {\n      Blockly.navigation.getInferiorConnection_(movingConnection).disconnect();\n    }\n  }\n};\n\n/**\n * If the two blocks are compatible move the moving connection to the target\n * connection and connect them.\n * @param {Blockly.RenderedConnection} movingConnection The connection that is\n *     being moved.\n * @param {Blockly.RenderedConnection} destConnection The connection to be moved\n *     to.\n * @return {boolean} True if the connections were connected, false otherwise.\n * @private\n */\nBlockly.navigation.moveAndConnect_ = function(movingConnection, destConnection) {\n  if (!movingConnection || !destConnection) {\n    return false;\n  }\n  var movingBlock = movingConnection.getSourceBlock();\n\n  if (destConnection.canConnectWithReason(movingConnection) ==\n      Blockly.Connection.CAN_CONNECT) {\n\n    Blockly.navigation.disconnectChild_(movingConnection, destConnection);\n\n    if (!destConnection.isSuperior()) {\n      var rootBlock = movingBlock.getRootBlock();\n      rootBlock.positionNearConnection(movingConnection, destConnection);\n    }\n    destConnection.connect(movingConnection);\n    return true;\n  }\n  return false;\n};\n\n/**\n * If the given connection is superior find the inferior connection on the\n * source block.\n * @param {Blockly.RenderedConnection} connection The connection trying to be\n *     connected.\n * @return {Blockly.RenderedConnection} The inferior connection or null if none\n *     exists.\n * @private\n */\nBlockly.navigation.getInferiorConnection_ = function(connection) {\n  var block = connection.getSourceBlock();\n  if (!connection.isSuperior()) {\n    return connection;\n  } else if (block.previousConnection) {\n    return block.previousConnection;\n  } else if (block.outputConnection) {\n    return block.outputConnection;\n  } else {\n    return null;\n  }\n};\n\n/**\n * If the given connection is inferior tries to find a superior connection to\n * connect to.\n * @param {Blockly.RenderedConnection} connection The connection trying to be\n *     connected.\n * @return {Blockly.RenderedConnection} The superior connection or null if none\n *     exists.\n * @private\n */\nBlockly.navigation.getSuperiorConnection_ = function(connection) {\n  if (connection.isSuperior()) {\n    return connection;\n  } else if (connection.targetConnection) {\n    return connection.targetConnection;\n  }\n  return null;\n};\n\n/**\n * Tries to connect the  given connections.\n *\n * If the given connections are not compatible try finding compatible connections\n * on the source blocks of the given connections.\n *\n * @param {Blockly.RenderedConnection} movingConnection The connection that is\n *     being moved.\n * @param {Blockly.RenderedConnection} destConnection The connection to be moved\n *     to.\n * @return {boolean} True if the two connections or their target connections\n *     were connected, false otherwise.\n * @private\n */\nBlockly.navigation.connect_ = function(movingConnection, destConnection) {\n  if (!movingConnection || !destConnection) {\n    return false;\n  }\n\n  var movingInferior = Blockly.navigation.getInferiorConnection_(movingConnection);\n  var destSuperior = Blockly.navigation.getSuperiorConnection_(destConnection);\n\n  var movingSuperior = Blockly.navigation.getSuperiorConnection_(movingConnection);\n  var destInferior = Blockly.navigation.getInferiorConnection_(destConnection);\n\n  if (movingInferior && destSuperior &&\n      Blockly.navigation.moveAndConnect_(movingInferior, destSuperior)) {\n    return true;\n  // Try swapping the inferior and superior connections on the blocks.\n  } else if (movingSuperior && destInferior &&\n      Blockly.navigation.moveAndConnect_(movingSuperior, destInferior)) {\n    return true;\n  } else if (Blockly.navigation.moveAndConnect_(movingConnection, destConnection)){\n    return true;\n  } else {\n    try {\n      destConnection.checkConnection(movingConnection);\n    }\n    catch (e) {\n      // If nothing worked report the error from the original connections.\n      Blockly.navigation.warn_('Connection failed with error: ' + e);\n    }\n    return false;\n  }\n};\n\n/**\n * Tries to connect the given block to the destination connection, making an\n * intelligent guess about which connection to use to on the moving block.\n * @param {!Blockly.BlockSvg} block The block to move.\n * @param {!Blockly.RenderedConnection} destConnection The connection to connect\n *     to.\n * @return {boolean} Whether the connection was successful.\n */\nBlockly.navigation.insertBlock = function(block, destConnection) {\n  switch (destConnection.type) {\n    case Blockly.PREVIOUS_STATEMENT:\n      if (Blockly.navigation.connect_(block.nextConnection, destConnection)) {\n        return true;\n      }\n      break;\n    case Blockly.NEXT_STATEMENT:\n      if (Blockly.navigation.connect_(block.previousConnection, destConnection)) {\n        return true;\n      }\n      break;\n    case Blockly.INPUT_VALUE:\n      if (Blockly.navigation.connect_(block.outputConnection, destConnection)) {\n        return true;\n      }\n      break;\n    case Blockly.OUTPUT_VALUE:\n      for (var i = 0; i < block.inputList.length; i++) {\n        var inputConnection = /** @type {Blockly.RenderedConnection} */ (\n          block.inputList[i].connection);\n        if (inputConnection && inputConnection.type === Blockly.INPUT_VALUE &&\n            Blockly.navigation.connect_(inputConnection, destConnection)) {\n          return true;\n        }\n      }\n      // If there are no input values pass the output and destination connections\n      // to connect_ to find a way to connect the two.\n      if (block.outputConnection &&\n          Blockly.navigation.connect_(block.outputConnection, destConnection)) {\n        return true;\n      }\n      break;\n  }\n  Blockly.navigation.warn_('This block can not be inserted at the marked location.');\n  return false;\n};\n\n/**\n * Disconnect the connection that the cursor is pointing to, and bump blocks.\n * This is a no-op if the connection cannot be broken or if the cursor is not\n * pointing to a connection.\n * @private\n */\nBlockly.navigation.disconnectBlocks_ = function() {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var curNode = workspace.getCursor().getCurNode();\n  if (!curNode.isConnection()) {\n    Blockly.navigation.log_('Cannot disconnect blocks when the cursor is not on a connection');\n    return;\n  }\n  var curConnection =\n    /** @type {!Blockly.RenderedConnection} */ (curNode.getLocation());\n  if (!curConnection.isConnected()) {\n    Blockly.navigation.log_('Cannot disconnect unconnected connection');\n    return;\n  }\n  var superiorConnection =\n      curConnection.isSuperior() ? curConnection : curConnection.targetConnection;\n\n  var inferiorConnection =\n      curConnection.isSuperior() ? curConnection.targetConnection : curConnection;\n\n  if (inferiorConnection.getSourceBlock().isShadow()) {\n    Blockly.navigation.log_('Cannot disconnect a shadow block');\n    return;\n  }\n  superiorConnection.disconnect();\n  inferiorConnection.bumpAwayFrom(superiorConnection);\n\n  var rootBlock = superiorConnection.getSourceBlock().getRootBlock();\n  rootBlock.bringToFront();\n\n  var connectionNode = Blockly.ASTNode.createConnectionNode(superiorConnection);\n  workspace.getCursor().setCurNode(connectionNode);\n};\n\n/** ***************** */\n/** Helper Functions  */\n/** ***************** */\n\n/**\n * Move the marker to the cursor's current location.\n * @private\n */\nBlockly.navigation.markAtCursor_ = function() {\n  Blockly.navigation.getMarker().setCurNode(\n      Blockly.navigation.getNavigationWorkspace().getCursor().getCurNode());\n};\n\n/**\n * Remove the marker from its current location and hide it.\n * @private\n */\nBlockly.navigation.removeMark_ = function() {\n  var marker = Blockly.navigation.getMarker();\n  marker.setCurNode(null);\n  marker.hide();\n};\n\n/**\n * Set the current navigation state.\n * @param {number} newState The new navigation state.\n * @package\n */\nBlockly.navigation.setState = function(newState) {\n  Blockly.navigation.currentState_ = newState;\n};\n\n/**\n * Before a block is deleted move the cursor to the appropriate position.\n * @param {!Blockly.BlockSvg} deletedBlock The block that is being deleted.\n */\nBlockly.navigation.moveCursorOnBlockDelete = function(deletedBlock) {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  if (!workspace) {\n    return;\n  }\n  var cursor = workspace.getCursor();\n  if (cursor) {\n    var curNode = cursor.getCurNode();\n    var block = curNode ? curNode.getSourceBlock() : null;\n\n    if (block === deletedBlock) {\n      // If the block has a parent move the cursor to their connection point.\n      if (block.getParent()) {\n        var topConnection = block.previousConnection || block.outputConnection;\n        if (topConnection) {\n          cursor.setCurNode(\n              Blockly.ASTNode.createConnectionNode(topConnection.targetConnection));\n        }\n      } else {\n        // If the block is by itself move the cursor to the workspace.\n        cursor.setCurNode(Blockly.ASTNode.createWorkspaceNode(block.workspace,\n            block.getRelativeToSurfaceXY()));\n      }\n    // If the cursor is on a block whose parent is being deleted, move the\n    // cursor to the workspace.\n    } else if (block && deletedBlock.getChildren(false).indexOf(block) > -1) {\n      cursor.setCurNode(Blockly.ASTNode.createWorkspaceNode(block.workspace,\n          block.getRelativeToSurfaceXY()));\n    }\n  }\n};\n\n/**\n * When a block that the cursor is on is mutated move the cursor to the block\n * level.\n * @param {!Blockly.BlockSvg} mutatedBlock The block that is being mutated.\n * @package\n */\nBlockly.navigation.moveCursorOnBlockMutation = function(mutatedBlock) {\n  var cursor = Blockly.navigation.getNavigationWorkspace().getCursor();\n  if (cursor) {\n    var curNode = cursor.getCurNode();\n    var block = curNode ? curNode.getSourceBlock() : null;\n\n    if (block === mutatedBlock) {\n      cursor.setCurNode(Blockly.ASTNode.createBlockNode(block));\n    }\n  }\n};\n\n/**\n * Enable accessibility mode.\n */\nBlockly.navigation.enableKeyboardAccessibility = function() {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  if (!workspace.keyboardAccessibilityMode) {\n    workspace.keyboardAccessibilityMode = true;\n    Blockly.navigation.focusWorkspace_();\n  }\n};\n\n/**\n * Disable accessibility mode.\n */\nBlockly.navigation.disableKeyboardAccessibility = function() {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  if (workspace.keyboardAccessibilityMode) {\n    workspace.keyboardAccessibilityMode = false;\n    workspace.getCursor().hide();\n    Blockly.navigation.getMarker().hide();\n    if (Blockly.navigation.getFlyoutCursor_()) {\n      Blockly.navigation.getFlyoutCursor_().hide();\n    }\n  }\n};\n\n/**\n * Navigation log handler. If loggingCallback is defined, use it.\n * Otherwise just log to the console.\n * @param {string} msg The message to log.\n * @private\n */\nBlockly.navigation.log_ = function(msg) {\n  if (Blockly.navigation.loggingCallback) {\n    Blockly.navigation.loggingCallback('log', msg);\n  } else {\n    console.log(msg);\n  }\n};\n\n/**\n * Navigation warning handler. If loggingCallback is defined, use it.\n * Otherwise call Blockly.navigation.warn_.\n * @param {string} msg The warning message.\n * @private\n */\nBlockly.navigation.warn_ = function(msg) {\n  if (Blockly.navigation.loggingCallback) {\n    Blockly.navigation.loggingCallback('warn', msg);\n  } else {\n    console.warn(msg);\n  }\n};\n\n/**\n * Navigation error handler. If loggingCallback is defined, use it.\n * Otherwise call console.error.\n * @param {string} msg The error message.\n * @private\n */\nBlockly.navigation.error_ = function(msg) {\n  if (Blockly.navigation.loggingCallback) {\n    Blockly.navigation.loggingCallback('error', msg);\n  } else {\n    console.error(msg);\n  }\n};\n\n/** ***************** */\n/** Handle Key Press  */\n/** ***************** */\n\n/**\n * Handler for all the keyboard navigation events.\n * @param {!KeyboardEvent} e The keyboard event.\n * @return {boolean} True if the key was handled false otherwise.\n */\nBlockly.navigation.onKeyPress = function(e) {\n  var key = Blockly.user.keyMap.serializeKeyEvent(e);\n  var action = Blockly.user.keyMap.getActionByKeyCode(key);\n\n  if (action) {\n    return Blockly.navigation.onBlocklyAction(action);\n  }\n  return false;\n};\n\n/**\n * Decides which actions to handle depending on keyboard navigation and readonly\n * states.\n * @param {!Blockly.Action} action The current action.\n * @return {boolean} True if the action has been handled, false otherwise.\n */\nBlockly.navigation.onBlocklyAction = function(action) {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var readOnly = workspace.options.readOnly;\n  var actionHandled = false;\n\n  if (workspace.keyboardAccessibilityMode) {\n    if (!readOnly) {\n      actionHandled = Blockly.navigation.handleActions_(action);\n    // If in readonly mode only handle valid actions.\n    } else if (Blockly.navigation.READONLY_ACTION_LIST.indexOf(action) > -1) {\n      actionHandled = Blockly.navigation.handleActions_(action);\n    }\n  // If not in accessibility mode only handle turning on keyboard navigation.\n  } else if (action.name === Blockly.navigation.actionNames.TOGGLE_KEYBOARD_NAV) {\n    Blockly.navigation.enableKeyboardAccessibility();\n    actionHandled = true;\n  }\n  return actionHandled;\n};\n\n/**\n * Handles the action or dispatches to the appropriate action handler.\n * @param {!Blockly.Action} action The action to handle.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @private\n */\nBlockly.navigation.handleActions_ = function(action) {\n  if (action.name == Blockly.navigation.actionNames.TOOLBOX ||\n    Blockly.navigation.currentState_ == Blockly.navigation.STATE_TOOLBOX) {\n    return Blockly.navigation.toolboxOnAction_(action);\n  } else if (action.name == Blockly.navigation.actionNames.TOGGLE_KEYBOARD_NAV) {\n    Blockly.navigation.disableKeyboardAccessibility();\n    return true;\n  } if (Blockly.navigation.currentState_ == Blockly.navigation.STATE_WS) {\n    return Blockly.navigation.workspaceOnAction_(action);\n  } else if (Blockly.navigation.currentState_ == Blockly.navigation.STATE_FLYOUT) {\n    return Blockly.navigation.flyoutOnAction_(action);\n  }\n  return false;\n};\n\n/**\n * Handles the given action for the flyout.\n * @param {!Blockly.Action} action The action to handle.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @private\n */\nBlockly.navigation.flyoutOnAction_ = function(action) {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var toolbox = workspace.getToolbox();\n  var flyout = toolbox ? toolbox.getFlyout() : workspace.getFlyout();\n\n  if (flyout && flyout.onBlocklyAction(action)) {\n    return true;\n  }\n\n  switch (action.name) {\n    case Blockly.navigation.actionNames.OUT:\n      Blockly.navigation.focusToolbox_();\n      return true;\n    case Blockly.navigation.actionNames.MARK:\n      Blockly.navigation.insertFromFlyout();\n      return true;\n    case Blockly.navigation.actionNames.EXIT:\n      Blockly.navigation.focusWorkspace_();\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Handles the given action for the toolbox.\n * @param {!Blockly.Action} action The action to handle.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @private\n */\nBlockly.navigation.toolboxOnAction_ = function(action) {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var toolbox = workspace.getToolbox();\n  var handled = toolbox && typeof toolbox.onBlocklyAction == 'function' ?\n      toolbox.onBlocklyAction(action) : false;\n\n  if (handled) {\n    return true;\n  }\n\n  if (action.name === Blockly.navigation.actionNames.TOOLBOX) {\n    if (!workspace.getToolbox()) {\n      Blockly.navigation.focusFlyout_();\n    } else {\n      Blockly.navigation.focusToolbox_();\n    }\n    return true;\n  } else if (action.name === Blockly.navigation.actionNames.IN) {\n    Blockly.navigation.focusFlyout_();\n    return true;\n  } else if (action.name === Blockly.navigation.actionNames.EXIT) {\n    Blockly.navigation.focusWorkspace_();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Move the workspace cursor in the given direction.\n * @param {number} xDirection -1 to move cursor left. 1 to move cursor right.\n * @param {number} yDirection -1 to move cursor up. 1 to move cursor down.\n * @return {boolean} True if the current node is a workspace, false otherwise.\n * @private\n */\nBlockly.navigation.moveWSCursor_ = function(xDirection, yDirection) {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  var cursor = workspace.getCursor();\n  var curNode = workspace.getCursor().getCurNode();\n\n  if (curNode.getType() !== Blockly.ASTNode.types.WORKSPACE) {\n    return false;\n  }\n\n  var wsCoord = curNode.getWsCoordinate();\n  var newX = xDirection * Blockly.navigation.WS_MOVE_DISTANCE + wsCoord.x;\n  var newY = yDirection * Blockly.navigation.WS_MOVE_DISTANCE + wsCoord.y;\n\n  cursor.setCurNode(Blockly.ASTNode.createWorkspaceNode(\n      workspace, new Blockly.utils.Coordinate(newX, newY)));\n  return true;\n};\n\n/**\n * Handles the given action for the workspace.\n * @param {!Blockly.Action} action The action to handle.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @private\n */\nBlockly.navigation.workspaceOnAction_ = function(action) {\n  var workspace = Blockly.navigation.getNavigationWorkspace();\n  if (workspace.getCursor().onBlocklyAction(action)) {\n    return true;\n  }\n  switch (action.name) {\n    case Blockly.navigation.actionNames.INSERT:\n      Blockly.navigation.modify_();\n      return true;\n    case Blockly.navigation.actionNames.MARK:\n      Blockly.navigation.handleEnterForWS_();\n      return true;\n    case Blockly.navigation.actionNames.DISCONNECT:\n      Blockly.navigation.disconnectBlocks_();\n      return true;\n    case Blockly.navigation.actionNames.MOVE_WS_CURSOR_UP:\n      return Blockly.navigation.moveWSCursor_(0, -1);\n    case Blockly.navigation.actionNames.MOVE_WS_CURSOR_DOWN:\n      return Blockly.navigation.moveWSCursor_(0, 1);\n    case Blockly.navigation.actionNames.MOVE_WS_CURSOR_LEFT:\n      return Blockly.navigation.moveWSCursor_(-1, 0);\n    case Blockly.navigation.actionNames.MOVE_WS_CURSOR_RIGHT:\n      return Blockly.navigation.moveWSCursor_(1, 0);\n    default:\n      return false;\n  }\n};\n\n/**\n * Handles hitting the enter key on the workspace.\n * @private\n */\nBlockly.navigation.handleEnterForWS_ = function() {\n  var cursor = Blockly.navigation.getNavigationWorkspace().getCursor();\n  var curNode = cursor.getCurNode();\n  var nodeType = curNode.getType();\n  if (nodeType == Blockly.ASTNode.types.FIELD) {\n    (/** @type {!Blockly.Field} */(curNode.getLocation())).showEditor();\n  } else if (curNode.isConnection() ||\n      nodeType == Blockly.ASTNode.types.WORKSPACE) {\n    Blockly.navigation.markAtCursor_();\n  } else if (nodeType == Blockly.ASTNode.types.BLOCK) {\n    Blockly.navigation.warn_('Cannot mark a block.');\n  } else if (nodeType == Blockly.ASTNode.types.STACK) {\n    Blockly.navigation.warn_('Cannot mark a stack.');\n  }\n};\n\n/** ******************* */\n/** Navigation Actions  */\n/** ******************* */\n\n/**\n * The previous action.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_PREVIOUS = new Blockly.Action(\n    Blockly.navigation.actionNames.PREVIOUS, 'Go to the previous location.');\n\n/**\n * The out action.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_OUT = new Blockly.Action(\n    Blockly.navigation.actionNames.OUT,\n    'Go to the parent of the current location.');\n\n/**\n * The next action.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_NEXT = new Blockly.Action(\n    Blockly.navigation.actionNames.NEXT, 'Go to the next location.');\n\n/**\n * The in action.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_IN = new Blockly.Action(\n    Blockly.navigation.actionNames.IN,\n    'Go to the first child of the current location.');\n\n/**\n * The action to try to insert a block.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_INSERT = new Blockly.Action(\n    Blockly.navigation.actionNames.INSERT,\n    'Connect the current location to the marked location.');\n\n/**\n * The action to mark a certain location.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_MARK = new Blockly.Action(\n    Blockly.navigation.actionNames.MARK, 'Mark the current location.');\n\n/**\n * The action to disconnect a block.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_DISCONNECT = new Blockly.Action(\n    Blockly.navigation.actionNames.DISCONNECT,\n    'Disconnect the block at the current location from its parent.');\n\n/**\n * The action to open the toolbox.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_TOOLBOX = new Blockly.Action(\n    Blockly.navigation.actionNames.TOOLBOX, 'Open the toolbox.');\n\n/**\n * The action to exit the toolbox or flyout.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_EXIT = new Blockly.Action(\n    Blockly.navigation.actionNames.EXIT,\n    'Close the current modal, such as a toolbox or field editor.');\n\n/**\n * The action to toggle keyboard navigation mode on and off.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_TOGGLE_KEYBOARD_NAV = new Blockly.Action(\n    Blockly.navigation.actionNames.TOGGLE_KEYBOARD_NAV,\n    'Turns on and off keyboard navigation.');\n\n/**\n * The action to move the cursor to the left on a workspace.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_MOVE_WS_CURSOR_LEFT = new Blockly.Action(\n    Blockly.navigation.actionNames.MOVE_WS_CURSOR_LEFT,\n    'Move the workspace cursor to the lefts.');\n\n/**\n * The action to move the cursor to the right on a workspace.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_MOVE_WS_CURSOR_RIGHT = new Blockly.Action(\n    Blockly.navigation.actionNames.MOVE_WS_CURSOR_RIGHT,\n    'Move the workspace cursor to the right.');\n\n/**\n * The action to move the cursor up on a workspace.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_MOVE_WS_CURSOR_UP = new Blockly.Action(\n    Blockly.navigation.actionNames.MOVE_WS_CURSOR_UP,\n    'Move the workspace cursor up.');\n\n/**\n * The action to move the cursor down on a workspace.\n * @type {!Blockly.Action}\n */\nBlockly.navigation.ACTION_MOVE_WS_CURSOR_DOWN = new Blockly.Action(\n    Blockly.navigation.actionNames.MOVE_WS_CURSOR_DOWN,\n    'Move the workspace cursor down.');\n\n\n/**\n * List of actions that can be performed in read only mode.\n * @type {!Array.<!Blockly.Action>}\n */\nBlockly.navigation.READONLY_ACTION_LIST = [\n  Blockly.navigation.ACTION_PREVIOUS,\n  Blockly.navigation.ACTION_OUT,\n  Blockly.navigation.ACTION_IN,\n  Blockly.navigation.ACTION_NEXT,\n  Blockly.navigation.ACTION_TOGGLE_KEYBOARD_NAV\n];\n"],"file":"navigation.min.js"}