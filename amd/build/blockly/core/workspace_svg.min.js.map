{"version":3,"sources":["../../../src/blockly/core/workspace_svg.js"],"names":["goog","provide","require","requireType","Blockly","WorkspaceSvg","options","opt_blockDragSurface","opt_wsDragSurface","superClass_","constructor","call","getMetrics","getTopLevelWorkspaceMetrics_","setMetrics","setTopLevelWorkspaceMetrics_","connectionDBList","ConnectionDB","init","blockDragSurface_","workspaceDragSurface_","useWorkspaceDragSurface_","utils","is3dSupported","highlightedBlocks_","audioManager_","WorkspaceAudio","parentWorkspace","grid_","gridPattern","Grid","gridOptions","markerManager_","MarkerManager","toolboxCategoryCallbacks_","flyoutButtonCallbacks_","Variables","flyoutCategory","registerToolboxCategoryCallback","VARIABLE_CATEGORY_NAME","VariablesDynamic","VARIABLE_DYNAMIC_CATEGORY_NAME","Procedures","PROCEDURE_CATEGORY_NAME","addChangeListener","mutatorOpenListener","themeManager_","getThemeManager","ThemeManager","theme","Themes","Classic","subscribeWorkspace","renderer_","blockRendering","renderer","getTheme","rendererOverrides","cachedParentSvg_","keyboardAccessibilityMode","topBoundedElements_","object","inherits","Workspace","prototype","resizeHandlerWrapper_","rendered","isVisible_","isFlyout","isMutator","resizesEnabled_","scrollX","scrollY","startScrollX","startScrollY","dragDeltaXY_","scale","trashcan","scrollbar","flyout_","toolbox_","currentGesture_","isDragSurfaceActive_","injectionDiv_","lastRecordedPageScroll_","configureContextMenu","targetWorkspace","inverseScreenCTM_","inverseScreenCTMDirty_","getMarkerManager","setCursorSvg","cursorSvg","setMarkerSvg","markerSvg","getMarker","id","getCursor","getRenderer","setTheme","refreshTheme","svgGroup_","refreshDom","updateBlockStyles_","getAllBlocks","filter","block","getStyleName","refreshToolboxSelection","isVisible","setVisible","event","Events","Ui","workspaceId","fire","blocks","i","blockStyleName","setStyle","mutator","updateBlockStyle","getInverseScreenCTM","ctm","getParentSvg","getScreenCTM","inverse","updateInverseScreenCTM","getSvgXY","element","x","y","dom","containsNode","getCanvas","getBubbleCanvas","xy","getRelativeXY","parentNode","Coordinate","getOriginOffsetInPixels","getInjectionDivXY_","getInjectionDiv","classes","getAttribute","indexOf","getBlockCanvas","svgBlockCanvas_","setResizeHandlerWrapper","handler","createDom","opt_backgroundClass","createSvgElement","svgBackground_","style","fill","getPatternId","subscribe","svgBubbleCanvas_","bindEventWithChecks_","onMouseDown_","onMouseWheel_","hasCategories","Toolbox","Error","ToolboxClass","registry","getClassFromOptions","Type","TOOLBOX","update","recordDeleteAreas","setCursor","Cursor","registerMarker","navigation","MARKER_NAME","Marker","dispose","cancel","removeNode","zoomControls_","unsubscribeWorkspace","unsubscribe","div","unbindEvent_","newBlock","prototypeName","opt_id","BlockSvg","addTrashcan","Trashcan","svgTrashcan","insertBefore","addZoomControls","ZoomControls","svgZoomControls","appendChild","addFlyout","tagName","workspaceOptions","Options","RTL","oneBasedIndex","horizontalLayout","toolboxPosition","HorizontalFlyout","VerticalFlyout","autoClose","getWorkspace","getFlyout","opt_own","getToolbox","updateScreenCalculations_","resizeContents","resize","position","updateScreenCalculationsIfScrolled","currScroll","getDocumentScroll","equals","translate","translateSurface","translation","setAttribute","translateAndScaleGroup","moveTo","resetDragSurface","trans","getSurfaceTranslation","clearAndHide","setupDragSurface","previousElement","previousSibling","width","parseInt","height","coord","setContentsAndShow","getBlockDragSurface","getWidth","metrics","viewWidth","setContainerVisible","display","length","markDirty","render","hideChaff","imList","getInsertionMarkers","updateMarkers","traceOn","console","warn","highlightBlock","opt_state","setHighlighted","getBlockById","state","arrayRemove","push","paste","xmlBlock","getElementsByTagName","remainingCapacity","toLowerCase","pasteWorkspaceComment_","pasteBlock_","disable","Xml","domToBlock","markedNode","getCurNode","isConnection","markedLocation","getLocation","insertBlock","blockX","blockY","isNaN","collide","allBlocks","otherBlock","otherXY","getRelativeToSurfaceXY","Math","abs","connections","getConnections_","connection","neighbour","closest","SNAP_RADIUS","moveBy","enable","isEnabled","isShadow","BlockCreate","select","xmlComment","comment","WorkspaceCommentSvg","fromXml","commentX","commentY","ws","refreshSelection","renameVariableById","newName","deleteVariableById","createVariable","name","opt_type","newVar","deleteAreaTrash_","getClientRect","deleteAreaToolbox_","isDeleteArea","e","contains","clientX","clientY","DELETE_AREA_TRASH","DELETE_AREA_TOOLBOX","DELETE_AREA_NONE","gesture","getGesture","handleWsStart","startDrag","point","mouseToSvg","difference","moveDrag","sum","isDragging","isDraggable","moveOptions","drag","isContentBounded","scrollbars","wheel","zoomOptions","controls","pinch","isMovable","Gesture","inProgress","preventDefault","stopPropagation","canWheelZoom","canWheelMove","scrollDelta","getScrollDeltaPixels","ctrlKey","delta","zoom","shiftKey","scroll","getBlocksBoundingBox","topElements","getTopBoundedElements","Rect","boundary","getBoundingRectangle","blockBoundary","top","bottom","left","right","cleanUp","setResizesEnabled","setGroup","topBlocks","getTopBlocks","cursorY","snapToGrid","getHeightWidth","getConstants","MIN_BLOCK_HEIGHT","showContextMenu","readOnly","menuOptions","eventGroup","genUid","undoOption","text","Msg","enabled","undoStack_","callback","undo","bind","redoOption","redoStack_","cleanOption","collapse","hasCollapsedBlocks","hasExpandedBlocks","isCollapsed","getNextBlock","toggleOption","shouldCollapse","ms","setTimeout","setCollapsed","collapseOption","expandOption","deleteList","addDeletableBlocks","isDeletable","concat","getDescendants","children","getChildren","deleteNext","shift","workspace","deleteOption","replace","confirm","ok","ContextMenu","show","updateToolbox","toolboxDef","Array","isArray","parseToolboxTree","toolbox","convertToolboxToJSON","languageTree","markFocused","mainWorkspace","setBrowserFocus","document","activeElement","blur","focus","preventScroll","setActive","amount","speed","scaleSpeed","scaleChange","pow","newScale","maxScale","minScale","matrix","getCTM","center","createSVGPoint","matrixTransform","f","setScale","zoomCenter","type","svgWidth","svgHeight","absoluteLeft","viewHeight","absoluteTop","zoomToFit","workspaceWidth","workspaceHeight","blocksBox","blocksWidth","blocksHeight","getHeight","ratioX","ratioY","min","scrollCenter","beginCanvasTransition","addClass","endCanvasTransition","removeClass","contentWidth","contentHeight","contentLeft","contentTop","centerOnBlock","heightWidth","blockCenterY","multiplier","blockCenterX","halfViewWidth","halfViewHeight","reflow","viewLeft","viewTop","hScroll","resizeViewHorizontal","vScroll","resizeViewVertical","resizeContentHorizontal","resizeContentVertical","getScale","maxOffsetOfViewFromOriginX","maxOffsetOfViewFromOriginY","max","setHandlePosition","ratio","getDimensionsPx_","elem","Size","getContentDimensions_","svgSize","getContentDimensionsBounded_","getContentDimensionsExact_","blockBox","content","halfWidth","halfHeight","toolboxDimensions","flyoutDimensions","viewSize","TOOLBOX_AT_TOP","TOOLBOX_AT_BOTTOM","TOOLBOX_AT_LEFT","TOOLBOX_AT_RIGHT","contentDimensions","toolboxWidth","toolboxHeight","flyoutWidth","flyoutHeight","xyRatio","ordered","addTopBlock","addTopBoundedElement","removeTopBlock","removeTopBoundedElement","addTopComment","removeTopComment","reenabled","clear","registerButtonCallback","key","func","TypeError","getButtonCallback","result","removeButtonCallback","getToolboxCategoryCallback","removeToolboxCategoryCallback","isStart","hasStarted","TouchGesture","clearGesture","cancelCurrentGesture","getAudioManager","getGrid"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2014 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Object representing a workspace rendered as SVG.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.WorkspaceSvg');\n\ngoog.require('Blockly.BlockSvg');\ngoog.require('Blockly.blockRendering');\ngoog.require('Blockly.ConnectionDB');\ngoog.require('Blockly.constants');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.BlockCreate');\ngoog.require('Blockly.Gesture');\ngoog.require('Blockly.Grid');\ngoog.require('Blockly.MarkerManager');\ngoog.require('Blockly.Msg');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.Options');\ngoog.require('Blockly.registry');\ngoog.require('Blockly.ThemeManager');\ngoog.require('Blockly.Themes.Classic');\ngoog.require('Blockly.TouchGesture');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.Metrics');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.Rect');\ngoog.require('Blockly.utils.toolbox');\ngoog.require('Blockly.Workspace');\ngoog.require('Blockly.WorkspaceAudio');\ngoog.require('Blockly.WorkspaceDragSurfaceSvg');\ngoog.require('Blockly.Xml');\n\ngoog.requireType('Blockly.blockRendering.Renderer');\ngoog.requireType('Blockly.IASTNodeLocationSvg');\ngoog.requireType('Blockly.IBoundedElement');\n\n\n/**\n * Class for a workspace.  This is an onscreen area with optional trashcan,\n * scrollbars, bubbles, and dragging.\n * @param {!Blockly.Options} options Dictionary of options.\n * @param {Blockly.BlockDragSurfaceSvg=} opt_blockDragSurface Drag surface for\n *     blocks.\n * @param {Blockly.WorkspaceDragSurfaceSvg=} opt_wsDragSurface Drag surface for\n *     the workspace.\n * @extends {Blockly.Workspace}\n * @implements {Blockly.IASTNodeLocationSvg}\n * @constructor\n */\nBlockly.WorkspaceSvg = function(options,\n    opt_blockDragSurface, opt_wsDragSurface) {\n  Blockly.WorkspaceSvg.superClass_.constructor.call(this, options);\n  /** @type {function():!Blockly.utils.Metrics} */\n  this.getMetrics =\n      options.getMetrics || Blockly.WorkspaceSvg.getTopLevelWorkspaceMetrics_;\n  /** @type {function(!{x:number, y:number}):void} */\n  this.setMetrics =\n      options.setMetrics || Blockly.WorkspaceSvg.setTopLevelWorkspaceMetrics_;\n\n  this.connectionDBList = Blockly.ConnectionDB.init();\n\n  if (opt_blockDragSurface) {\n    this.blockDragSurface_ = opt_blockDragSurface;\n  }\n\n  if (opt_wsDragSurface) {\n    this.workspaceDragSurface_ = opt_wsDragSurface;\n  }\n\n  this.useWorkspaceDragSurface_ =\n      !!this.workspaceDragSurface_ && Blockly.utils.is3dSupported();\n\n  /**\n   * List of currently highlighted blocks.  Block highlighting is often used to\n   * visually mark blocks currently being executed.\n   * @type {!Array.<!Blockly.BlockSvg>}\n   * @private\n   */\n  this.highlightedBlocks_ = [];\n\n  /**\n   * Object in charge of loading, storing, and playing audio for a workspace.\n   * @type {!Blockly.WorkspaceAudio}\n   * @private\n   */\n  this.audioManager_ = new Blockly.WorkspaceAudio(\n      /** @type {Blockly.WorkspaceSvg} */ (options.parentWorkspace));\n\n  /**\n   * This workspace's grid object or null.\n   * @type {Blockly.Grid}\n   * @private\n   */\n  this.grid_ = this.options.gridPattern ?\n      new Blockly.Grid(this.options.gridPattern, options.gridOptions) : null;\n\n  /**\n   * Manager in charge of markers and cursors.\n   * @type {!Blockly.MarkerManager}\n   * @private\n   */\n  this.markerManager_ = new Blockly.MarkerManager(this);\n\n  /**\n  * Map from function names to callbacks, for deciding what to do when a custom\n  * toolbox category is opened.\n  * @type {!Object.<string, ?function(!Blockly.Workspace):!Array.<!Element>>}\n  * @private\n  */\n  this.toolboxCategoryCallbacks_ = {};\n\n  /**\n  * Map from function names to callbacks, for deciding what to do when a button\n  * is clicked.\n  * @type {!Object.<string, ?function(!Blockly.FlyoutButton)>}\n  * @private\n  */\n  this.flyoutButtonCallbacks_ = {};\n\n  if (Blockly.Variables && Blockly.Variables.flyoutCategory) {\n    this.registerToolboxCategoryCallback(Blockly.VARIABLE_CATEGORY_NAME,\n        Blockly.Variables.flyoutCategory);\n  }\n  if (Blockly.VariablesDynamic && Blockly.VariablesDynamic.flyoutCategory) {\n    this.registerToolboxCategoryCallback(Blockly.VARIABLE_DYNAMIC_CATEGORY_NAME,\n        Blockly.VariablesDynamic.flyoutCategory);\n  }\n  if (Blockly.Procedures && Blockly.Procedures.flyoutCategory) {\n    this.registerToolboxCategoryCallback(Blockly.PROCEDURE_CATEGORY_NAME,\n        Blockly.Procedures.flyoutCategory);\n    this.addChangeListener(Blockly.Procedures.mutatorOpenListener);\n  }\n\n  /**\n   * Object in charge of storing and updating the workspace theme.\n   * @type {!Blockly.ThemeManager}\n   * @protected\n   */\n  this.themeManager_ = this.options.parentWorkspace ?\n      this.options.parentWorkspace.getThemeManager() :\n      new Blockly.ThemeManager(this,\n          this.options.theme || Blockly.Themes.Classic);\n  this.themeManager_.subscribeWorkspace(this);\n\n  /**\n   * The block renderer used for rendering blocks on this workspace.\n   * @type {!Blockly.blockRendering.Renderer}\n   * @private\n   */\n  this.renderer_ = Blockly.blockRendering.init(this.options.renderer || 'geras',\n      this.getTheme(), this.options.rendererOverrides);\n\n  /**\n   * Cached parent SVG.\n   * @type {SVGElement}\n   * @private\n   */\n  this.cachedParentSvg_ = null;\n\n  /**\n   * True if keyboard accessibility mode is on, false otherwise.\n   * @type {boolean}\n   */\n  this.keyboardAccessibilityMode = false;\n\n  /**\n   * The list of top-level bounded elements on the workspace.\n   * @type {!Array.<!Blockly.IBoundedElement>}\n   * @private\n   */\n  this.topBoundedElements_ = [];\n};\nBlockly.utils.object.inherits(Blockly.WorkspaceSvg, Blockly.Workspace);\n\n/**\n * A wrapper function called when a resize event occurs.\n * You can pass the result to `unbindEvent_`.\n * @type {Array.<!Array>}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.resizeHandlerWrapper_ = null;\n\n/**\n * The render status of an SVG workspace.\n * Returns `false` for headless workspaces and true for instances of\n * `Blockly.WorkspaceSvg`.\n * @type {boolean}\n */\nBlockly.WorkspaceSvg.prototype.rendered = true;\n\n/**\n * Whether the workspace is visible.  False if the workspace has been hidden\n * by calling `setVisible(false)`.\n * @type {boolean}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.isVisible_ = true;\n\n/**\n * Is this workspace the surface for a flyout?\n * @type {boolean}\n */\nBlockly.WorkspaceSvg.prototype.isFlyout = false;\n\n/**\n * Is this workspace the surface for a mutator?\n * @type {boolean}\n * @package\n */\nBlockly.WorkspaceSvg.prototype.isMutator = false;\n\n/**\n * Whether this workspace has resizes enabled.\n * Disable during batch operations for a performance improvement.\n * @type {boolean}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.resizesEnabled_ = true;\n\n/**\n * Current horizontal scrolling offset in pixel units, relative to the\n * workspace origin.\n *\n * It is useful to think about a view, and a canvas moving beneath that\n * view. As the canvas moves right, this value becomes more positive, and\n * the view is now \"seeing\" the left side of the canvas. As the canvas moves\n * left, this value becomes more negative, and the view is now \"seeing\" the\n * right side of the canvas.\n *\n * The confusing thing about this value is that it does not, and must not\n * include the absoluteLeft offset. This is because it is used to calculate\n * the viewLeft value.\n *\n * The viewLeft is relative to the workspace origin (although in pixel\n * units). The workspace origin is the top-left corner of the workspace (at\n * least when it is enabled). It is shifted from the top-left of the blocklyDiv\n * so as not to be beneath the toolbox.\n *\n * When the workspace is enabled the viewLeft and workspace origin are at\n * the same X location. As the canvas slides towards the right beneath the view\n * this value (scrollX) becomes more positive, and the viewLeft becomes more\n * negative relative to the workspace origin (imagine the workspace origin\n * as a dot on the canvas sliding to the right as the canvas moves).\n *\n * So if the scrollX were to include the absoluteLeft this would in a way\n * \"unshift\" the workspace origin. This means that the viewLeft would be\n * representing the left edge of the blocklyDiv, rather than the left edge\n * of the workspace.\n *\n * @type {number}\n */\nBlockly.WorkspaceSvg.prototype.scrollX = 0;\n\n/**\n * Current vertical scrolling offset in pixel units, relative to the\n * workspace origin.\n *\n * It is useful to think about a view, and a canvas moving beneath that\n * view. As the canvas moves down, this value becomes more positive, and the\n * view is now \"seeing\" the upper part of the canvas. As the canvas moves\n * up, this value becomes more negative, and the view is \"seeing\" the lower\n * part of the canvas.\n *\n * This confusing thing about this value is that it does not, and must not\n * include the absoluteTop offset. This is because it is used to calculate\n * the viewTop value.\n *\n * The viewTop is relative to the workspace origin (although in pixel\n * units). The workspace origin is the top-left corner of the workspace (at\n * least when it is enabled). It is shifted from the top-left of the\n * blocklyDiv so as not to be beneath the toolbox.\n *\n * When the workspace is enabled the viewTop and workspace origin are at the\n * same Y location. As the canvas slides towards the bottom this value\n * (scrollY) becomes more positive, and the viewTop becomes more negative\n * relative to the workspace origin (image in the workspace origin as a dot\n * on the canvas sliding downwards as the canvas moves).\n *\n * So if the scrollY were to include the absoluteTop this would in a way\n * \"unshift\" the workspace origin. This means that the viewTop would be\n * representing the top edge of the blocklyDiv, rather than the top edge of\n * the workspace.\n *\n * @type {number}\n */\nBlockly.WorkspaceSvg.prototype.scrollY = 0;\n\n/**\n * Horizontal scroll value when scrolling started in pixel units.\n * @type {number}\n */\nBlockly.WorkspaceSvg.prototype.startScrollX = 0;\n\n/**\n * Vertical scroll value when scrolling started in pixel units.\n * @type {number}\n */\nBlockly.WorkspaceSvg.prototype.startScrollY = 0;\n\n/**\n * Distance from mouse to object being dragged.\n * @type {Blockly.utils.Coordinate}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.dragDeltaXY_ = null;\n\n/**\n * Current scale.\n * @type {number}\n */\nBlockly.WorkspaceSvg.prototype.scale = 1;\n\n/**\n * The workspace's trashcan (if any).\n * @type {Blockly.Trashcan}\n */\nBlockly.WorkspaceSvg.prototype.trashcan = null;\n\n/**\n * This workspace's scrollbars, if they exist.\n * @type {Blockly.ScrollbarPair}\n */\nBlockly.WorkspaceSvg.prototype.scrollbar = null;\n\n/**\n * Fixed flyout providing blocks which may be dragged into this workspace.\n * @type {Blockly.Flyout}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.flyout_ = null;\n\n/**\n * Category-based toolbox providing blocks which may be dragged into this\n * workspace.\n * @type {Blockly.IToolbox}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.toolbox_ = null;\n\n/**\n * The current gesture in progress on this workspace, if any.\n * @type {Blockly.TouchGesture}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.currentGesture_ = null;\n\n/**\n * This workspace's surface for dragging blocks, if it exists.\n * @type {Blockly.BlockDragSurfaceSvg}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.blockDragSurface_ = null;\n\n/**\n * This workspace's drag surface, if it exists.\n * @type {Blockly.WorkspaceDragSurfaceSvg}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.workspaceDragSurface_ = null;\n\n/**\n  * Whether to move workspace to the drag surface when it is dragged.\n  * True if it should move, false if it should be translated directly.\n  * @type {boolean}\n  * @private\n  */\nBlockly.WorkspaceSvg.prototype.useWorkspaceDragSurface_ = false;\n\n/**\n * Whether the drag surface is actively in use. When true, calls to\n * translate will translate the drag surface instead of the translating the\n * workspace directly.\n * This is set to true in setupDragSurface and to false in resetDragSurface.\n * @type {boolean}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.isDragSurfaceActive_ = false;\n\n/**\n * The first parent div with 'injectionDiv' in the name, or null if not set.\n * Access this with getInjectionDiv.\n * @type {Element}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.injectionDiv_ = null;\n\n/**\n * Last known position of the page scroll.\n * This is used to determine whether we have recalculated screen coordinate\n * stuff since the page scrolled.\n * @type {Blockly.utils.Coordinate}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.lastRecordedPageScroll_ = null;\n\n/**\n * Developers may define this function to add custom menu options to the\n * workspace's context menu or edit the workspace-created set of menu options.\n * @param {!Array.<!Object>} options List of menu options to add to.\n * @param {!Event} e The right-click event that triggered the context menu.\n */\nBlockly.WorkspaceSvg.prototype.configureContextMenu;\n\n/**\n * In a flyout, the target workspace where blocks should be placed after a drag.\n * Otherwise null.\n * @type {Blockly.WorkspaceSvg}\n * @package\n */\nBlockly.WorkspaceSvg.prototype.targetWorkspace = null;\n\n/**\n * Inverted screen CTM, for use in mouseToSvg.\n * @type {SVGMatrix}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.inverseScreenCTM_ = null;\n\n/**\n * Inverted screen CTM is dirty, recalculate it.\n * @type {boolean}\n * @private\n */\nBlockly.WorkspaceSvg.prototype.inverseScreenCTMDirty_ = true;\n\n/**\n * Get the marker manager for this workspace.\n * @return {Blockly.MarkerManager} The marker manager.\n */\nBlockly.WorkspaceSvg.prototype.getMarkerManager = function() {\n  return this.markerManager_;\n};\n\n/**\n * Add the cursor svg to this workspaces svg group.\n * @param {SVGElement} cursorSvg The svg root of the cursor to be added to the\n *     workspace svg group.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.setCursorSvg = function(cursorSvg) {\n  this.markerManager_.setCursorSvg(cursorSvg);\n};\n\n/**\n * Add the marker svg to this workspaces svg group.\n * @param {SVGElement} markerSvg The svg root of the marker to be added to the\n *     workspace svg group.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.setMarkerSvg = function(markerSvg) {\n  this.markerManager_.setMarkerSvg(markerSvg);\n};\n\n/**\n * Get the marker with the given id.\n * @param {string} id The id of the marker.\n * @return {Blockly.Marker} The marker with the given id or null if no marker\n *     with the given id exists.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getMarker = function(id) {\n  if (this.markerManager_) {\n    return this.markerManager_.getMarker(id);\n  }\n  return null;\n};\n\n/**\n * The cursor for this workspace.\n * @return {Blockly.Cursor} The cursor for the workspace.\n */\nBlockly.WorkspaceSvg.prototype.getCursor = function() {\n  if (this.markerManager_) {\n    return this.markerManager_.getCursor();\n  }\n  return null;\n};\n\n/**\n * Get the block renderer attached to this workspace.\n * @return {!Blockly.blockRendering.Renderer} The renderer attached to this workspace.\n */\nBlockly.WorkspaceSvg.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n/**\n * Get the theme manager for this workspace.\n * @return {!Blockly.ThemeManager} The theme manager for this workspace.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getThemeManager = function() {\n  return this.themeManager_;\n};\n\n/**\n * Get the workspace theme object.\n * @return {!Blockly.Theme} The workspace theme object.\n */\nBlockly.WorkspaceSvg.prototype.getTheme = function() {\n  return this.themeManager_.getTheme();\n};\n\n/**\n * Set the workspace theme object.\n * If no theme is passed, default to the `Blockly.Themes.Classic` theme.\n * @param {Blockly.Theme} theme The workspace theme object.\n */\nBlockly.WorkspaceSvg.prototype.setTheme = function(theme) {\n  if (!theme) {\n    theme = /** @type {!Blockly.Theme} */ (Blockly.Themes.Classic);\n  }\n  this.themeManager_.setTheme(theme);\n};\n\n/**\n * Refresh all blocks on the workspace after a theme update.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.refreshTheme = function() {\n  if (this.svgGroup_) {\n    this.renderer_.refreshDom(this.svgGroup_, this.getTheme());\n  }\n\n  // Update all blocks in workspace that have a style name.\n  this.updateBlockStyles_(this.getAllBlocks(false).filter(\n      function(block) {\n        return block.getStyleName() !== undefined;\n      }\n  ));\n\n  // Update current toolbox selection.\n  this.refreshToolboxSelection();\n  if (this.toolbox_) {\n    this.toolbox_.refreshTheme();\n  }\n\n  // Re-render if workspace is visible\n  if (this.isVisible()) {\n    this.setVisible(true);\n  }\n\n  var event = new Blockly.Events.Ui(null, 'theme', null, null);\n  event.workspaceId = this.id;\n  Blockly.Events.fire(event);\n};\n\n/**\n * Updates all the blocks with new style.\n * @param {!Array.<!Blockly.Block>} blocks List of blocks to update the style\n *     on.\n * @private\n */\nBlockly.WorkspaceSvg.prototype.updateBlockStyles_ = function(blocks) {\n  for (var i = 0, block; (block = blocks[i]); i++) {\n    var blockStyleName = block.getStyleName();\n    if (blockStyleName) {\n      block.setStyle(blockStyleName);\n      if (block.mutator) {\n        block.mutator.updateBlockStyle();\n      }\n    }\n  }\n};\n\n/**\n * Getter for the inverted screen CTM.\n * @return {SVGMatrix} The matrix to use in mouseToSvg\n */\nBlockly.WorkspaceSvg.prototype.getInverseScreenCTM = function() {\n\n  // Defer getting the screen CTM until we actually need it, this should\n  // avoid forced reflows from any calls to updateInverseScreenCTM.\n  if (this.inverseScreenCTMDirty_) {\n    var ctm = this.getParentSvg().getScreenCTM();\n    if (ctm) {\n      this.inverseScreenCTM_ = ctm.inverse();\n      this.inverseScreenCTMDirty_ = false;\n    }\n  }\n\n  return this.inverseScreenCTM_;\n};\n\n/**\n * Mark the inverse screen CTM as dirty.\n */\nBlockly.WorkspaceSvg.prototype.updateInverseScreenCTM = function() {\n  this.inverseScreenCTMDirty_ = true;\n};\n\n/**\n * Getter for isVisible\n * @return {boolean} Whether the workspace is visible.\n *     False if the workspace has been hidden by calling `setVisible(false)`.\n */\nBlockly.WorkspaceSvg.prototype.isVisible = function() {\n  return this.isVisible_;\n};\n\n/**\n * Return the absolute coordinates of the top-left corner of this element,\n * scales that after canvas SVG element, if it's a descendant.\n * The origin (0,0) is the top-left corner of the Blockly SVG.\n * @param {!SVGElement} element SVG element to find the coordinates of.\n * @return {!Blockly.utils.Coordinate} Object with .x and .y properties.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getSvgXY = function(element) {\n  var x = 0;\n  var y = 0;\n  var scale = 1;\n  if (Blockly.utils.dom.containsNode(this.getCanvas(), element) ||\n      Blockly.utils.dom.containsNode(this.getBubbleCanvas(), element)) {\n    // Before the SVG canvas, scale the coordinates.\n    scale = this.scale;\n  }\n  do {\n    // Loop through this block and every parent.\n    var xy = Blockly.utils.getRelativeXY(element);\n    if (element == this.getCanvas() ||\n        element == this.getBubbleCanvas()) {\n      // After the SVG canvas, don't scale the coordinates.\n      scale = 1;\n    }\n    x += xy.x * scale;\n    y += xy.y * scale;\n    element = /** @type {!SVGElement} */ (element.parentNode);\n  } while (element && element != this.getParentSvg());\n  return new Blockly.utils.Coordinate(x, y);\n};\n\n/**\n * Return the position of the workspace origin relative to the injection div\n * origin in pixels.\n * The workspace origin is where a block would render at position (0, 0).\n * It is not the upper left corner of the workspace SVG.\n * @return {!Blockly.utils.Coordinate} Offset in pixels.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getOriginOffsetInPixels = function() {\n  return Blockly.utils.getInjectionDivXY_(this.getCanvas());\n};\n\n/**\n * Return the injection div that is a parent of this workspace.\n * Walks the DOM the first time it's called, then returns a cached value.\n * Note: We assume this is only called after the workspace has been injected\n * into the DOM.\n * @return {!Element} The first parent div with 'injectionDiv' in the name.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getInjectionDiv = function() {\n  // NB: it would be better to pass this in at createDom, but is more likely to\n  // break existing uses of Blockly.\n  if (!this.injectionDiv_) {\n    var element = this.svgGroup_;\n    while (element) {\n      var classes = element.getAttribute('class') || '';\n      if ((' ' + classes + ' ').indexOf(' injectionDiv ') != -1) {\n        this.injectionDiv_ = element;\n        break;\n      }\n      element = /** @type {!Element} */ (element.parentNode);\n    }\n  }\n  return /** @type {!Element} */ (this.injectionDiv_);\n};\n\n/**\n * Get the svg block canvas for the workspace.\n * @return {SVGElement} The svg group for the workspace.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getBlockCanvas = function() {\n  return this.svgBlockCanvas_;\n};\n\n/**\n * Save resize handler data so we can delete it later in dispose.\n * @param {!Array.<!Array>} handler Data that can be passed to unbindEvent_.\n */\nBlockly.WorkspaceSvg.prototype.setResizeHandlerWrapper = function(handler) {\n  this.resizeHandlerWrapper_ = handler;\n};\n\n/**\n * Create the workspace DOM elements.\n * @param {string=} opt_backgroundClass Either 'blocklyMainBackground' or\n *     'blocklyMutatorBackground'.\n * @return {!Element} The workspace's SVG group.\n */\nBlockly.WorkspaceSvg.prototype.createDom = function(opt_backgroundClass) {\n  /**\n   * <g class=\"blocklyWorkspace\">\n   *   <rect class=\"blocklyMainBackground\" height=\"100%\" width=\"100%\"></rect>\n   *   [Trashcan and/or flyout may go here]\n   *   <g class=\"blocklyBlockCanvas\"></g>\n   *   <g class=\"blocklyBubbleCanvas\"></g>\n   * </g>\n   * @type {SVGElement}\n   */\n  this.svgGroup_ = Blockly.utils.dom.createSvgElement('g',\n      {'class': 'blocklyWorkspace'}, null);\n\n  // Note that a <g> alone does not receive mouse events--it must have a\n  // valid target inside it.  If no background class is specified, as in the\n  // flyout, the workspace will not receive mouse events.\n  if (opt_backgroundClass) {\n    /** @type {SVGElement} */\n    this.svgBackground_ = Blockly.utils.dom.createSvgElement('rect',\n        {'height': '100%', 'width': '100%', 'class': opt_backgroundClass},\n        this.svgGroup_);\n\n    if (opt_backgroundClass == 'blocklyMainBackground' && this.grid_) {\n      this.svgBackground_.style.fill =\n          'url(#' + this.grid_.getPatternId() + ')';\n    } else {\n      this.themeManager_.subscribe(this.svgBackground_,\n          'workspaceBackgroundColour', 'fill');\n    }\n  }\n  /** @type {SVGElement} */\n  this.svgBlockCanvas_ = Blockly.utils.dom.createSvgElement('g',\n      {'class': 'blocklyBlockCanvas'}, this.svgGroup_);\n  /** @type {SVGElement} */\n  this.svgBubbleCanvas_ = Blockly.utils.dom.createSvgElement('g',\n      {'class': 'blocklyBubbleCanvas'}, this.svgGroup_);\n\n  if (!this.isFlyout) {\n    Blockly.bindEventWithChecks_(this.svgGroup_, 'mousedown', this,\n        this.onMouseDown_, false, true);\n    Blockly.bindEventWithChecks_(this.svgGroup_, 'wheel', this,\n        this.onMouseWheel_);\n  }\n\n  // Determine if there needs to be a category tree, or a simple list of\n  // blocks.  This cannot be changed later, since the UI is very different.\n  if (this.options.hasCategories) {\n    if (!Blockly.Toolbox) {\n      throw Error('Missing require for Blockly.Toolbox');\n    }\n    var ToolboxClass = Blockly.registry.getClassFromOptions(\n        Blockly.registry.Type.TOOLBOX, this.options);\n    this.toolbox_ = new ToolboxClass(this);\n  }\n  if (this.grid_) {\n    this.grid_.update(this.scale);\n  }\n  this.recordDeleteAreas();\n\n  this.markerManager_.setCursor(new Blockly.Cursor());\n  this.markerManager_.registerMarker(Blockly.navigation.MARKER_NAME,\n      new Blockly.Marker());\n\n  this.renderer_.createDom(this.svgGroup_, this.getTheme());\n  return this.svgGroup_;\n};\n\n/**\n * Dispose of this workspace.\n * Unlink from all DOM elements to prevent memory leaks.\n * @suppress {checkTypes}\n */\nBlockly.WorkspaceSvg.prototype.dispose = function() {\n  // Stop rerendering.\n  this.rendered = false;\n  if (this.currentGesture_) {\n    this.currentGesture_.cancel();\n  }\n  if (this.svgGroup_) {\n    Blockly.utils.dom.removeNode(this.svgGroup_);\n    this.svgGroup_ = null;\n  }\n  this.svgBlockCanvas_ = null;\n  this.svgBubbleCanvas_ = null;\n  if (this.toolbox_) {\n    this.toolbox_.dispose();\n    this.toolbox_ = null;\n  }\n  if (this.flyout_) {\n    this.flyout_.dispose();\n    this.flyout_ = null;\n  }\n  if (this.trashcan) {\n    this.trashcan.dispose();\n    this.trashcan = null;\n  }\n  if (this.scrollbar) {\n    this.scrollbar.dispose();\n    this.scrollbar = null;\n  }\n  if (this.zoomControls_) {\n    this.zoomControls_.dispose();\n    this.zoomControls_ = null;\n  }\n\n  if (this.audioManager_) {\n    this.audioManager_.dispose();\n    this.audioManager_ = null;\n  }\n\n  if (this.grid_) {\n    this.grid_.dispose();\n    this.grid_ = null;\n  }\n\n  this.renderer_.dispose();\n\n  if (this.markerManager_) {\n    this.markerManager_.dispose();\n    this.markerManager_ = null;\n  }\n\n  Blockly.WorkspaceSvg.superClass_.dispose.call(this);\n\n  // Dispose of theme manager after all blocks and mutators are disposed of.\n  if (this.themeManager_) {\n    this.themeManager_.unsubscribeWorkspace(this);\n    this.themeManager_.unsubscribe(this.svgBackground_);\n    if (!this.options.parentWorkspace) {\n      this.themeManager_.dispose();\n      this.themeManager_ = null;\n    }\n  }\n\n  this.connectionDBList = null;\n\n  this.toolboxCategoryCallbacks_ = null;\n  this.flyoutButtonCallbacks_ = null;\n\n  if (!this.options.parentWorkspace) {\n    // Top-most workspace.  Dispose of the div that the\n    // SVG is injected into (i.e. injectionDiv).\n    var div = this.getParentSvg().parentNode;\n    if (div) {\n      Blockly.utils.dom.removeNode(div);\n    }\n  }\n  if (this.resizeHandlerWrapper_) {\n    Blockly.unbindEvent_(this.resizeHandlerWrapper_);\n    this.resizeHandlerWrapper_ = null;\n  }\n};\n\n/**\n * Obtain a newly created block.\n * @param {?string} prototypeName Name of the language object containing\n *     type-specific functions for this block.\n * @param {string=} opt_id Optional ID.  Use this ID if provided, otherwise\n *     create a new ID.\n * @return {!Blockly.BlockSvg} The created block.\n * @override\n */\nBlockly.WorkspaceSvg.prototype.newBlock = function(prototypeName, opt_id) {\n  return new Blockly.BlockSvg(this, prototypeName, opt_id);\n};\n\n/**\n * Add a trashcan.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.addTrashcan = function() {\n  if (!Blockly.Trashcan) {\n    throw Error('Missing require for Blockly.Trashcan');\n  }\n  /** @type {Blockly.Trashcan} */\n  this.trashcan = new Blockly.Trashcan(this);\n  var svgTrashcan = this.trashcan.createDom();\n  this.svgGroup_.insertBefore(svgTrashcan, this.svgBlockCanvas_);\n};\n\n/**\n * Add zoom controls.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.addZoomControls = function() {\n  if (!Blockly.ZoomControls) {\n    throw Error('Missing require for Blockly.ZoomControls');\n  }\n  /** @type {Blockly.ZoomControls} */\n  this.zoomControls_ = new Blockly.ZoomControls(this);\n  var svgZoomControls = this.zoomControls_.createDom();\n  this.svgGroup_.appendChild(svgZoomControls);\n};\n\n/**\n * Add a flyout element in an element with the given tag name.\n * @param {string} tagName What type of tag the flyout belongs in.\n * @return {!Element} The element containing the flyout DOM.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.addFlyout = function(tagName) {\n  var workspaceOptions = new Blockly.Options(\n      /** @type {!Blockly.BlocklyOptions} */\n      ({\n        'parentWorkspace': this,\n        'rtl': this.RTL,\n        'oneBasedIndex': this.options.oneBasedIndex,\n        'horizontalLayout': this.horizontalLayout,\n        'renderer': this.options.renderer,\n        'rendererOverrides': this.options.rendererOverrides\n      }));\n  workspaceOptions.toolboxPosition = this.options.toolboxPosition;\n  if (this.horizontalLayout) {\n    if (!Blockly.HorizontalFlyout) {\n      throw Error('Missing require for Blockly.HorizontalFlyout');\n    }\n    this.flyout_ = new Blockly.HorizontalFlyout(workspaceOptions);\n  } else {\n    if (!Blockly.VerticalFlyout) {\n      throw Error('Missing require for Blockly.VerticalFlyout');\n    }\n    this.flyout_ = new Blockly.VerticalFlyout(workspaceOptions);\n  }\n  this.flyout_.autoClose = false;\n  this.flyout_.getWorkspace().setVisible(true);\n\n  // Return the element so that callers can place it in their desired\n  // spot in the DOM.  For example, mutator flyouts do not go in the same place\n  // as main workspace flyouts.\n  return this.flyout_.createDom(tagName);\n};\n\n/**\n * Getter for the flyout associated with this workspace.  This flyout may be\n * owned by either the toolbox or the workspace, depending on toolbox\n * configuration.  It will be null if there is no flyout.\n * @param {boolean=} opt_own Only return the workspace's own flyout if True.\n * @return {Blockly.Flyout} The flyout on this workspace.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getFlyout = function(opt_own) {\n  if (this.flyout_ || opt_own) {\n    return this.flyout_;\n  }\n  if (this.toolbox_) {\n    return this.toolbox_.getFlyout();\n  }\n  return null;\n};\n\n/**\n * Getter for the toolbox associated with this workspace, if one exists.\n * @return {Blockly.IToolbox} The toolbox on this workspace.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getToolbox = function() {\n  return this.toolbox_;\n};\n\n/**\n * Update items that use screen coordinate calculations\n * because something has changed (e.g. scroll position, window size).\n * @private\n */\nBlockly.WorkspaceSvg.prototype.updateScreenCalculations_ = function() {\n  this.updateInverseScreenCTM();\n  this.recordDeleteAreas();\n};\n\n/**\n * If enabled, resize the parts of the workspace that change when the workspace\n * contents (e.g. block positions) change.  This will also scroll the\n * workspace contents if needed.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.resizeContents = function() {\n  if (!this.resizesEnabled_ || !this.rendered) {\n    return;\n  }\n  if (this.scrollbar) {\n    this.scrollbar.resize();\n  }\n  this.updateInverseScreenCTM();\n};\n\n/**\n * Resize and reposition all of the workspace chrome (toolbox,\n * trash, scrollbars etc.)\n * This should be called when something changes that\n * requires recalculating dimensions and positions of the\n * trash, zoom, toolbox, etc. (e.g. window resize).\n */\nBlockly.WorkspaceSvg.prototype.resize = function() {\n  if (this.toolbox_) {\n    this.toolbox_.position();\n  }\n  if (this.flyout_) {\n    this.flyout_.position();\n  }\n  if (this.trashcan) {\n    this.trashcan.position();\n  }\n  if (this.zoomControls_) {\n    this.zoomControls_.position();\n  }\n  if (this.scrollbar) {\n    this.scrollbar.resize();\n  }\n  this.updateScreenCalculations_();\n};\n\n/**\n * Resizes and repositions workspace chrome if the page has a new\n * scroll position.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.updateScreenCalculationsIfScrolled =\n    function() {\n    /* eslint-disable indent */\n  var currScroll = Blockly.utils.getDocumentScroll();\n  if (!Blockly.utils.Coordinate.equals(\n      this.lastRecordedPageScroll_, currScroll)) {\n    this.lastRecordedPageScroll_ = currScroll;\n    this.updateScreenCalculations_();\n  }\n}; /* eslint-enable indent */\n\n/**\n * Get the SVG element that forms the drawing surface.\n * @return {!SVGGElement} SVG group element.\n */\nBlockly.WorkspaceSvg.prototype.getCanvas = function() {\n  return /** @type {!SVGGElement} */ (this.svgBlockCanvas_);\n};\n\n/**\n * Get the SVG element that forms the bubble surface.\n * @return {!SVGGElement} SVG group element.\n */\nBlockly.WorkspaceSvg.prototype.getBubbleCanvas = function() {\n  return /** @type {!SVGGElement} */ (this.svgBubbleCanvas_);\n};\n\n/**\n * Get the SVG element that contains this workspace.\n * Note: We assume this is only called after the workspace has been injected\n * into the DOM.\n * @return {!SVGElement} SVG element.\n */\nBlockly.WorkspaceSvg.prototype.getParentSvg = function() {\n  if (!this.cachedParentSvg_) {\n    var element = this.svgGroup_;\n    while (element) {\n      if (element.tagName == 'svg') {\n        this.cachedParentSvg_ = element;\n        break;\n      }\n      element = /** @type {!SVGElement} */ (element.parentNode);\n    }\n  }\n  return /** @type {!SVGElement} */ (this.cachedParentSvg_);\n};\n\n/**\n * Translate this workspace to new coordinates.\n * @param {number} x Horizontal translation, in pixel units relative to the\n *    top left of the Blockly div.\n * @param {number} y Vertical translation, in pixel units relative to the\n *    top left of the Blockly div.\n */\nBlockly.WorkspaceSvg.prototype.translate = function(x, y) {\n  if (this.useWorkspaceDragSurface_ && this.isDragSurfaceActive_) {\n    this.workspaceDragSurface_.translateSurface(x,y);\n  } else {\n    var translation = 'translate(' + x + ',' + y + ') ' +\n        'scale(' + this.scale + ')';\n    this.svgBlockCanvas_.setAttribute('transform', translation);\n    this.svgBubbleCanvas_.setAttribute('transform', translation);\n  }\n  // Now update the block drag surface if we're using one.\n  if (this.blockDragSurface_) {\n    this.blockDragSurface_.translateAndScaleGroup(x, y, this.scale);\n  }\n  // And update the grid if we're using one.\n  if (this.grid_) {\n    this.grid_.moveTo(x, y);\n  }\n};\n\n/**\n * Called at the end of a workspace drag to take the contents\n * out of the drag surface and put them back into the workspace SVG.\n * Does nothing if the workspace drag surface is not enabled.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.resetDragSurface = function() {\n  // Don't do anything if we aren't using a drag surface.\n  if (!this.useWorkspaceDragSurface_) {\n    return;\n  }\n\n  this.isDragSurfaceActive_ = false;\n\n  var trans = this.workspaceDragSurface_.getSurfaceTranslation();\n  this.workspaceDragSurface_.clearAndHide(this.svgGroup_);\n  var translation = 'translate(' + trans.x + ',' + trans.y + ') ' +\n      'scale(' + this.scale + ')';\n  this.svgBlockCanvas_.setAttribute('transform', translation);\n  this.svgBubbleCanvas_.setAttribute('transform', translation);\n};\n\n/**\n * Called at the beginning of a workspace drag to move contents of\n * the workspace to the drag surface.\n * Does nothing if the drag surface is not enabled.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.setupDragSurface = function() {\n  // Don't do anything if we aren't using a drag surface.\n  if (!this.useWorkspaceDragSurface_) {\n    return;\n  }\n\n  // This can happen if the user starts a drag, mouses up outside of the\n  // document where the mouseup listener is registered (e.g. outside of an\n  // iframe) and then moves the mouse back in the workspace.  On mobile and ff,\n  // we get the mouseup outside the frame. On chrome and safari desktop we do\n  // not.\n  if (this.isDragSurfaceActive_) {\n    return;\n  }\n\n  this.isDragSurfaceActive_ = true;\n\n  // Figure out where we want to put the canvas back.  The order\n  // in the is important because things are layered.\n  var previousElement =\n    /** @type {Element} */ (this.svgBlockCanvas_.previousSibling);\n  var width = parseInt(this.getParentSvg().getAttribute('width'), 10);\n  var height = parseInt(this.getParentSvg().getAttribute('height'), 10);\n  var coord = Blockly.utils.getRelativeXY(this.getCanvas());\n  this.workspaceDragSurface_.setContentsAndShow(this.getCanvas(),\n      this.getBubbleCanvas(), previousElement, width, height, this.scale);\n  this.workspaceDragSurface_.translateSurface(coord.x, coord.y);\n};\n\n/**\n * @return {Blockly.BlockDragSurfaceSvg} This workspace's block drag surface,\n *     if one is in use.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getBlockDragSurface = function() {\n  return this.blockDragSurface_;\n};\n\n/**\n * Returns the horizontal offset of the workspace.\n * Intended for LTR/RTL compatibility in XML.\n * @return {number} Width.\n */\nBlockly.WorkspaceSvg.prototype.getWidth = function() {\n  var metrics = this.getMetrics();\n  return metrics ? metrics.viewWidth / this.scale : 0;\n};\n\n/**\n * Toggles the visibility of the workspace.\n * Currently only intended for main workspace.\n * @param {boolean} isVisible True if workspace should be visible.\n */\nBlockly.WorkspaceSvg.prototype.setVisible = function(isVisible) {\n  this.isVisible_ = isVisible;\n  if (!this.svgGroup_) {\n    return;\n  }\n\n  // Tell the scrollbar whether its container is visible so it can\n  // tell when to hide itself.\n  if (this.scrollbar) {\n    this.scrollbar.setContainerVisible(isVisible);\n  }\n\n  // Tell the flyout whether its container is visible so it can\n  // tell when to hide itself.\n  if (this.getFlyout()) {\n    this.getFlyout().setContainerVisible(isVisible);\n  }\n\n  this.getParentSvg().style.display = isVisible ? 'block' : 'none';\n  if (this.toolbox_) {\n    // Currently does not support toolboxes in mutators.\n    this.toolbox_.setVisible(isVisible);\n  }\n  if (isVisible) {\n    var blocks = this.getAllBlocks(false);\n    // Tell each block on the workspace to mark its fields as dirty.\n    for (var i = blocks.length - 1; i >= 0; i--) {\n      blocks[i].markDirty();\n    }\n\n    this.render();\n    if (this.toolbox_) {\n      this.toolbox_.position();\n    }\n  } else {\n    Blockly.hideChaff(true);\n  }\n};\n\n/**\n * Render all blocks in workspace.\n */\nBlockly.WorkspaceSvg.prototype.render = function() {\n  // Generate list of all blocks.\n  var blocks = this.getAllBlocks(false);\n  // Render each block.\n  for (var i = blocks.length - 1; i >= 0; i--) {\n    blocks[i].render(false);\n  }\n\n  if (this.currentGesture_) {\n    var imList = this.currentGesture_.getInsertionMarkers();\n    for (var i = 0; i < imList.length; i++) {\n      imList[i].render(false);\n    }\n  }\n\n  this.markerManager_.updateMarkers();\n};\n\n/**\n * Was used back when block highlighting (for execution) and block selection\n * (for editing) were the same thing.\n * Any calls of this function can be deleted.\n * @deprecated October 2016\n */\nBlockly.WorkspaceSvg.prototype.traceOn = function() {\n  console.warn('Deprecated call to traceOn, delete this.');\n};\n\n/**\n * Highlight or unhighlight a block in the workspace.  Block highlighting is\n * often used to visually mark blocks currently being executed.\n * @param {?string} id ID of block to highlight/unhighlight,\n *   or null for no block (used to unhighlight all blocks).\n * @param {boolean=} opt_state If undefined, highlight specified block and\n * automatically unhighlight all others.  If true or false, manually\n * highlight/unhighlight the specified block.\n */\nBlockly.WorkspaceSvg.prototype.highlightBlock = function(id, opt_state) {\n  if (opt_state === undefined) {\n    // Unhighlight all blocks.\n    for (var i = 0, block; (block = this.highlightedBlocks_[i]); i++) {\n      block.setHighlighted(false);\n    }\n    this.highlightedBlocks_.length = 0;\n  }\n  // Highlight/unhighlight the specified block.\n  var block = id ? this.getBlockById(id) : null;\n  if (block) {\n    var state = (opt_state === undefined) || opt_state;\n    // Using Set here would be great, but at the cost of IE10 support.\n    if (!state) {\n      Blockly.utils.arrayRemove(this.highlightedBlocks_, block);\n    } else if (this.highlightedBlocks_.indexOf(block) == -1) {\n      this.highlightedBlocks_.push(block);\n    }\n    block.setHighlighted(state);\n  }\n};\n\n/**\n * Paste the provided block onto the workspace.\n * @param {!Element} xmlBlock XML block element.\n */\nBlockly.WorkspaceSvg.prototype.paste = function(xmlBlock) {\n  if (!this.rendered || xmlBlock.getElementsByTagName('block').length >=\n      this.remainingCapacity()) {\n    return;\n  }\n  if (this.currentGesture_) {\n    this.currentGesture_.cancel();  // Dragging while pasting?  No.\n  }\n  if (xmlBlock.tagName.toLowerCase() == 'comment') {\n    this.pasteWorkspaceComment_(xmlBlock);\n  } else {\n    this.pasteBlock_(xmlBlock);\n  }\n};\n\n/**\n * Paste the provided block onto the workspace.\n * @param {!Element} xmlBlock XML block element.\n * @private\n */\nBlockly.WorkspaceSvg.prototype.pasteBlock_ = function(xmlBlock) {\n  Blockly.Events.disable();\n  try {\n    var block = Blockly.Xml.domToBlock(xmlBlock, this);\n\n    // Handle paste for keyboard navigation\n    var markedNode = this.getMarker(Blockly.navigation.MARKER_NAME).getCurNode();\n    if (this.keyboardAccessibilityMode && markedNode &&\n        markedNode.isConnection()) {\n      var markedLocation =\n        /** @type {!Blockly.RenderedConnection} */ (markedNode.getLocation());\n      Blockly.navigation.insertBlock(/** @type {!Blockly.BlockSvg} */ (block),\n          markedLocation);\n      return;\n    }\n\n    // Move the duplicate to original position.\n    var blockX = parseInt(xmlBlock.getAttribute('x'), 10);\n    var blockY = parseInt(xmlBlock.getAttribute('y'), 10);\n    if (!isNaN(blockX) && !isNaN(blockY)) {\n      if (this.RTL) {\n        blockX = -blockX;\n      }\n      // Offset block until not clobbering another block and not in connection\n      // distance with neighbouring blocks.\n      do {\n        var collide = false;\n        var allBlocks = this.getAllBlocks(false);\n        for (var i = 0, otherBlock; (otherBlock = allBlocks[i]); i++) {\n          var otherXY = otherBlock.getRelativeToSurfaceXY();\n          if (Math.abs(blockX - otherXY.x) <= 1 &&\n              Math.abs(blockY - otherXY.y) <= 1) {\n            collide = true;\n            break;\n          }\n        }\n        if (!collide) {\n          // Check for blocks in snap range to any of its connections.\n          var connections = block.getConnections_(false);\n          for (var i = 0, connection; (connection = connections[i]); i++) {\n            var neighbour = connection.closest(Blockly.SNAP_RADIUS,\n                new Blockly.utils.Coordinate(blockX, blockY));\n            if (neighbour.connection) {\n              collide = true;\n              break;\n            }\n          }\n        }\n        if (collide) {\n          if (this.RTL) {\n            blockX -= Blockly.SNAP_RADIUS;\n          } else {\n            blockX += Blockly.SNAP_RADIUS;\n          }\n          blockY += Blockly.SNAP_RADIUS * 2;\n        }\n      } while (collide);\n      block.moveBy(blockX, blockY);\n    }\n  } finally {\n    Blockly.Events.enable();\n  }\n  if (Blockly.Events.isEnabled() && !block.isShadow()) {\n    Blockly.Events.fire(new Blockly.Events.BlockCreate(block));\n  }\n  block.select();\n};\n\n/**\n * Paste the provided comment onto the workspace.\n * @param {!Element} xmlComment XML workspace comment element.\n * @private\n * @suppress {checkTypes} Suppress checks while workspace comments are not\n *     bundled in.\n */\nBlockly.WorkspaceSvg.prototype.pasteWorkspaceComment_ = function(xmlComment) {\n  Blockly.Events.disable();\n  try {\n    var comment = Blockly.WorkspaceCommentSvg.fromXml(xmlComment, this);\n    // Move the duplicate to original position.\n    var commentX = parseInt(xmlComment.getAttribute('x'), 10);\n    var commentY = parseInt(xmlComment.getAttribute('y'), 10);\n    if (!isNaN(commentX) && !isNaN(commentY)) {\n      if (this.RTL) {\n        commentX = -commentX;\n      }\n      // Offset workspace comment.\n      // TODO (#1719): Properly offset comment such that it's not interfering\n      // with any blocks.\n      commentX += 50;\n      commentY += 50;\n      comment.moveBy(commentX, commentY);\n    }\n  } finally {\n    Blockly.Events.enable();\n  }\n  if (Blockly.Events.isEnabled()) {\n    // TODO: Fire a Workspace Comment Create event.\n  }\n  comment.select();\n};\n\n/**\n * Refresh the toolbox unless there's a drag in progress.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.refreshToolboxSelection = function() {\n  var ws = this.isFlyout ? this.targetWorkspace : this;\n  if (ws && !ws.currentGesture_ && ws.toolbox_ && ws.toolbox_.getFlyout()) {\n    ws.toolbox_.refreshSelection();\n  }\n};\n\n/**\n * Rename a variable by updating its name in the variable map.  Update the\n *     flyout to show the renamed variable immediately.\n * @param {string} id ID of the variable to rename.\n * @param {string} newName New variable name.\n */\nBlockly.WorkspaceSvg.prototype.renameVariableById = function(id, newName) {\n  Blockly.WorkspaceSvg.superClass_.renameVariableById.call(this, id, newName);\n  this.refreshToolboxSelection();\n};\n\n/**\n * Delete a variable by the passed in ID.   Update the flyout to show\n *     immediately that the variable is deleted.\n * @param {string} id ID of variable to delete.\n */\nBlockly.WorkspaceSvg.prototype.deleteVariableById = function(id) {\n  Blockly.WorkspaceSvg.superClass_.deleteVariableById.call(this, id);\n  this.refreshToolboxSelection();\n};\n\n/**\n * Create a new variable with the given name.  Update the flyout to show the\n *     new variable immediately.\n * @param {string} name The new variable's name.\n * @param {?string=} opt_type The type of the variable like 'int' or 'string'.\n *     Does not need to be unique. Field_variable can filter variables based on\n *     their type. This will default to '' which is a specific type.\n * @param {?string=} opt_id The unique ID of the variable. This will default to\n *     a UUID.\n * @return {!Blockly.VariableModel} The newly created variable.\n */\nBlockly.WorkspaceSvg.prototype.createVariable = function(name,\n    opt_type, opt_id) {\n  var newVar = Blockly.WorkspaceSvg.superClass_.createVariable.call(\n      this, name, opt_type, opt_id);\n  this.refreshToolboxSelection();\n  return newVar;\n};\n\n/**\n * Make a list of all the delete areas for this workspace.\n */\nBlockly.WorkspaceSvg.prototype.recordDeleteAreas = function() {\n  if (this.trashcan && this.svgGroup_.parentNode) {\n    this.deleteAreaTrash_ = this.trashcan.getClientRect();\n  } else {\n    this.deleteAreaTrash_ = null;\n  }\n  if (this.flyout_) {\n    this.deleteAreaToolbox_ = this.flyout_.getClientRect();\n  } else if (this.toolbox_ && typeof this.toolbox_.getClientRect == 'function') {\n    this.deleteAreaToolbox_ = this.toolbox_.getClientRect();\n  } else {\n    this.deleteAreaToolbox_ = null;\n  }\n};\n\n/**\n * Is the mouse event over a delete area (toolbox or non-closing flyout)?\n * @param {!Event} e Mouse move event.\n * @return {?number} Null if not over a delete area, or an enum representing\n *     which delete area the event is over.\n */\nBlockly.WorkspaceSvg.prototype.isDeleteArea = function(e) {\n  if (this.deleteAreaTrash_ &&\n      this.deleteAreaTrash_.contains(e.clientX, e.clientY)) {\n    return Blockly.DELETE_AREA_TRASH;\n  }\n  if (this.deleteAreaToolbox_ &&\n      this.deleteAreaToolbox_.contains(e.clientX, e.clientY)) {\n    return Blockly.DELETE_AREA_TOOLBOX;\n  }\n  return Blockly.DELETE_AREA_NONE;\n};\n\n/**\n * Handle a mouse-down on SVG drawing surface.\n * @param {!Event} e Mouse down event.\n * @private\n */\nBlockly.WorkspaceSvg.prototype.onMouseDown_ = function(e) {\n  var gesture = this.getGesture(e);\n  if (gesture) {\n    gesture.handleWsStart(e, this);\n  }\n};\n\n/**\n * Start tracking a drag of an object on this workspace.\n * @param {!Event} e Mouse down event.\n * @param {!Blockly.utils.Coordinate} xy Starting location of object.\n */\nBlockly.WorkspaceSvg.prototype.startDrag = function(e, xy) {\n  // Record the starting offset between the bubble's location and the mouse.\n  var point = Blockly.utils.mouseToSvg(e, this.getParentSvg(),\n      this.getInverseScreenCTM());\n  // Fix scale of mouse event.\n  point.x /= this.scale;\n  point.y /= this.scale;\n  this.dragDeltaXY_ = Blockly.utils.Coordinate.difference(xy, point);\n};\n\n/**\n * Track a drag of an object on this workspace.\n * @param {!Event} e Mouse move event.\n * @return {!Blockly.utils.Coordinate} New location of object.\n */\nBlockly.WorkspaceSvg.prototype.moveDrag = function(e) {\n  var point = Blockly.utils.mouseToSvg(e, this.getParentSvg(),\n      this.getInverseScreenCTM());\n  // Fix scale of mouse event.\n  point.x /= this.scale;\n  point.y /= this.scale;\n  return Blockly.utils.Coordinate.sum(\n      /** @type {!Blockly.utils.Coordinate} */ (this.dragDeltaXY_), point);\n};\n\n/**\n * Is the user currently dragging a block or scrolling the flyout/workspace?\n * @return {boolean} True if currently dragging or scrolling.\n */\nBlockly.WorkspaceSvg.prototype.isDragging = function() {\n  return this.currentGesture_ != null && this.currentGesture_.isDragging();\n};\n\n/**\n * Is this workspace draggable?\n * @return {boolean} True if this workspace may be dragged.\n */\nBlockly.WorkspaceSvg.prototype.isDraggable = function() {\n  return this.options.moveOptions && this.options.moveOptions.drag;\n};\n\n/**\n * Should the workspace have bounded content? Used to tell if the\n * workspace's content should be sized so that it can move (bounded) or not\n * (exact sizing).\n * @return {boolean} True if the workspace should be bounded, false otherwise.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.isContentBounded = function() {\n  return (this.options.moveOptions && this.options.moveOptions.scrollbars) ||\n      (this.options.moveOptions && this.options.moveOptions.wheel) ||\n      (this.options.moveOptions && this.options.moveOptions.drag) ||\n      (this.options.zoomOptions && this.options.zoomOptions.controls) ||\n      (this.options.zoomOptions && this.options.zoomOptions.wheel) ||\n      (this.options.zoomOptions && this.options.zoomOptions.pinch);\n};\n\n/**\n * Is this workspace movable?\n *\n * This means the user can reposition the X Y coordinates of the workspace\n * through input. This can be through scrollbars, scroll wheel, dragging, or\n * through zooming with the scroll wheel or pinch (since the zoom is centered on\n * the mouse position). This does not include zooming with the zoom controls\n * since the X Y coordinates are decided programmatically.\n * @return {boolean} True if the workspace is movable, false otherwise.\n */\nBlockly.WorkspaceSvg.prototype.isMovable = function() {\n  return (this.options.moveOptions && this.options.moveOptions.scrollbars) ||\n      (this.options.moveOptions && this.options.moveOptions.wheel) ||\n      (this.options.moveOptions && this.options.moveOptions.drag) ||\n      (this.options.zoomOptions && this.options.zoomOptions.wheel) ||\n      (this.options.zoomOptions && this.options.zoomOptions.pinch);\n};\n\n/**\n * Handle a mouse-wheel on SVG drawing surface.\n * @param {!Event} e Mouse wheel event.\n * @private\n */\nBlockly.WorkspaceSvg.prototype.onMouseWheel_ = function(e) {\n  // Don't scroll or zoom anything if drag is in progress.\n  if (Blockly.Gesture.inProgress()) {\n    e.preventDefault();\n    e.stopPropagation();\n    return;\n  }\n  var canWheelZoom = this.options.zoomOptions && this.options.zoomOptions.wheel;\n  var canWheelMove = this.options.moveOptions && this.options.moveOptions.wheel;\n  if (!canWheelZoom && !canWheelMove) {\n    return;\n  }\n\n  var scrollDelta = Blockly.utils.getScrollDeltaPixels(e);\n  if (canWheelZoom && (e.ctrlKey || !canWheelMove)) {\n    // Zoom.\n    // The vertical scroll distance that corresponds to a click of a zoom\n    // button.\n    var PIXELS_PER_ZOOM_STEP = 50;\n    var delta = -scrollDelta.y / PIXELS_PER_ZOOM_STEP;\n    var position = Blockly.utils.mouseToSvg(e, this.getParentSvg(),\n        this.getInverseScreenCTM());\n    this.zoom(position.x, position.y, delta);\n  } else {\n    // Scroll.\n    var x = this.scrollX - scrollDelta.x;\n    var y = this.scrollY - scrollDelta.y;\n\n    if (e.shiftKey && !scrollDelta.x) {\n      // Scroll horizontally (based on vertical scroll delta).\n      // This is needed as for some browser/system combinations which do not\n      // set deltaX.\n      x = this.scrollX - scrollDelta.y;\n      y = this.scrollY; // Don't scroll vertically\n    }\n    this.scroll(x, y);\n  }\n  e.preventDefault();\n};\n\n/**\n * Calculate the bounding box for the blocks on the workspace.\n * Coordinate system: workspace coordinates.\n *\n * @return {!Blockly.utils.Rect} Contains the position and size of the\n *   bounding box containing the blocks on the workspace.\n */\nBlockly.WorkspaceSvg.prototype.getBlocksBoundingBox = function() {\n  var topElements = this.getTopBoundedElements();\n  // There are no blocks, return empty rectangle.\n  if (!topElements.length) {\n    return new Blockly.utils.Rect(0, 0, 0, 0);\n  }\n\n  // Initialize boundary using the first block.\n  var boundary = topElements[0].getBoundingRectangle();\n\n  // Start at 1 since the 0th block was used for initialization.\n  for (var i = 1; i < topElements.length; i++) {\n    var blockBoundary = topElements[i].getBoundingRectangle();\n    if (blockBoundary.top < boundary.top) {\n      boundary.top = blockBoundary.top;\n    }\n    if (blockBoundary.bottom > boundary.bottom) {\n      boundary.bottom = blockBoundary.bottom;\n    }\n    if (blockBoundary.left < boundary.left) {\n      boundary.left = blockBoundary.left;\n    }\n    if (blockBoundary.right > boundary.right) {\n      boundary.right = blockBoundary.right;\n    }\n  }\n  return boundary;\n};\n\n/**\n * Clean up the workspace by ordering all the blocks in a column.\n */\nBlockly.WorkspaceSvg.prototype.cleanUp = function() {\n  this.setResizesEnabled(false);\n  Blockly.Events.setGroup(true);\n  var topBlocks = this.getTopBlocks(true);\n  var cursorY = 0;\n  for (var i = 0, block; (block = topBlocks[i]); i++) {\n    if (!block.isMovable()) {\n      continue;\n    }\n    var xy = block.getRelativeToSurfaceXY();\n    block.moveBy(-xy.x, cursorY - xy.y);\n    block.snapToGrid();\n    cursorY = block.getRelativeToSurfaceXY().y +\n        block.getHeightWidth().height +\n        this.renderer_.getConstants().MIN_BLOCK_HEIGHT;\n  }\n  Blockly.Events.setGroup(false);\n  this.setResizesEnabled(true);\n};\n\n/**\n * Show the context menu for the workspace.\n * @param {!Event} e Mouse event.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.showContextMenu = function(e) {\n  if (this.options.readOnly || this.isFlyout) {\n    return;\n  }\n  var menuOptions = [];\n  var topBlocks = this.getTopBlocks(true);\n  var eventGroup = Blockly.utils.genUid();\n  var ws = this;\n\n  // Options to undo/redo previous action.\n  var undoOption = {};\n  undoOption.text = Blockly.Msg['UNDO'];\n  undoOption.enabled = this.undoStack_.length > 0;\n  undoOption.callback = this.undo.bind(this, false);\n  menuOptions.push(undoOption);\n  var redoOption = {};\n  redoOption.text = Blockly.Msg['REDO'];\n  redoOption.enabled = this.redoStack_.length > 0;\n  redoOption.callback = this.undo.bind(this, true);\n  menuOptions.push(redoOption);\n\n  // Option to clean up blocks.\n  if (this.isMovable()) {\n    var cleanOption = {};\n    cleanOption.text = Blockly.Msg['CLEAN_UP'];\n    cleanOption.enabled = topBlocks.length > 1;\n    cleanOption.callback = this.cleanUp.bind(this);\n    menuOptions.push(cleanOption);\n  }\n\n  // Add a little animation to collapsing and expanding.\n  var DELAY = 10;\n  if (this.options.collapse) {\n    var hasCollapsedBlocks = false;\n    var hasExpandedBlocks = false;\n    for (var i = 0; i < topBlocks.length; i++) {\n      var block = topBlocks[i];\n      while (block) {\n        if (block.isCollapsed()) {\n          hasCollapsedBlocks = true;\n        } else {\n          hasExpandedBlocks = true;\n        }\n        block = block.getNextBlock();\n      }\n    }\n\n    /**\n     * Option to collapse or expand top blocks.\n     * @param {boolean} shouldCollapse Whether a block should collapse.\n     * @private\n     */\n    var toggleOption = function(shouldCollapse) {\n      var ms = 0;\n      for (var i = 0; i < topBlocks.length; i++) {\n        var block = topBlocks[i];\n        while (block) {\n          setTimeout(block.setCollapsed.bind(block, shouldCollapse), ms);\n          block = block.getNextBlock();\n          ms += DELAY;\n        }\n      }\n    };\n\n    // Option to collapse top blocks.\n    var collapseOption = {enabled: hasExpandedBlocks};\n    collapseOption.text = Blockly.Msg['COLLAPSE_ALL'];\n    collapseOption.callback = function() {\n      toggleOption(true);\n    };\n    menuOptions.push(collapseOption);\n\n    // Option to expand top blocks.\n    var expandOption = {enabled: hasCollapsedBlocks};\n    expandOption.text = Blockly.Msg['EXPAND_ALL'];\n    expandOption.callback = function() {\n      toggleOption(false);\n    };\n    menuOptions.push(expandOption);\n  }\n\n  // Option to delete all blocks.\n  // Count the number of blocks that are deletable.\n  var deleteList = [];\n  function addDeletableBlocks(block) {\n    if (block.isDeletable()) {\n      deleteList = deleteList.concat(block.getDescendants(false));\n    } else {\n      var children = block.getChildren(false);\n      for (var i = 0; i < children.length; i++) {\n        addDeletableBlocks(children[i]);\n      }\n    }\n  }\n  for (var i = 0; i < topBlocks.length; i++) {\n    addDeletableBlocks(topBlocks[i]);\n  }\n\n  function deleteNext() {\n    Blockly.Events.setGroup(eventGroup);\n    var block = deleteList.shift();\n    if (block) {\n      if (block.workspace) {\n        block.dispose(false, true);\n        setTimeout(deleteNext, DELAY);\n      } else {\n        deleteNext();\n      }\n    }\n    Blockly.Events.setGroup(false);\n  }\n\n  var deleteOption = {\n    text: deleteList.length == 1 ? Blockly.Msg['DELETE_BLOCK'] :\n        Blockly.Msg['DELETE_X_BLOCKS'].replace('%1', String(deleteList.length)),\n    enabled: deleteList.length > 0,\n    callback: function() {\n      if (ws.currentGesture_) {\n        ws.currentGesture_.cancel();\n      }\n      if (deleteList.length < 2 ) {\n        deleteNext();\n      } else {\n        Blockly.confirm(\n            Blockly.Msg['DELETE_ALL_BLOCKS'].replace('%1', deleteList.length),\n            function(ok) {\n              if (ok) {\n                deleteNext();\n              }\n            });\n      }\n    }\n  };\n  menuOptions.push(deleteOption);\n\n  // Allow the developer to add or modify menuOptions.\n  if (this.configureContextMenu) {\n    this.configureContextMenu(menuOptions, e);\n  }\n\n  Blockly.ContextMenu.show(e, menuOptions, this.RTL);\n};\n\n/**\n * Modify the block tree on the existing toolbox.\n * @param {Blockly.utils.toolbox.ToolboxDefinition|string} toolboxDef\n *    DOM tree of toolbox contents, string of toolbox contents, or array of JSON\n *    representing toolbox contents.\n */\nBlockly.WorkspaceSvg.prototype.updateToolbox = function(toolboxDef) {\n  if (!Array.isArray(toolboxDef)) {\n    toolboxDef = Blockly.Options.parseToolboxTree(toolboxDef);\n  }\n  toolboxDef = Blockly.utils.toolbox.convertToolboxToJSON(toolboxDef);\n  if (!toolboxDef) {\n    if (this.options.languageTree) {\n      throw Error('Can\\'t nullify an existing toolbox.');\n    }\n    return;  // No change (null to null).\n  }\n  if (!this.options.languageTree) {\n    throw Error('Existing toolbox is null.  Can\\'t create new toolbox.');\n  }\n  if (Blockly.utils.toolbox.hasCategories(toolboxDef)) {\n    if (!this.toolbox_) {\n      throw Error('Existing toolbox has no categories.  Can\\'t change mode.');\n    }\n    this.options.languageTree = toolboxDef;\n    this.toolbox_.render(toolboxDef);\n  } else {\n    if (!this.flyout_) {\n      throw Error('Existing toolbox has categories.  Can\\'t change mode.');\n    }\n    this.options.languageTree = toolboxDef;\n    this.flyout_.show(toolboxDef);\n  }\n};\n\n/**\n * Mark this workspace as the currently focused main workspace.\n */\nBlockly.WorkspaceSvg.prototype.markFocused = function() {\n  if (this.options.parentWorkspace) {\n    this.options.parentWorkspace.markFocused();\n  } else {\n    Blockly.mainWorkspace = this;\n    // We call e.preventDefault in many event handlers which means we\n    // need to explicitly grab focus (e.g from a textarea) because\n    // the browser will not do it for us.  How to do this is browser dependent.\n    this.setBrowserFocus();\n  }\n};\n\n/**\n * Set the workspace to have focus in the browser.\n * @private\n */\nBlockly.WorkspaceSvg.prototype.setBrowserFocus = function() {\n  // Blur whatever was focused since explicitly grabbing focus below does not\n  // work in Edge.\n  if (document.activeElement) {\n    document.activeElement.blur();\n  }\n  try {\n    // Focus the workspace SVG - this is for Chrome and Firefox.\n    this.getParentSvg().focus({preventScroll:true});\n  } catch (e) {\n    // IE and Edge do not support focus on SVG elements. When that fails\n    // above, get the injectionDiv (the workspace's parent) and focus that\n    // instead.  This doesn't work in Chrome.\n    try {\n      // In IE11, use setActive (which is IE only) so the page doesn't scroll\n      // to the workspace gaining focus.\n      this.getParentSvg().parentNode.setActive();\n    } catch (e) {\n      // setActive support was discontinued in Edge so when that fails, call\n      // focus instead.\n      this.getParentSvg().parentNode.focus({preventScroll:true});\n    }\n  }\n};\n\n/**\n * Zooms the workspace in or out relative to/centered on the given (x, y)\n * coordinate.\n * @param {number} x X coordinate of center, in pixel units relative to the\n *     top-left corner of the parentSVG.\n * @param {number} y Y coordinate of center, in pixel units relative to the\n *     top-left corner of the parentSVG.\n * @param {number} amount Amount of zooming. The formula for the new scale\n *     is newScale = currentScale * (scaleSpeed^amount). scaleSpeed is set in\n *     the workspace options. Negative amount values zoom out, and positive\n *     amount values zoom in.\n */\nBlockly.WorkspaceSvg.prototype.zoom = function(x, y, amount) {\n  // Scale factor.\n  var speed = this.options.zoomOptions.scaleSpeed;\n  var scaleChange = Math.pow(speed, amount);\n  var newScale = this.scale * scaleChange;\n  if (this.scale == newScale) {\n    return;  // No change in zoom.\n  }\n\n  // Clamp scale within valid range.\n  if (newScale > this.options.zoomOptions.maxScale) {\n    scaleChange = this.options.zoomOptions.maxScale / this.scale;\n  } else if (newScale < this.options.zoomOptions.minScale) {\n    scaleChange = this.options.zoomOptions.minScale / this.scale;\n  }\n\n  // Transform the x/y coordinates from the parentSVG's space into the\n  // canvas' space, so that they are in workspace units relative to the top\n  // left of the visible portion of the workspace.\n  var matrix = this.getCanvas().getCTM();\n  var center = this.getParentSvg().createSVGPoint();\n  center.x = x;\n  center.y = y;\n  center = center.matrixTransform(matrix.inverse());\n  x = center.x;\n  y = center.y;\n\n  // Find the new scrollX/scrollY so that the center remains in the same\n  // position (relative to the center) after we zoom.\n  // newScale and matrix.a should be identical (within a rounding error).\n  matrix = matrix.translate(x * (1 - scaleChange), y * (1 - scaleChange))\n      .scale(scaleChange);\n  // scrollX and scrollY are in pixels.\n  // The scrollX and scrollY still need to have absoluteLeft and absoluteTop\n  // subtracted from them, but we'll leave that for setScale so that they're\n  // correctly updated for the new flyout size if we have a simple toolbox.\n  this.scrollX = matrix.e;\n  this.scrollY = matrix.f;\n  this.setScale(newScale);\n};\n\n/**\n * Zooming the blocks centered in the center of view with zooming in or out.\n * @param {number} type Type of zooming (-1 zooming out and 1 zooming in).\n */\nBlockly.WorkspaceSvg.prototype.zoomCenter = function(type) {\n  var metrics = this.getMetrics();\n  if (this.flyout_) {\n    // If you want blocks in the center of the view (visible portion of the\n    // workspace) to stay centered when the size of the view decreases (i.e.\n    // when the size of the flyout increases) you need the center of the\n    // *blockly div* to stay in the same pixel-position.\n    // Note: This only works because of how scrollCenter positions blocks.\n    var x = metrics.svgWidth ? metrics.svgWidth / 2 : 0;\n    var y = metrics.svgHeight ? metrics.svgHeight / 2 : 0;\n  } else {\n    var x = (metrics.viewWidth / 2) + metrics.absoluteLeft;\n    var y = (metrics.viewHeight / 2) + metrics.absoluteTop;\n  }\n  this.zoom(x, y, type);\n};\n\n/**\n * Zoom the blocks to fit in the workspace if possible.\n */\nBlockly.WorkspaceSvg.prototype.zoomToFit = function() {\n  if (!this.isMovable()) {\n    console.warn('Tried to move a non-movable workspace. This could result' +\n        ' in blocks becoming inaccessible.');\n    return;\n  }\n\n  var metrics = this.getMetrics();\n  var workspaceWidth = metrics.viewWidth;\n  var workspaceHeight = metrics.viewHeight;\n  var blocksBox = this.getBlocksBoundingBox();\n  var blocksWidth = blocksBox.right - blocksBox.left;\n  var blocksHeight = blocksBox.bottom - blocksBox.top;\n  if (!blocksWidth) {\n    return;  // Prevents zooming to infinity.\n  }\n  if (this.flyout_) {\n    // We have to add the flyout size to both the workspace size and the\n    // block size because the blocks we want to resize include the blocks in\n    // the flyout, and the area we want to fit them includes the portion of\n    // the workspace that is behind the flyout.\n    if (this.horizontalLayout) {\n      workspaceHeight += this.flyout_.getHeight();\n      // Convert from pixels to workspace coordinates.\n      blocksHeight += this.flyout_.getHeight() / this.scale;\n    } else {\n      workspaceWidth += this.flyout_.getWidth();\n      // Convert from pixels to workspace coordinates.\n      blocksWidth += this.flyout_.getWidth() / this.scale;\n    }\n  }\n\n  // Scale Units: (pixels / workspaceUnit)\n  var ratioX = workspaceWidth / blocksWidth;\n  var ratioY = workspaceHeight / blocksHeight;\n  this.setScale(Math.min(ratioX, ratioY));\n  this.scrollCenter();\n};\n\n/**\n * Add a transition class to the block and bubble canvas, to animate any\n * transform changes.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.beginCanvasTransition = function() {\n  Blockly.utils.dom.addClass(\n      /** @type {!SVGElement} */ (this.svgBlockCanvas_),\n      'blocklyCanvasTransitioning');\n  Blockly.utils.dom.addClass(\n      /** @type {!SVGElement} */ (this.svgBubbleCanvas_),\n      'blocklyCanvasTransitioning');\n};\n\n/**\n * Remove transition class from the block and bubble canvas.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.endCanvasTransition = function() {\n  Blockly.utils.dom.removeClass(\n      /** @type {!SVGElement} */ (this.svgBlockCanvas_),\n      'blocklyCanvasTransitioning');\n  Blockly.utils.dom.removeClass(\n      /** @type {!SVGElement} */ (this.svgBubbleCanvas_),\n      'blocklyCanvasTransitioning');\n};\n\n/**\n * Center the workspace.\n */\nBlockly.WorkspaceSvg.prototype.scrollCenter = function() {\n  if (!this.isMovable()) {\n    console.warn('Tried to move a non-movable workspace. This could result' +\n        ' in blocks becoming inaccessible.');\n    return;\n  }\n\n  var metrics = this.getMetrics();\n  var x = (metrics.contentWidth - metrics.viewWidth) / 2;\n  var y = (metrics.contentHeight - metrics.viewHeight) / 2;\n\n  // Convert from workspace directions to canvas directions.\n  x = -x - metrics.contentLeft;\n  y = -y - metrics.contentTop;\n  this.scroll(x, y);\n};\n\n/**\n * Scroll the workspace to center on the given block.\n * @param {?string} id ID of block center on.\n * @public\n */\nBlockly.WorkspaceSvg.prototype.centerOnBlock = function(id) {\n  if (!this.isMovable()) {\n    console.warn('Tried to move a non-movable workspace. This could result' +\n        ' in blocks becoming inaccessible.');\n    return;\n  }\n\n  var block = id ? this.getBlockById(id) : null;\n  if (!block) {\n    return;\n  }\n\n  // XY is in workspace coordinates.\n  var xy = block.getRelativeToSurfaceXY();\n  // Height/width is in workspace units.\n  var heightWidth = block.getHeightWidth();\n\n  // Find the enter of the block in workspace units.\n  var blockCenterY = xy.y + heightWidth.height / 2;\n\n  // In RTL the block's position is the top right of the block, not top left.\n  var multiplier = this.RTL ? -1 : 1;\n  var blockCenterX = xy.x + (multiplier * heightWidth.width / 2);\n\n  // Workspace scale, used to convert from workspace coordinates to pixels.\n  var scale = this.scale;\n\n  // Center of block in pixels, relative to workspace origin (center 0,0).\n  // Scrolling to here would put the block in the top-left corner of the\n  // visible workspace.\n  var pixelX = blockCenterX * scale;\n  var pixelY = blockCenterY * scale;\n\n  var metrics = this.getMetrics();\n\n  // viewHeight and viewWidth are in pixels.\n  var halfViewWidth = metrics.viewWidth / 2;\n  var halfViewHeight = metrics.viewHeight / 2;\n\n  // Put the block in the center of the visible workspace instead.\n  var scrollToCenterX = pixelX - halfViewWidth;\n  var scrollToCenterY = pixelY - halfViewHeight;\n\n  // Convert from workspace directions to canvas directions.\n  var x = -scrollToCenterX;\n  var y = -scrollToCenterY;\n\n  this.scroll(x, y);\n};\n\n/**\n * Set the workspace's zoom factor.\n * @param {number} newScale Zoom factor. Units: (pixels / workspaceUnit).\n */\nBlockly.WorkspaceSvg.prototype.setScale = function(newScale) {\n  if (this.options.zoomOptions.maxScale &&\n      newScale > this.options.zoomOptions.maxScale) {\n    newScale = this.options.zoomOptions.maxScale;\n  } else if (this.options.zoomOptions.minScale &&\n      newScale < this.options.zoomOptions.minScale) {\n    newScale = this.options.zoomOptions.minScale;\n  }\n  this.scale = newScale;\n\n  Blockly.hideChaff(false);\n  if (this.flyout_) {\n    // No toolbox, resize flyout.\n    this.flyout_.reflow();\n    this.recordDeleteAreas();\n  }\n  if (this.grid_) {\n    this.grid_.update(this.scale);\n  }\n\n  // We call scroll instead of scrollbar.resize() so that we can center the\n  // zoom correctly without scrollbars, but scroll does not resize the\n  // scrollbars so we have to call resizeView/resizeContent as well.\n  var metrics = this.getMetrics();\n  // The scroll values and the view values are additive inverses of\n  // each other, so when we subtract from one we have to add to the other.\n  this.scrollX -= metrics.absoluteLeft;\n  this.scrollY -= metrics.absoluteTop;\n  metrics.viewLeft += metrics.absoluteLeft;\n  metrics.viewTop += metrics.absoluteTop;\n\n  this.scroll(this.scrollX, this.scrollY);\n  if (this.scrollbar) {\n    if (this.flyout_) {\n      this.scrollbar.hScroll.resizeViewHorizontal(metrics);\n      this.scrollbar.vScroll.resizeViewVertical(metrics);\n    } else {\n      this.scrollbar.hScroll.resizeContentHorizontal(metrics);\n      this.scrollbar.vScroll.resizeContentVertical(metrics);\n    }\n  }\n};\n\n\n/**\n * Get the workspace's zoom factor.  If the workspace has a parent, we call into\n * the parent to get the workspace scale.\n * @return {number} The workspace zoom factor. Units: (pixels / workspaceUnit).\n */\nBlockly.WorkspaceSvg.prototype.getScale = function() {\n  if (this.options.parentWorkspace) {\n    return this.options.parentWorkspace.getScale();\n  }\n  return this.scale;\n};\n\n/**\n * Scroll the workspace to a specified offset (in pixels), keeping in the\n * workspace bounds. See comment on workspaceSvg.scrollX for more detail on\n * the meaning of these values.\n * @param {number} x Target X to scroll to.\n * @param {number} y Target Y to scroll to.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.scroll = function(x, y) {\n  Blockly.hideChaff(/* opt_allowToolbox */ true);\n\n  // Keep scrolling within the bounds of the content.\n  var metrics = this.getMetrics();\n  // This is the offset of the top-left corner of the view from the\n  // workspace origin when the view is \"seeing\" the bottom-right corner of\n  // the content.\n  var maxOffsetOfViewFromOriginX = metrics.contentWidth + metrics.contentLeft -\n      metrics.viewWidth;\n  var maxOffsetOfViewFromOriginY = metrics.contentHeight + metrics.contentTop -\n      metrics.viewHeight;\n  // Canvas coordinates (aka scroll coordinates) have inverse directionality\n  // to workspace coordinates so we have to inverse them.\n  x = Math.min(x, -metrics.contentLeft);\n  y = Math.min(y, -metrics.contentTop);\n  x = Math.max(x, -maxOffsetOfViewFromOriginX);\n  y = Math.max(y, -maxOffsetOfViewFromOriginY);\n\n  this.scrollX = x;\n  this.scrollY = y;\n  if (this.scrollbar) {\n    // The content position (displacement from the content's top-left to the\n    // origin) plus the scroll position (displacement from the view's top-left\n    // to the origin) gives us the distance from the view's top-left to the\n    // content's top-left. Then we negate this so we get the displacement from\n    // the content's top-left to the view's top-left, matching the\n    // directionality of the scrollbars.\n\n    this.scrollbar.hScroll.setHandlePosition(-(x + metrics.contentLeft) *\n        this.scrollbar.hScroll.ratio);\n    this.scrollbar.vScroll.setHandlePosition(-(y + metrics.contentTop) *\n        this.scrollbar.vScroll.ratio);\n  }\n  // We have to shift the translation so that when the canvas is at 0, 0 the\n  // workspace origin is not underneath the toolbox.\n  x += metrics.absoluteLeft;\n  y += metrics.absoluteTop;\n  this.translate(x, y);\n};\n\n/**\n * Get the dimensions of the given workspace component, in pixels.\n * @param {Blockly.IToolbox|Blockly.Flyout} elem The element to get the\n *     dimensions of, or null.  It should be a toolbox or flyout, and should\n *     implement getWidth() and getHeight().\n * @return {!Blockly.utils.Size} An object containing width and height\n *     attributes, which will both be zero if elem did not exist.\n * @private\n */\nBlockly.WorkspaceSvg.getDimensionsPx_ = function(elem) {\n  var width = 0;\n  var height = 0;\n  if (elem) {\n    width = elem.getWidth();\n    height = elem.getHeight();\n  }\n  return new Blockly.utils.Size(width, height);\n};\n\n/**\n * Get the content dimensions of the given workspace, taking into account\n * whether or not it is scrollable and what size the workspace div is on screen.\n * @param {!Blockly.WorkspaceSvg} ws The workspace to measure.\n * @param {!Object} svgSize An object containing height and width attributes in\n *     CSS pixels.  Together they specify the size of the visible workspace, not\n *     including areas covered up by the toolbox.\n * @return {!Object} The dimensions of the contents of the given workspace, as\n *     an object containing at least\n *     - height and width in pixels\n *     - left and top in pixels relative to the workspace origin.\n * @private\n */\nBlockly.WorkspaceSvg.getContentDimensions_ = function(ws, svgSize) {\n  if (ws.isContentBounded()) {\n    return Blockly.WorkspaceSvg.getContentDimensionsBounded_(ws, svgSize);\n  } else {\n    return Blockly.WorkspaceSvg.getContentDimensionsExact_(ws);\n  }\n};\n\n/**\n * Get the bounding box for all workspace contents, in pixels.\n * @param {!Blockly.WorkspaceSvg} ws The workspace to inspect.\n * @return {!Object} The dimensions of the contents of the given workspace, as\n *     an object containing\n *     - height and width in pixels\n *     - left, right, top and bottom in pixels relative to the workspace origin.\n * @private\n */\nBlockly.WorkspaceSvg.getContentDimensionsExact_ = function(ws) {\n  // Block bounding box is in workspace coordinates.\n  var blockBox = ws.getBlocksBoundingBox();\n  var scale = ws.scale;\n\n  // Convert to pixels.\n  var top = blockBox.top * scale;\n  var bottom = blockBox.bottom * scale;\n  var left = blockBox.left * scale;\n  var right = blockBox.right * scale;\n\n  return {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: right - left,\n    height: bottom - top\n  };\n};\n\n/**\n * Calculate the size of a scrollable workspace, which should include room for a\n * half screen border around the workspace contents.\n * @param {!Blockly.WorkspaceSvg} ws The workspace to measure.\n * @param {!Object} svgSize An object containing height and width attributes in\n *     CSS pixels.  Together they specify the size of the visible workspace, not\n *     including areas covered up by the toolbox.\n * @return {!Object} The dimensions of the contents of the given workspace, as\n *     an object containing\n *     - height and width in pixels\n *     - left and top in pixels relative to the workspace origin.\n * @private\n */\nBlockly.WorkspaceSvg.getContentDimensionsBounded_ = function(ws, svgSize) {\n  var content = Blockly.WorkspaceSvg.getContentDimensionsExact_(ws);\n\n  // View height and width are both in pixels, and are the same as the SVG size.\n  var viewWidth = svgSize.width;\n  var viewHeight = svgSize.height;\n  var halfWidth = viewWidth / 2;\n  var halfHeight = viewHeight / 2;\n\n  // Add a border around the content that is at least half a screen wide.\n  // Ensure border is wide enough that blocks can scroll over entire screen.\n  var left = Math.min(content.left - halfWidth, content.right - viewWidth);\n  var right = Math.max(content.right + halfWidth, content.left + viewWidth);\n\n  var top = Math.min(content.top - halfHeight, content.bottom - viewHeight);\n  var bottom = Math.max(content.bottom + halfHeight, content.top + viewHeight);\n\n  var dimensions = {\n    left: left,\n    top: top,\n    height: bottom - top,\n    width: right - left\n  };\n  return dimensions;\n};\n\n/**\n * Return an object with all the metrics required to size scrollbars for a\n * top level workspace.  The following properties are computed:\n * Coordinate system: pixel coordinates, -left, -up, +right, +down\n * .viewHeight: Height of the visible portion of the workspace.\n * .viewWidth: Width of the visible portion of the workspace.\n * .contentHeight: Height of the content.\n * .contentWidth: Width of the content.\n * .svgHeight: Height of the Blockly div (the view + the toolbox,\n *    simple or otherwise),\n * .svgWidth: Width of the Blockly div (the view + the toolbox,\n *    simple or otherwise),\n * .viewTop: Top-edge of the visible portion of the workspace, relative to\n *     the workspace origin.\n * .viewLeft: Left-edge of the visible portion of the workspace, relative to\n *     the workspace origin.\n * .contentTop: Top-edge of the content, relative to the workspace origin.\n * .contentLeft: Left-edge of the content relative to the workspace origin.\n * .absoluteTop: Top-edge of the visible portion of the workspace, relative\n *     to the blocklyDiv.\n * .absoluteLeft: Left-edge of the visible portion of the workspace, relative\n *     to the blocklyDiv.\n * .toolboxWidth: Width of the toolbox, if it exists.  Otherwise zero.\n * .toolboxHeight: Height of the toolbox, if it exists.  Otherwise zero.\n * .flyoutWidth: Width of the flyout if it is always open.  Otherwise zero.\n * .flyoutHeight: Height of the flyout if it is always open.  Otherwise zero.\n * .toolboxPosition: Top, bottom, left or right. Use TOOLBOX_AT constants to\n *     compare.\n * @return {!Blockly.utils.Metrics} Contains size and position metrics of a top\n *     level workspace.\n * @private\n * @this {Blockly.WorkspaceSvg}\n */\nBlockly.WorkspaceSvg.getTopLevelWorkspaceMetrics_ = function() {\n\n  var toolboxDimensions =\n      Blockly.WorkspaceSvg.getDimensionsPx_(this.toolbox_);\n  var flyoutDimensions =\n      Blockly.WorkspaceSvg.getDimensionsPx_(this.flyout_);\n\n  // Contains height and width in CSS pixels.\n  // svgSize is equivalent to the size of the injectionDiv at this point.\n  var svgSize = Blockly.svgSize(this.getParentSvg());\n  var viewSize = {height: svgSize.height, width: svgSize.width};\n  if (this.toolbox_) {\n    if (this.toolboxPosition == Blockly.TOOLBOX_AT_TOP ||\n        this.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n      viewSize.height -= toolboxDimensions.height;\n    } else if (this.toolboxPosition == Blockly.TOOLBOX_AT_LEFT ||\n        this.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      viewSize.width -= toolboxDimensions.width;\n    }\n  } else if (this.flyout_) {\n    if (this.toolboxPosition == Blockly.TOOLBOX_AT_TOP ||\n      this.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n      viewSize.height -= flyoutDimensions.height;\n    } else if (this.toolboxPosition == Blockly.TOOLBOX_AT_LEFT ||\n      this.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {\n      viewSize.width -= flyoutDimensions.width;\n    }\n  }\n\n  // svgSize is now the space taken up by the Blockly workspace, not including\n  // the toolbox.\n  var contentDimensions =\n      Blockly.WorkspaceSvg.getContentDimensions_(this, viewSize);\n\n  var absoluteLeft = 0;\n  if (this.toolbox_ && this.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n    absoluteLeft = toolboxDimensions.width;\n  } else if (this.flyout_ && this.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n    absoluteLeft = flyoutDimensions.width;\n  }\n  var absoluteTop = 0;\n  if (this.toolbox_ && this.toolboxPosition == Blockly.TOOLBOX_AT_TOP) {\n    absoluteTop = toolboxDimensions.height;\n  } else if (this.flyout_ && this.toolboxPosition == Blockly.TOOLBOX_AT_TOP) {\n    absoluteTop = flyoutDimensions.height;\n  }\n\n  var metrics = {\n    contentHeight: contentDimensions.height,\n    contentWidth: contentDimensions.width,\n    contentTop: contentDimensions.top,\n    contentLeft: contentDimensions.left,\n\n    viewHeight: viewSize.height,\n    viewWidth: viewSize.width,\n    viewTop: -this.scrollY,\n    viewLeft: -this.scrollX,\n\n    absoluteTop: absoluteTop,\n    absoluteLeft: absoluteLeft,\n\n    svgHeight: svgSize.height,\n    svgWidth: svgSize.width,\n\n    toolboxWidth: toolboxDimensions.width,\n    toolboxHeight: toolboxDimensions.height,\n    toolboxPosition: this.toolboxPosition,\n\n    flyoutWidth: flyoutDimensions.width,\n    flyoutHeight: flyoutDimensions.height\n  };\n  return metrics;\n};\n\n/**\n * Sets the X/Y translations of a top level workspace.\n * @param {!Object} xyRatio Contains an x and/or y property which is a float\n *     between 0 and 1 specifying the degree of scrolling.\n * @private\n * @this {Blockly.WorkspaceSvg}\n */\nBlockly.WorkspaceSvg.setTopLevelWorkspaceMetrics_ = function(xyRatio) {\n  var metrics = this.getMetrics();\n  if (typeof xyRatio.x == 'number') {\n    this.scrollX = -metrics.contentWidth * xyRatio.x - metrics.contentLeft;\n  }\n  if (typeof xyRatio.y == 'number') {\n    this.scrollY = -metrics.contentHeight * xyRatio.y - metrics.contentTop;\n  }\n  // We have to shift the translation so that when the canvas is at 0, 0 the\n  // workspace origin is not underneath the toolbox.\n  var x = this.scrollX + metrics.absoluteLeft;\n  var y = this.scrollY + metrics.absoluteTop;\n  // We could call scroll here, but that has extra checks we don't need to do.\n  this.translate(x, y);\n};\n\n/**\n * Find the block on this workspace with the specified ID.\n * @param {string} id ID of block to find.\n * @return {Blockly.BlockSvg} The sought after block, or null if not found.\n * @override\n */\nBlockly.WorkspaceSvg.prototype.getBlockById = function(id) {\n  return /** @type {Blockly.BlockSvg} */ (\n    Blockly.WorkspaceSvg.superClass_.getBlockById.call(this, id));\n};\n\n/**\n * Finds the top-level blocks and returns them.  Blocks are optionally sorted\n * by position; top to bottom (with slight LTR or RTL bias).\n * @param {boolean} ordered Sort the list if true.\n * @return {!Array.<!Blockly.BlockSvg>} The top-level block objects.\n * @override\n */\nBlockly.WorkspaceSvg.prototype.getTopBlocks = function(ordered) {\n  return Blockly.WorkspaceSvg.superClass_.getTopBlocks.call(this, ordered);\n};\n\n/**\n * Adds a block to the list of top blocks.\n * @param {!Blockly.Block} block Block to add.\n */\nBlockly.WorkspaceSvg.prototype.addTopBlock = function(block) {\n  this.addTopBoundedElement(/** @type {!Blockly.BlockSvg} */ (block));\n  Blockly.WorkspaceSvg.superClass_.addTopBlock.call(this, block);\n};\n\n/**\n * Removes a block from the list of top blocks.\n * @param {!Blockly.Block} block Block to remove.\n */\nBlockly.WorkspaceSvg.prototype.removeTopBlock = function(block) {\n  this.removeTopBoundedElement(/** @type {!Blockly.BlockSvg} */ (block));\n  Blockly.WorkspaceSvg.superClass_.removeTopBlock.call(this, block);\n};\n\n/**\n * Adds a comment to the list of top comments.\n * @param {!Blockly.WorkspaceComment} comment comment to add.\n */\nBlockly.WorkspaceSvg.prototype.addTopComment = function(comment) {\n  this.addTopBoundedElement(\n      /** @type {!Blockly.WorkspaceCommentSvg} */ (comment));\n  Blockly.WorkspaceSvg.superClass_.addTopComment.call(this, comment);\n};\n\n/**\n * Removes a comment from the list of top comments.\n * @param {!Blockly.WorkspaceComment} comment comment to remove.\n */\nBlockly.WorkspaceSvg.prototype.removeTopComment = function(comment) {\n  this.removeTopBoundedElement(\n      /** @type {!Blockly.WorkspaceCommentSvg} */ (comment));\n  Blockly.WorkspaceSvg.superClass_.removeTopComment.call(this, comment);\n};\n\n/**\n * Adds a bounded element to the list of top bounded elements.\n * @param {!Blockly.IBoundedElement} element Bounded element to add.\n */\nBlockly.WorkspaceSvg.prototype.addTopBoundedElement = function(element) {\n  this.topBoundedElements_.push(element);\n};\n\n/**\n * Removes a bounded element from the list of top bounded elements.\n * @param {!Blockly.IBoundedElement} element Bounded element to remove.\n */\nBlockly.WorkspaceSvg.prototype.removeTopBoundedElement = function(element) {\n  Blockly.utils.arrayRemove(this.topBoundedElements_, element);\n};\n\n/**\n * Finds the top-level bounded elements and returns them.\n * @return {!Array.<!Blockly.IBoundedElement>} The top-level bounded elements.\n */\nBlockly.WorkspaceSvg.prototype.getTopBoundedElements = function() {\n  return [].concat(this.topBoundedElements_);\n};\n\n/**\n * Update whether this workspace has resizes enabled.\n * If enabled, workspace will resize when appropriate.\n * If disabled, workspace will not resize until re-enabled.\n * Use to avoid resizing during a batch operation, for performance.\n * @param {boolean} enabled Whether resizes should be enabled.\n */\nBlockly.WorkspaceSvg.prototype.setResizesEnabled = function(enabled) {\n  var reenabled = (!this.resizesEnabled_ && enabled);\n  this.resizesEnabled_ = enabled;\n  if (reenabled) {\n    // Newly enabled.  Trigger a resize.\n    this.resizeContents();\n  }\n};\n\n/**\n * Dispose of all blocks in workspace, with an optimization to prevent resizes.\n */\nBlockly.WorkspaceSvg.prototype.clear = function() {\n  this.setResizesEnabled(false);\n  Blockly.WorkspaceSvg.superClass_.clear.call(this);\n  this.topBoundedElements_ = [];\n  this.setResizesEnabled(true);\n};\n\n/**\n * Register a callback function associated with a given key, for clicks on\n * buttons and labels in the flyout.\n * For instance, a button specified by the XML\n * <button text=\"create variable\" callbackKey=\"CREATE_VARIABLE\"></button>\n * should be matched by a call to\n * registerButtonCallback(\"CREATE_VARIABLE\", yourCallbackFunction).\n * @param {string} key The name to use to look up this function.\n * @param {function(!Blockly.FlyoutButton)} func The function to call when the\n *     given button is clicked.\n */\nBlockly.WorkspaceSvg.prototype.registerButtonCallback = function(key, func) {\n  if (typeof func != 'function') {\n    throw TypeError('Button callbacks must be functions.');\n  }\n  this.flyoutButtonCallbacks_[key] = func;\n};\n\n/**\n * Get the callback function associated with a given key, for clicks on buttons\n * and labels in the flyout.\n * @param {string} key The name to use to look up the function.\n * @return {?function(!Blockly.FlyoutButton)} The function corresponding to the\n *     given key for this workspace; null if no callback is registered.\n */\nBlockly.WorkspaceSvg.prototype.getButtonCallback = function(key) {\n  var result = this.flyoutButtonCallbacks_[key];\n  return result ? result : null;\n};\n\n/**\n * Remove a callback for a click on a button in the flyout.\n * @param {string} key The name associated with the callback function.\n */\nBlockly.WorkspaceSvg.prototype.removeButtonCallback = function(key) {\n  this.flyoutButtonCallbacks_[key] = null;\n};\n\n/**\n * Register a callback function associated with a given key, for populating\n * custom toolbox categories in this workspace.  See the variable and procedure\n * categories as an example.\n * @param {string} key The name to use to look up this function.\n * @param {function(!Blockly.Workspace):!Array.<!Element>} func The function to\n *     call when the given toolbox category is opened.\n */\nBlockly.WorkspaceSvg.prototype.registerToolboxCategoryCallback = function(key,\n    func) {\n  if (typeof func != 'function') {\n    throw TypeError('Toolbox category callbacks must be functions.');\n  }\n  this.toolboxCategoryCallbacks_[key] = func;\n};\n\n/**\n * Get the callback function associated with a given key, for populating\n * custom toolbox categories in this workspace.\n * @param {string} key The name to use to look up the function.\n * @return {?function(!Blockly.Workspace):!Array.<!Element>} The function\n *     corresponding to the given key for this workspace, or null if no function\n *     is registered.\n */\nBlockly.WorkspaceSvg.prototype.getToolboxCategoryCallback = function(key) {\n  return this.toolboxCategoryCallbacks_[key] || null;\n};\n\n/**\n * Remove a callback for a click on a custom category's name in the toolbox.\n * @param {string} key The name associated with the callback function.\n */\nBlockly.WorkspaceSvg.prototype.removeToolboxCategoryCallback = function(key) {\n  this.toolboxCategoryCallbacks_[key] = null;\n};\n\n/**\n * Look up the gesture that is tracking this touch stream on this workspace.\n * May create a new gesture.\n * @param {!Event} e Mouse event or touch event.\n * @return {Blockly.TouchGesture} The gesture that is tracking this touch\n *     stream, or null if no valid gesture exists.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getGesture = function(e) {\n  var isStart = (e.type == 'mousedown' || e.type == 'touchstart' ||\n      e.type == 'pointerdown');\n\n  var gesture = this.currentGesture_;\n  if (gesture) {\n    if (isStart && gesture.hasStarted()) {\n      console.warn('Tried to start the same gesture twice.');\n      // That's funny.  We must have missed a mouse up.\n      // Cancel it, rather than try to retrieve all of the state we need.\n      gesture.cancel();\n      return null;\n    }\n    return gesture;\n  }\n\n  // No gesture existed on this workspace, but this looks like the start of a\n  // new gesture.\n  if (isStart) {\n    this.currentGesture_ = new Blockly.TouchGesture(e, this);\n    return this.currentGesture_;\n  }\n  // No gesture existed and this event couldn't be the start of a new gesture.\n  return null;\n};\n\n/**\n * Clear the reference to the current gesture.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.clearGesture = function() {\n  this.currentGesture_ = null;\n};\n\n/**\n * Cancel the current gesture, if one exists.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.cancelCurrentGesture = function() {\n  if (this.currentGesture_) {\n    this.currentGesture_.cancel();\n  }\n};\n\n/**\n * Get the audio manager for this workspace.\n * @return {!Blockly.WorkspaceAudio} The audio manager for this workspace.\n */\nBlockly.WorkspaceSvg.prototype.getAudioManager = function() {\n  return this.audioManager_;\n};\n\n/**\n * Get the grid object for this workspace, or null if there is none.\n * @return {Blockly.Grid} The grid object for this workspace.\n * @package\n */\nBlockly.WorkspaceSvg.prototype.getGrid = function() {\n  return this.grid_;\n};\n"],"file":"workspace_svg.min.js"}