{"version":3,"sources":["../../../src/blockly/core/variables_dynamic.js"],"names":["goog","provide","require","Blockly","VariablesDynamic","onCreateVariableButtonClick_String","button","Variables","createVariableButtonHandler","getTargetWorkspace","onCreateVariableButtonClick_Number","onCreateVariableButtonClick_Colour","flyoutCategory","workspace","xmlList","document","createElement","setAttribute","Msg","push","registerButtonCallback","blockList","flyoutCategoryBlocks","concat","variableModelList","getAllVariables","length","Blocks","firstVariable","block","utils","xml","appendChild","generateVariableFieldDom","sort","VariableModel","compareByName","i","variable"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utility functions for handling typed variables.\n *\n * @author duzc2dtw@gmail.com (Du Tian Wei)\n */\n'use strict';\n\ngoog.provide('Blockly.VariablesDynamic');\n\ngoog.require('Blockly.Variables');\ngoog.require('Blockly.Blocks');\ngoog.require('Blockly.Msg');\ngoog.require('Blockly.utils.xml');\ngoog.require('Blockly.VariableModel');\n\n\nBlockly.VariablesDynamic.onCreateVariableButtonClick_String = function(button) {\n  Blockly.Variables.createVariableButtonHandler(button.getTargetWorkspace(),\n      undefined, 'String');\n};\nBlockly.VariablesDynamic.onCreateVariableButtonClick_Number = function(button) {\n  Blockly.Variables.createVariableButtonHandler(button.getTargetWorkspace(),\n      undefined, 'Number');\n};\nBlockly.VariablesDynamic.onCreateVariableButtonClick_Colour = function(button) {\n  Blockly.Variables.createVariableButtonHandler(button.getTargetWorkspace(),\n      undefined, 'Colour');\n};\n/**\n * Construct the elements (blocks and button) required by the flyout for the\n * variable category.\n * @param {!Blockly.Workspace} workspace The workspace containing variables.\n * @return {!Array.<!Element>} Array of XML elements.\n */\nBlockly.VariablesDynamic.flyoutCategory = function(workspace) {\n  var xmlList = [];\n  var button = document.createElement('button');\n  button.setAttribute('text', Blockly.Msg['NEW_STRING_VARIABLE']);\n  button.setAttribute('callbackKey', 'CREATE_VARIABLE_STRING');\n  xmlList.push(button);\n  button = document.createElement('button');\n  button.setAttribute('text', Blockly.Msg['NEW_NUMBER_VARIABLE']);\n  button.setAttribute('callbackKey', 'CREATE_VARIABLE_NUMBER');\n  xmlList.push(button);\n  button = document.createElement('button');\n  button.setAttribute('text', Blockly.Msg['NEW_COLOUR_VARIABLE']);\n  button.setAttribute('callbackKey', 'CREATE_VARIABLE_COLOUR');\n  xmlList.push(button);\n\n  workspace.registerButtonCallback('CREATE_VARIABLE_STRING',\n      Blockly.VariablesDynamic.onCreateVariableButtonClick_String);\n  workspace.registerButtonCallback('CREATE_VARIABLE_NUMBER',\n      Blockly.VariablesDynamic.onCreateVariableButtonClick_Number);\n  workspace.registerButtonCallback('CREATE_VARIABLE_COLOUR',\n      Blockly.VariablesDynamic.onCreateVariableButtonClick_Colour);\n\n\n  var blockList = Blockly.VariablesDynamic.flyoutCategoryBlocks(workspace);\n  xmlList = xmlList.concat(blockList);\n  return xmlList;\n};\n\n/**\n * Construct the blocks required by the flyout for the variable category.\n * @param {!Blockly.Workspace} workspace The workspace containing variables.\n * @return {!Array.<!Element>} Array of XML block elements.\n */\nBlockly.VariablesDynamic.flyoutCategoryBlocks = function(workspace) {\n  var variableModelList = workspace.getAllVariables();\n\n  var xmlList = [];\n  if (variableModelList.length > 0) {\n    if (Blockly.Blocks['variables_set_dynamic']) {\n      var firstVariable = variableModelList[variableModelList.length - 1];\n      var block = Blockly.utils.xml.createElement('block');\n      block.setAttribute('type', 'variables_set_dynamic');\n      block.setAttribute('gap', 24);\n      block.appendChild(\n          Blockly.Variables.generateVariableFieldDom(firstVariable));\n      xmlList.push(block);\n    }\n    if (Blockly.Blocks['variables_get_dynamic']) {\n      variableModelList.sort(Blockly.VariableModel.compareByName);\n      for (var i = 0, variable; (variable = variableModelList[i]); i++) {\n        var block = Blockly.utils.xml.createElement('block');\n        block.setAttribute('type', 'variables_get_dynamic');\n        block.setAttribute('gap', 8);\n        block.appendChild(Blockly.Variables.generateVariableFieldDom(variable));\n        xmlList.push(block);\n      }\n    }\n  }\n  return xmlList;\n};\n"],"file":"variables_dynamic.min.js"}