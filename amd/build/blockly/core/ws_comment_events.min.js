'use strict';goog.provide("Blockly.Events.CommentBase");goog.provide("Blockly.Events.CommentChange");goog.provide("Blockly.Events.CommentCreate");goog.provide("Blockly.Events.CommentDelete");goog.provide("Blockly.Events.CommentMove");goog.require("Blockly.Events");goog.require("Blockly.Events.Abstract");goog.require("Blockly.utils.Coordinate");goog.require("Blockly.utils.object");goog.require("Blockly.utils.xml");Blockly.Events.CommentBase=function(a){this.commentId=a.id;this.workspaceId=a.workspace.id;this.group=Blockly.Events.getGroup();this.recordUndo=Blockly.Events.recordUndo};Blockly.utils.object.inherits(Blockly.Events.CommentBase,Blockly.Events.Abstract);Blockly.Events.CommentBase.prototype.toJson=function(){var a=Blockly.Events.CommentBase.superClass_.toJson.call(this);if(this.commentId){a.commentId=this.commentId}return a};Blockly.Events.CommentBase.prototype.fromJson=function(a){Blockly.Events.CommentBase.superClass_.fromJson.call(this,a);this.commentId=a.commentId};Blockly.Events.CommentChange=function(a,b,c){if(!a){return}Blockly.Events.CommentChange.superClass_.constructor.call(this,a);this.oldContents_=b;this.newContents_=c};Blockly.utils.object.inherits(Blockly.Events.CommentChange,Blockly.Events.CommentBase);Blockly.Events.CommentChange.prototype.type=Blockly.Events.COMMENT_CHANGE;Blockly.Events.CommentChange.prototype.toJson=function(){var a=Blockly.Events.CommentChange.superClass_.toJson.call(this);a.newContents=this.newContents_;return a};Blockly.Events.CommentChange.prototype.fromJson=function(a){Blockly.Events.CommentChange.superClass_.fromJson.call(this,a);this.newContents_=a.newValue};Blockly.Events.CommentChange.prototype.isNull=function(){return this.oldContents_==this.newContents_};Blockly.Events.CommentChange.prototype.run=function(a){var b=this.getEventWorkspace_(),c=b.getCommentById(this.commentId);if(!c){console.warn("Can't change non-existent comment: "+this.commentId);return}var d=a?this.newContents_:this.oldContents_;c.setContent(d)};Blockly.Events.CommentCreate=function(a){if(!a){return}Blockly.Events.CommentCreate.superClass_.constructor.call(this,a);this.xml=a.toXmlWithXY()};Blockly.utils.object.inherits(Blockly.Events.CommentCreate,Blockly.Events.CommentBase);Blockly.Events.CommentCreate.prototype.type=Blockly.Events.COMMENT_CREATE;Blockly.Events.CommentCreate.prototype.toJson=function(){var a=Blockly.Events.CommentCreate.superClass_.toJson.call(this);a.xml=Blockly.Xml.domToText(this.xml);return a};Blockly.Events.CommentCreate.prototype.fromJson=function(a){Blockly.Events.CommentCreate.superClass_.fromJson.call(this,a);this.xml=Blockly.Xml.textToDom(a.xml)};Blockly.Events.CommentCreate.prototype.run=function(a){Blockly.Events.CommentCreateDeleteHelper(this,a)};Blockly.Events.CommentCreateDeleteHelper=function(a,b){var c=a.getEventWorkspace_();if(b){var d=Blockly.utils.xml.createElement("xml");d.appendChild(a.xml);Blockly.Xml.domToWorkspace(d,c)}else{var e=c.getCommentById(a.commentId);if(e){e.dispose(!1,!1)}else{console.warn("Can't uncreate non-existent comment: "+a.commentId)}}};Blockly.Events.CommentDelete=function(a){if(!a){return}Blockly.Events.CommentDelete.superClass_.constructor.call(this,a);this.xml=a.toXmlWithXY()};Blockly.utils.object.inherits(Blockly.Events.CommentDelete,Blockly.Events.CommentBase);Blockly.Events.CommentDelete.prototype.type=Blockly.Events.COMMENT_DELETE;Blockly.Events.CommentDelete.prototype.toJson=function(){var a=Blockly.Events.CommentDelete.superClass_.toJson.call(this);return a};Blockly.Events.CommentDelete.prototype.fromJson=function(a){Blockly.Events.CommentDelete.superClass_.fromJson.call(this,a)};Blockly.Events.CommentDelete.prototype.run=function(a){Blockly.Events.CommentCreateDeleteHelper(this,!a)};Blockly.Events.CommentMove=function(a){if(!a){return}Blockly.Events.CommentMove.superClass_.constructor.call(this,a);this.comment_=a;this.oldCoordinate_=a.getXY();this.newCoordinate_=null};Blockly.utils.object.inherits(Blockly.Events.CommentMove,Blockly.Events.CommentBase);Blockly.Events.CommentMove.prototype.recordNew=function(){if(!this.comment_){throw Error("Tried to record the new position of a comment on the same event twice.")}this.newCoordinate_=this.comment_.getXY();this.comment_=null};Blockly.Events.CommentMove.prototype.type=Blockly.Events.COMMENT_MOVE;Blockly.Events.CommentMove.prototype.setOldCoordinate=function(a){this.oldCoordinate_=a};Blockly.Events.CommentMove.prototype.toJson=function(){var a=Blockly.Events.CommentMove.superClass_.toJson.call(this);if(this.newCoordinate_){a.newCoordinate=Math.round(this.newCoordinate_.x)+","+Math.round(this.newCoordinate_.y)}return a};Blockly.Events.CommentMove.prototype.fromJson=function(a){Blockly.Events.CommentMove.superClass_.fromJson.call(this,a);if(a.newCoordinate){var b=a.newCoordinate.split(",");this.newCoordinate_=new Blockly.utils.Coordinate(+b[0],+b[1])}};Blockly.Events.CommentMove.prototype.isNull=function(){return Blockly.utils.Coordinate.equals(this.oldCoordinate_,this.newCoordinate_)};Blockly.Events.CommentMove.prototype.run=function(a){var b=this.getEventWorkspace_(),c=b.getCommentById(this.commentId);if(!c){console.warn("Can't move non-existent comment: "+this.commentId);return}var d=a?this.newCoordinate_:this.oldCoordinate_,e=c.getXY();c.moveBy(d.x-e.x,d.y-e.y)};
//# sourceMappingURL=ws_comment_events.min.js.map
