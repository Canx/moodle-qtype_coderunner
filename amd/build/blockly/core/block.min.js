'use strict';function _typeof(a){"@babel/helpers - typeof";if("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator){_typeof=function(a){return typeof a}}else{_typeof=function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a}}return _typeof(a)}goog.provide("Blockly.Block");goog.require("Blockly.ASTNode");goog.require("Blockly.Blocks");goog.require("Blockly.Connection");goog.require("Blockly.Events");goog.require("Blockly.Events.BlockChange");goog.require("Blockly.Events.BlockCreate");goog.require("Blockly.Events.BlockDelete");goog.require("Blockly.Events.BlockMove");goog.require("Blockly.Extensions");goog.require("Blockly.fieldRegistry");goog.require("Blockly.Input");goog.require("Blockly.navigation");goog.require("Blockly.utils");goog.require("Blockly.utils.Coordinate");goog.require("Blockly.utils.object");goog.require("Blockly.utils.string");goog.require("Blockly.Workspace");goog.requireType("Blockly.IASTNodeLocation");Blockly.Block=function(a,b,c){if(Blockly.Generator&&"undefined"!=typeof Blockly.Generator.prototype[b]){throw Error("Block prototypeName \""+b+"\" conflicts with Blockly.Generator members.")}this.id=c&&!a.getBlockById(c)?c:Blockly.utils.genUid();a.setBlockById(this.id,this);this.outputConnection=null;this.nextConnection=null;this.previousConnection=null;this.inputList=[];this.inputsInline=void 0;this.disabled=!1;this.tooltip="";this.contextMenu=!0;this.parentBlock_=null;this.childBlocks_=[];this.deletable_=!0;this.movable_=!0;this.editable_=!0;this.isShadow_=!1;this.collapsed_=!1;this.outputShape_=null;this.comment=null;this.commentModel={text:null,pinned:!1,size:new Blockly.utils.Size(160,80)};this.xy_=new Blockly.utils.Coordinate(0,0);this.workspace=a;this.isInFlyout=a.isFlyout;this.isInMutator=a.isMutator;this.RTL=a.RTL;this.isInsertionMarker_=!1;this.hat=void 0;this.rendered=null;this.statementInputCount=0;if(b){this.type=b;var d=Blockly.Blocks[b];if(!d||"object"!=_typeof(d)){throw TypeError("Unknown block type: "+b)}Blockly.utils.object.mixin(this,d)}a.addTopBlock(this);a.addTypedBlock(this);if("function"==typeof this.init){this.init()}this.inputsInlineDefault=this.inputsInline;if(Blockly.Events.isEnabled()){var e=Blockly.Events.getGroup();if(!e){Blockly.Events.setGroup(!0)}try{Blockly.Events.fire(new Blockly.Events.BlockCreate(this))}finally{if(!e){Blockly.Events.setGroup(!1)}}}if("function"==typeof this.onchange){this.setOnChange(this.onchange)}};Blockly.Block.CommentModel;Blockly.Block.COLLAPSED_INPUT_NAME="_TEMP_COLLAPSED_INPUT";Blockly.Block.COLLAPSED_FIELD_NAME="_TEMP_COLLAPSED_FIELD";Blockly.Block.prototype.data=null;Blockly.Block.prototype.disposed=!1;Blockly.Block.prototype.hue_=null;Blockly.Block.prototype.colour_="#000000";Blockly.Block.prototype.styleName_=null;Blockly.Block.prototype.init;Blockly.Block.prototype.onchange;Blockly.Block.prototype.mutationToDom;Blockly.Block.prototype.domToMutation;Blockly.Block.prototype.suppressPrefixSuffix;Blockly.Block.prototype.getDeveloperVariables;Blockly.Block.prototype.dispose=function(a){if(!this.workspace){return}if(this.onchangeWrapper_){this.workspace.removeChangeListener(this.onchangeWrapper_)}this.unplug(a);if(Blockly.Events.isEnabled()){Blockly.Events.fire(new Blockly.Events.BlockDelete(this))}Blockly.Events.disable();try{if(this.workspace){this.workspace.removeTopBlock(this);this.workspace.removeTypedBlock(this);this.workspace.removeBlockById(this.id);this.workspace=null}if(Blockly.selected==this){Blockly.selected=null}for(var b=this.childBlocks_.length-1;0<=b;b--){this.childBlocks_[b].dispose(!1)}for(var b=0,c;c=this.inputList[b];b++){c.dispose()}this.inputList.length=0;for(var d=this.getConnections_(!0),b=0,e;e=d[b];b++){e.dispose()}}finally{Blockly.Events.enable();this.disposed=!0}};Blockly.Block.prototype.initModel=function(){for(var a=0,b;b=this.inputList[a];a++){for(var c=0,d;d=b.fieldRow[c];c++){if(d.initModel){d.initModel()}}}};Blockly.Block.prototype.unplug=function(a){if(this.outputConnection){this.unplugFromRow_(a)}else if(this.previousConnection){this.unplugFromStack_(a)}};Blockly.Block.prototype.unplugFromRow_=function(a){var b=null;if(this.outputConnection.isConnected()){b=this.outputConnection.targetConnection;this.outputConnection.disconnect()}if(!b||!a){return}var c=this.getOnlyValueConnection_();if(!c||!c.isConnected()||c.targetBlock().isShadow()){return}var d=c.targetConnection;d.disconnect();if(d.checkType(b)){b.connect(d)}else{d.onFailedConnect(b)}};Blockly.Block.prototype.getOnlyValueConnection_=function(){for(var a=null,b=0,c;b<this.inputList.length;b++){c=this.inputList[b].connection;if(c&&c.type==Blockly.INPUT_VALUE&&c.targetConnection){if(a){return null}a=c}}return a};Blockly.Block.prototype.unplugFromStack_=function(a){var b=null;if(this.previousConnection.isConnected()){b=this.previousConnection.targetConnection;this.previousConnection.disconnect()}var c=this.getNextBlock();if(a&&c&&!c.isShadow()){var d=this.nextConnection.targetConnection;d.disconnect();if(b&&b.checkType(d)){b.connect(d)}}};Blockly.Block.prototype.getConnections_=function(){var a=[];if(this.outputConnection){a.push(this.outputConnection)}if(this.previousConnection){a.push(this.previousConnection)}if(this.nextConnection){a.push(this.nextConnection)}for(var b=0,c;c=this.inputList[b];b++){if(c.connection){a.push(c.connection)}}return a};Blockly.Block.prototype.lastConnectionInStack=function(){var a=this.nextConnection;while(a){var b=a.targetBlock();if(!b){return a}a=b.nextConnection}return null};Blockly.Block.prototype.bumpNeighbours=function(){console.warn("Not expected to reach Block.bumpNeighbours function. BlockSvg.bumpNeighbours was expected to be called instead.")};Blockly.Block.prototype.getParent=function(){return this.parentBlock_};Blockly.Block.prototype.getInputWithBlock=function(a){for(var b=0,c;c=this.inputList[b];b++){if(c.connection&&c.connection.targetBlock()==a){return c}}return null};Blockly.Block.prototype.getSurroundParent=function(){var a=this;do{var b=a;a=a.getParent();if(!a){return null}}while(a.getNextBlock()==b);return a};Blockly.Block.prototype.getNextBlock=function(){return this.nextConnection&&this.nextConnection.targetBlock()};Blockly.Block.prototype.getPreviousBlock=function(){return this.previousConnection&&this.previousConnection.targetBlock()};Blockly.Block.prototype.getFirstStatementConnection=function(){for(var a=0,b;b=this.inputList[a];a++){if(b.connection&&b.connection.type==Blockly.NEXT_STATEMENT){return b.connection}}return null};Blockly.Block.prototype.getRootBlock=function(){var a,b=this;do{a=b;b=a.parentBlock_}while(b);return a};Blockly.Block.prototype.getTopStackBlock=function(){var a=this;do{var b=a.getPreviousBlock()}while(b&&b.getNextBlock()==a&&(a=b));return a};Blockly.Block.prototype.getChildren=function(a){if(!a){return this.childBlocks_}for(var b=[],c=0,d;d=this.inputList[c];c++){if(d.connection){var e=d.connection.targetBlock();if(e){b.push(e)}}}var f=this.getNextBlock();if(f){b.push(f)}return b};Blockly.Block.prototype.setParent=function(a){if(a==this.parentBlock_){return}if(this.parentBlock_){Blockly.utils.arrayRemove(this.parentBlock_.childBlocks_,this);if(this.previousConnection&&this.previousConnection.isConnected()){throw Error("Still connected to previous block.")}if(this.outputConnection&&this.outputConnection.isConnected()){throw Error("Still connected to parent block.")}this.parentBlock_=null}else{this.workspace.removeTopBlock(this)}this.parentBlock_=a;if(a){a.childBlocks_.push(this)}else{this.workspace.addTopBlock(this)}};Blockly.Block.prototype.getDescendants=function(a){for(var b=[this],c=this.getChildren(a),d,e=0;d=c[e];e++){b.push.apply(b,d.getDescendants(a))}return b};Blockly.Block.prototype.isDeletable=function(){return this.deletable_&&!this.isShadow_&&!(this.workspace&&this.workspace.options.readOnly)};Blockly.Block.prototype.setDeletable=function(a){this.deletable_=a};Blockly.Block.prototype.isMovable=function(){return this.movable_&&!this.isShadow_&&!(this.workspace&&this.workspace.options.readOnly)};Blockly.Block.prototype.setMovable=function(a){this.movable_=a};Blockly.Block.prototype.isDuplicatable=function(){if(!this.workspace.hasBlockLimits()){return!0}return this.workspace.isCapacityAvailable(Blockly.utils.getBlockTypeCounts(this,!0))};Blockly.Block.prototype.isShadow=function(){return this.isShadow_};Blockly.Block.prototype.setShadow=function(a){this.isShadow_=a};Blockly.Block.prototype.isInsertionMarker=function(){return this.isInsertionMarker_};Blockly.Block.prototype.setInsertionMarker=function(a){this.isInsertionMarker_=a};Blockly.Block.prototype.isEditable=function(){return this.editable_&&!(this.workspace&&this.workspace.options.readOnly)};Blockly.Block.prototype.setEditable=function(a){this.editable_=a;for(var b=0,c;c=this.inputList[b];b++){for(var d=0,e;e=c.fieldRow[d];d++){e.updateEditable()}}};Blockly.Block.prototype.isDisposed=function(){return this.disposed};Blockly.Block.prototype.getMatchingConnection=function(a,b){var c=this.getConnections_(!0),d=a.getConnections_(!0);if(c.length!=d.length){throw Error("Connection lists did not match in length.")}for(var e=0;e<d.length;e++){if(d[e]==b){return c[e]}}return null};Blockly.Block.prototype.setHelpUrl=function(a){this.helpUrl=a};Blockly.Block.prototype.setTooltip=function(a){this.tooltip=a};Blockly.Block.prototype.getColour=function(){return this.colour_};Blockly.Block.prototype.getStyleName=function(){return this.styleName_};Blockly.Block.prototype.getHue=function(){return this.hue_};Blockly.Block.prototype.setColour=function(a){var b=Blockly.utils.parseBlockColour(a);this.hue_=b.hue;this.colour_=b.hex};Blockly.Block.prototype.setStyle=function(a){this.styleName_=a};Blockly.Block.prototype.setOnChange=function(a){if(a&&"function"!=typeof a){throw Error("onchange must be a function.")}if(this.onchangeWrapper_){this.workspace.removeChangeListener(this.onchangeWrapper_)}this.onchange=a;if(this.onchange){this.onchangeWrapper_=a.bind(this);this.workspace.addChangeListener(this.onchangeWrapper_)}};Blockly.Block.prototype.getField=function(a){for(var b=0,c;c=this.inputList[b];b++){for(var d=0,e;e=c.fieldRow[d];d++){if(e.name==a){return e}}}return null};Blockly.Block.prototype.getVars=function(){for(var a=[],b=0,c;c=this.inputList[b];b++){for(var d=0,e;e=c.fieldRow[d];d++){if(e.referencesVariables()){a.push(e.getValue())}}}return a};Blockly.Block.prototype.getVarModels=function(){for(var a=[],b=0,c;c=this.inputList[b];b++){for(var d=0,e;e=c.fieldRow[d];d++){if(e.referencesVariables()){var f=this.workspace.getVariableById(e.getValue());if(f){a.push(f)}}}}return a};Blockly.Block.prototype.updateVarName=function(a){for(var b=0,c;c=this.inputList[b];b++){for(var d=0,e;e=c.fieldRow[d];d++){if(e.referencesVariables()&&a.getId()==e.getValue()){e.refreshVariableName()}}}};Blockly.Block.prototype.renameVarById=function(a,b){for(var c=0,d;d=this.inputList[c];c++){for(var e=0,f;f=d.fieldRow[e];e++){if(f.referencesVariables()&&a==f.getValue()){f.setValue(b)}}}};Blockly.Block.prototype.getFieldValue=function(a){var b=this.getField(a);if(b){return b.getValue()}return null};Blockly.Block.prototype.setFieldValue=function(a,b){var c=this.getField(b);if(!c){throw Error("Field \""+b+"\" not found.")}c.setValue(a)};Blockly.Block.prototype.setPreviousStatement=function(a,b){if(a){if(b===void 0){b=null}if(!this.previousConnection){if(this.outputConnection){throw Error("Remove output connection prior to adding previous connection.")}this.previousConnection=this.makeConnection_(Blockly.PREVIOUS_STATEMENT)}this.previousConnection.setCheck(b)}else{if(this.previousConnection){if(this.previousConnection.isConnected()){throw Error("Must disconnect previous statement before removing connection.")}this.previousConnection.dispose();this.previousConnection=null}}};Blockly.Block.prototype.setNextStatement=function(a,b){if(a){if(b===void 0){b=null}if(!this.nextConnection){this.nextConnection=this.makeConnection_(Blockly.NEXT_STATEMENT)}this.nextConnection.setCheck(b)}else{if(this.nextConnection){if(this.nextConnection.isConnected()){throw Error("Must disconnect next statement before removing connection.")}this.nextConnection.dispose();this.nextConnection=null}}};Blockly.Block.prototype.setOutput=function(a,b){if(a){if(b===void 0){b=null}if(!this.outputConnection){if(this.previousConnection){throw Error("Remove previous connection prior to adding output connection.")}this.outputConnection=this.makeConnection_(Blockly.OUTPUT_VALUE)}this.outputConnection.setCheck(b)}else{if(this.outputConnection){if(this.outputConnection.isConnected()){throw Error("Must disconnect output value before removing connection.")}this.outputConnection.dispose();this.outputConnection=null}}};Blockly.Block.prototype.setInputsInline=function(a){if(this.inputsInline!=a){Blockly.Events.fire(new Blockly.Events.BlockChange(this,"inline",null,this.inputsInline,a));this.inputsInline=a}};Blockly.Block.prototype.getInputsInline=function(){if(this.inputsInline!=void 0){return this.inputsInline}for(var a=1;a<this.inputList.length;a++){if(this.inputList[a-1].type==Blockly.DUMMY_INPUT&&this.inputList[a].type==Blockly.DUMMY_INPUT){return!1}}for(var a=1;a<this.inputList.length;a++){if(this.inputList[a-1].type==Blockly.INPUT_VALUE&&this.inputList[a].type==Blockly.DUMMY_INPUT){return!0}}return!1};Blockly.Block.prototype.setOutputShape=function(a){this.outputShape_=a};Blockly.Block.prototype.getOutputShape=function(){return this.outputShape_};Blockly.Block.prototype.setDisabled=function(a){console.warn("Deprecated call to Blockly.Block.prototype.setDisabled, use Blockly.Block.prototype.setEnabled instead.");this.setEnabled(!a)};Blockly.Block.prototype.isEnabled=function(){return!this.disabled};Blockly.Block.prototype.setEnabled=function(a){if(this.isEnabled()!=a){Blockly.Events.fire(new Blockly.Events.BlockChange(this,"disabled",null,this.disabled,!a));this.disabled=!a}};Blockly.Block.prototype.getInheritedDisabled=function(){var a=this.getSurroundParent();while(a){if(a.disabled){return!0}a=a.getSurroundParent()}return!1};Blockly.Block.prototype.isCollapsed=function(){return this.collapsed_};Blockly.Block.prototype.setCollapsed=function(a){if(this.collapsed_!=a){Blockly.Events.fire(new Blockly.Events.BlockChange(this,"collapsed",null,this.collapsed_,a));this.collapsed_=a}};Blockly.Block.prototype.toString=function(a,b){var e=[],f=Blockly.ASTNode.NAVIGATE_ALL_FIELDS;Blockly.ASTNode.NAVIGATE_ALL_FIELDS=!0;var g=Blockly.ASTNode.createBlockNode(this),h=g;function c(a){var b=a.getCheck();if(!b&&a.targetConnection){b=a.targetConnection.getCheck()}return!!b&&(-1!=b.indexOf("Boolean")||-1!=b.indexOf("Number"))}function d(){if(g&&g.getType()==h.getType()&&g.getLocation()==h.getLocation()){g=null}}while(g){switch(g.getType()){case Blockly.ASTNode.types.INPUT:var j=g.getLocation();if(!g.in()){e.push(b||"?")}else if(c(j)){e.push("(")}break;case Blockly.ASTNode.types.FIELD:var k=g.getLocation();if(k.name!=Blockly.Block.COLLAPSED_FIELD_NAME){e.push(k.getText())}break;}var m=g;g=m.in()||m.next();if(!g){g=m.out();d();while(g&&!g.next()){g=g.out();d();if(g&&g.getType()==Blockly.ASTNode.types.INPUT&&c(g.getLocation())){e.push(")")}}if(g){g=g.next()}}}Blockly.ASTNode.NAVIGATE_ALL_FIELDS=f;for(var n=2,o=e.length;n<o;n++){if("("==e[n-2]&&")"==e[n]){e[n-2]=e[n-1];e.splice(n-1,2);o-=2}}e=e.join(" ").replace(/(\() | (\))/gmi,"$1$2").trim()||"???";if(a){if(e.length>a){e=e.substring(0,a-3)+"..."}}return e};Blockly.Block.prototype.appendValueInput=function(a){return this.appendInput_(Blockly.INPUT_VALUE,a)};Blockly.Block.prototype.appendStatementInput=function(a){return this.appendInput_(Blockly.NEXT_STATEMENT,a)};Blockly.Block.prototype.appendDummyInput=function(a){return this.appendInput_(Blockly.DUMMY_INPUT,a||"")};Blockly.Block.prototype.jsonInit=function(a){var b=a.type?"Block \""+a.type+"\": ":"";if(a.output&&a.previousStatement){throw Error(b+"Must not have both an output and a previousStatement.")}if(a.style&&a.style.hat){this.hat=a.style.hat;a.style=null}if(a.style&&a.colour){throw Error(b+"Must not have both a colour and a style.")}else if(a.style){this.jsonInitStyle_(a,b)}else{this.jsonInitColour_(a,b)}var c=0;while(a["message"+c]!==void 0){this.interpolate_(a["message"+c],a["args"+c]||[],a["lastDummyAlign"+c],b);c++}if(a.inputsInline!==void 0){this.setInputsInline(a.inputsInline)}if(a.output!==void 0){this.setOutput(!0,a.output)}if(a.outputShape!==void 0){this.setOutputShape(a.outputShape)}if(a.previousStatement!==void 0){this.setPreviousStatement(!0,a.previousStatement)}if(a.nextStatement!==void 0){this.setNextStatement(!0,a.nextStatement)}if(a.tooltip!==void 0){var d=a.tooltip,e=Blockly.utils.replaceMessageReferences(d);this.setTooltip(e)}if(a.enableContextMenu!==void 0){var d=a.enableContextMenu;this.contextMenu=!!d}if(a.helpUrl!==void 0){var d=a.helpUrl,f=Blockly.utils.replaceMessageReferences(d);this.setHelpUrl(f)}if("string"==typeof a.extensions){console.warn(b+"JSON attribute 'extensions' should be an array of strings. Found raw string in JSON for '"+a.type+"' block.");a.extensions=[a.extensions]}if(a.mutator!==void 0){Blockly.Extensions.apply(a.mutator,this,!0)}if(Array.isArray(a.extensions)){for(var g=a.extensions,h=0,k;h<g.length;++h){k=g[h];Blockly.Extensions.apply(k,this,!1)}}};Blockly.Block.prototype.jsonInitColour_=function(a,b){if("colour"in a){if(a.colour===void 0){console.warn(b+"Undefined colour value.")}else{var c=a.colour;try{this.setColour(c)}catch(a){console.warn(b+"Illegal colour value: ",c)}}}};Blockly.Block.prototype.jsonInitStyle_=function(a,b){var c=a.style;try{this.setStyle(c)}catch(a){console.warn(b+"Style does not exist: ",c)}};Blockly.Block.prototype.mixin=function(a,b){if(b!==void 0&&"boolean"!=typeof b){throw Error("opt_disableCheck must be a boolean if provided")}if(!b){var c=[];for(var d in a){if(this[d]!==void 0){c.push(d)}}if(c.length){throw Error("Mixin will overwrite block members: "+JSON.stringify(c))}}Blockly.utils.object.mixin(this,a)};Blockly.Block.prototype.interpolate_=function(a,b,c,d){for(var e=Blockly.utils.tokenizeInterpolation(a),f=[],g=0,h=[],k=0,l;k<e.length;k++){l=e[k];if("number"==typeof l){if(0>=l||l>b.length){throw Error("Block \""+this.type+"\": Message index %"+l+" out of range.")}if(f[l]){throw Error("Block \""+this.type+"\": Message index %"+l+" duplicated.")}f[l]=!0;g++;h.push(b[l-1])}else{l=l.trim();if(l){h.push(l)}}}if(g!=b.length){throw Error("Block \""+this.type+"\": Message does not reference all "+b.length+" arg(s).")}if(h.length&&("string"==typeof h[h.length-1]||Blockly.utils.string.startsWith(h[h.length-1].type,"field_"))){var m={type:"input_dummy"};if(c){m.align=c}h.push(m)}for(var n={LEFT:Blockly.ALIGN_LEFT,RIGHT:Blockly.ALIGN_RIGHT,CENTRE:Blockly.ALIGN_CENTRE,CENTER:Blockly.ALIGN_CENTRE},o=[],k=0,p;k<h.length;k++){p=h[k];if("string"==typeof p){o.push([p,void 0])}else{var q=null,r=null;do{var s=!1;if("string"==typeof p){q=new Blockly.FieldLabel(p)}else{switch(p.type){case"input_value":r=this.appendValueInput(p.name);break;case"input_statement":r=this.appendStatementInput(p.name);break;case"input_dummy":r=this.appendDummyInput(p.name);break;default:q=Blockly.fieldRegistry.fromJson(p);if(!q&&p.alt){p=p.alt;s=!0}}}}while(s);if(q){o.push([q,p.name])}else if(r){if(p.check){r.setCheck(p.check)}if(p.align){var t=n[p.align.toUpperCase()];if(t===void 0){console.warn(d+"Illegal align value: ",p.align)}else{r.setAlign(t)}}for(var u=0;u<o.length;u++){r.appendField(o[u][0],o[u][1])}o.length=0}}}};Blockly.Block.prototype.appendInput_=function(a,b){var c=null;if(a==Blockly.INPUT_VALUE||a==Blockly.NEXT_STATEMENT){c=this.makeConnection_(a)}if(a==Blockly.NEXT_STATEMENT){this.statementInputCount++}var d=new Blockly.Input(a,b,this,c);this.inputList.push(d);return d};Blockly.Block.prototype.moveInputBefore=function(a,b){if(a==b){return}for(var c=-1,d=b?-1:this.inputList.length,e=0,f;f=this.inputList[e];e++){if(f.name==a){c=e;if(-1!=d){break}}else if(b&&f.name==b){d=e;if(-1!=c){break}}}if(-1==c){throw Error("Named input \""+a+"\" not found.")}if(-1==d){throw Error("Reference input \""+b+"\" not found.")}this.moveNumberedInputBefore(c,d)};Blockly.Block.prototype.moveNumberedInputBefore=function(a,b){if(a==b){throw Error("Can't move input to itself.")}if(a>=this.inputList.length){throw RangeError("Input index "+a+" out of bounds.")}if(b>this.inputList.length){throw RangeError("Reference input "+b+" out of bounds.")}var c=this.inputList[a];this.inputList.splice(a,1);if(a<b){b--}this.inputList.splice(b,0,c)};Blockly.Block.prototype.removeInput=function(a,b){for(var c=0,d;d=this.inputList[c];c++){if(d.name==a){if(d.type==Blockly.NEXT_STATEMENT){this.statementInputCount--}d.dispose();this.inputList.splice(c,1);return!0}}if(b){return!1}else{throw Error("Input not found: "+a)}};Blockly.Block.prototype.getInput=function(a){for(var b=0,c;c=this.inputList[b];b++){if(c.name==a){return c}}return null};Blockly.Block.prototype.getInputTargetBlock=function(a){var b=this.getInput(a);return b&&b.connection&&b.connection.targetBlock()};Blockly.Block.prototype.getCommentText=function(){return this.commentModel.text};Blockly.Block.prototype.setCommentText=function(a){if(this.commentModel.text==a){return}Blockly.Events.fire(new Blockly.Events.BlockChange(this,"comment",null,this.commentModel.text,a));this.commentModel.text=a;this.comment=a};Blockly.Block.prototype.setWarningText=function(){};Blockly.Block.prototype.setMutator=function(){};Blockly.Block.prototype.getRelativeToSurfaceXY=function(){return this.xy_};Blockly.Block.prototype.moveBy=function(a,b){if(this.parentBlock_){throw Error("Block has parent.")}var c=new Blockly.Events.BlockMove(this);this.xy_.translate(a,b);c.recordNew();Blockly.Events.fire(c)};Blockly.Block.prototype.makeConnection_=function(a){return new Blockly.Connection(this,a)};Blockly.Block.prototype.allInputsFilled=function(a){if(a===void 0){a=!0}if(!a&&this.isShadow()){return!1}for(var b=0,c;c=this.inputList[b];b++){if(!c.connection){continue}var d=c.connection.targetBlock();if(!d||!d.allInputsFilled(a)){return!1}}var e=this.getNextBlock();if(e){return e.allInputsFilled(a)}return!0};Blockly.Block.prototype.toDevString=function(){var a=this.type?"\""+this.type+"\" block":"Block";if(this.id){a+=" (id=\""+this.id+"\")"}return a};
//# sourceMappingURL=block.min.js.map
