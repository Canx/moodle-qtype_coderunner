{"version":3,"sources":["../../../src/blockly/core/toolbox.js"],"names":["goog","provide","require","requireType","Blockly","Toolbox","workspace","workspace_","RTL","options","horizontalLayout_","horizontalLayout","toolboxPosition","config_","indentWidth","cssRoot","cssHideRoot","cssTreeRow","cssItemLabel","cssTreeIcon","cssExpandedFolderIcon","cssFileIcon","cssSelectedRow","treeSeparatorConfig_","flyout_","width","height","lastCategory_","prototype","init","svg","getParentSvg","HtmlDiv","document","createElement","className","setAttribute","parentNode","insertBefore","themeManager","getThemeManager","subscribe","bindEventWithChecks_","e","utils","isRightButton","target","hideChaff","Touch","clearTouchIdentifier","workspaceOptions","Options","oneBasedIndex","renderer","rendererOverrides","HorizontalFlyout","Error","VerticalFlyout","dom","insertAfter","createDom","render","languageTree","toolboxDef","tree_","dispose","tree","TreeControl","setSelectedItem","onBeforeSelected","handleBeforeTreeSelected_","onAfterSelected","handleAfterTreeSelected_","openNode","contents","hasColours_","createTree_","length","resizeContents","addColour_","position","aria","setState","getElement","State","ORIENTATION","treeOut","lastElement","i","childIn","toUpperCase","categoryInfo","addCategory_","separatorInfo","addSeparator_","push","categoryName","replaceMessageReferences","childOut","createNode","onSizeChanged","handleNodeSizeChanged_","add","custom","setColourOrStyle_","setExpanded_","styleName","colour","hexColour","console","warn","setColourFromStyle_","setColour_","TreeSeparator","setExpanded","node","getRowElement","style","backgroundColor","oldNode","newNode","show","scrollToStart","keyboardAccessibilityMode","navigation","STATE_TOOLBOX","hide","STATE_WS","event","Events","Ui","content","workspaceId","id","fire","svgResize","onBlocklyAction","action","selected","getSelectedItem","name","actionNames","PREVIOUS","selectPrevious","OUT","selectParent","NEXT","selectNext","IN","selectChild","unsubscribe","removeNode","setVisible","isVisible","display","getWidth","getHeight","getFlyout","treeDiv","svgSize","left","offsetHeight","TOOLBOX_AT_TOP","top","bottom","TOOLBOX_AT_RIGHT","right","offsetWidth","colourValue","hue","isNaN","hueToHex","hex","parse","theme","getTheme","categoryStyles","updateColourFromTheme_","opt_tree","children","getChildren","child","refreshTheme","updateSelectedItemColour_","selectedItem","element","border","borderRight","borderLeft","clearSelection","addStyle","addClass","removeStyle","removeClass","getClientRect","toolboxRect","getBoundingClientRect","Rect","TOOLBOX_AT_BOTTOM","TOOLBOX_AT_LEFT","refreshSelection","selectFirstCategory","config","TreeNode","call","object","inherits","Css","register","registry","Type","TOOLBOX","DEFAULT"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2011 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Toolbox from whence to create blocks.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Toolbox');\n\ngoog.require('Blockly.Css');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.Ui');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.registry');\ngoog.require('Blockly.Touch');\ngoog.require('Blockly.tree.TreeControl');\ngoog.require('Blockly.tree.TreeNode');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.aria');\ngoog.require('Blockly.utils.colour');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.Rect');\ngoog.require('Blockly.utils.toolbox');\n\ngoog.requireType('Blockly.IBlocklyActionable');\ngoog.requireType('Blockly.IDeleteArea');\ngoog.requireType('Blockly.IStyleable');\ngoog.requireType('Blockly.IToolbox');\n\n\n/**\n * Class for a Toolbox.\n * Creates the toolbox's DOM.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace in which to create new\n *     blocks.\n * @constructor\n * @implements {Blockly.IBlocklyActionable}\n * @implements {Blockly.IDeleteArea}\n * @implements {Blockly.IStyleable}\n * @implements {Blockly.IToolbox}\n */\nBlockly.Toolbox = function(workspace) {\n  /**\n   * @type {!Blockly.WorkspaceSvg}\n   * @private\n   */\n  this.workspace_ = workspace;\n\n  /**\n   * Is RTL vs LTR.\n   * @type {boolean}\n   */\n  this.RTL = workspace.options.RTL;\n\n  /**\n   * Whether the toolbox should be laid out horizontally.\n   * @type {boolean}\n   * @private\n   */\n  this.horizontalLayout_ = workspace.options.horizontalLayout;\n\n  /**\n   * Position of the toolbox and flyout relative to the workspace.\n   * @type {number}\n   */\n  this.toolboxPosition = workspace.options.toolboxPosition;\n\n  /**\n   * Configuration constants for Closure's tree UI.\n   * @type {!Object.<string,*>}\n   * @private\n   */\n  this.config_ = {\n    indentWidth: 19,\n    cssRoot: 'blocklyTreeRoot',\n    cssHideRoot: 'blocklyHidden',\n    cssTreeRow: 'blocklyTreeRow',\n    cssItemLabel: 'blocklyTreeLabel',\n    cssTreeIcon: 'blocklyTreeIcon',\n    cssExpandedFolderIcon: 'blocklyTreeIconOpen',\n    cssFileIcon: 'blocklyTreeIconNone',\n    cssSelectedRow: 'blocklyTreeSelected'\n  };\n\n\n  /**\n   * Configuration constants for tree separator.\n   * @type {!Object.<string,*>}\n   * @private\n   */\n  this.treeSeparatorConfig_ = {\n    cssTreeRow: 'blocklyTreeSeparator'\n  };\n\n  if (this.horizontalLayout_) {\n    this.config_['cssTreeRow'] =\n        this.config_['cssTreeRow'] +\n        (workspace.RTL ?\n        ' blocklyHorizontalTreeRtl' : ' blocklyHorizontalTree');\n\n    this.treeSeparatorConfig_['cssTreeRow'] =\n        'blocklyTreeSeparatorHorizontal ' +\n        (workspace.RTL ?\n        'blocklyHorizontalTreeRtl' : 'blocklyHorizontalTree');\n    this.config_['cssTreeIcon'] = '';\n  }\n\n  /**\n   * The toolbox flyout.\n   * @type {Blockly.Flyout}\n   * @private\n   */\n  this.flyout_ = null;\n\n  /**\n   * Width of the toolbox, which changes only in vertical layout.\n   * @type {number}\n   */\n  this.width = 0;\n\n  /**\n   * Height of the toolbox, which changes only in horizontal layout.\n   * @type {number}\n   */\n  this.height = 0;\n\n  /**\n   * The TreeNode most recently selected.\n   * @type {Blockly.tree.BaseNode}\n   * @private\n   */\n  this.lastCategory_ = null;\n};\n\n/**\n * Initializes the toolbox.\n * @throws {Error} If missing a require for both `Blockly.HorizontalFlyout` and\n *     `Blockly.VerticalFlyout`.\n */\nBlockly.Toolbox.prototype.init = function() {\n  var workspace = this.workspace_;\n  var svg = this.workspace_.getParentSvg();\n\n  /**\n   * HTML container for the Toolbox menu.\n   * @type {Element}\n   */\n  this.HtmlDiv = document.createElement('div');\n  this.HtmlDiv.className = 'blocklyToolboxDiv blocklyNonSelectable';\n  this.HtmlDiv.setAttribute('dir', workspace.RTL ? 'RTL' : 'LTR');\n  svg.parentNode.insertBefore(this.HtmlDiv, svg);\n  var themeManager = workspace.getThemeManager();\n  themeManager.subscribe(this.HtmlDiv, 'toolboxBackgroundColour',\n      'background-color');\n  themeManager.subscribe(this.HtmlDiv, 'toolboxForegroundColour', 'color');\n\n  // Clicking on toolbox closes popups.\n  Blockly.bindEventWithChecks_(this.HtmlDiv, 'mousedown', this,\n      function(e) {\n        if (Blockly.utils.isRightButton(e) || e.target == this.HtmlDiv) {\n          // Close flyout.\n          Blockly.hideChaff(false);\n        } else {\n          // Just close popups.\n          Blockly.hideChaff(true);\n        }\n        Blockly.Touch.clearTouchIdentifier();  // Don't block future drags.\n      }, /* opt_noCaptureIdentifier */ false, /* opt_noPreventDefault */ true);\n  var workspaceOptions = new Blockly.Options(\n      /** @type {!Blockly.BlocklyOptions} */\n      ({\n        'parentWorkspace': workspace,\n        'rtl': workspace.RTL,\n        'oneBasedIndex': workspace.options.oneBasedIndex,\n        'horizontalLayout': workspace.horizontalLayout,\n        'renderer': workspace.options.renderer,\n        'rendererOverrides': workspace.options.rendererOverrides\n      }));\n  workspaceOptions.toolboxPosition = workspace.options.toolboxPosition;\n\n  if (workspace.horizontalLayout) {\n    if (!Blockly.HorizontalFlyout) {\n      throw Error('Missing require for Blockly.HorizontalFlyout');\n    }\n    this.flyout_ = new Blockly.HorizontalFlyout(workspaceOptions);\n  } else {\n    if (!Blockly.VerticalFlyout) {\n      throw Error('Missing require for Blockly.VerticalFlyout');\n    }\n    this.flyout_ = new Blockly.VerticalFlyout(workspaceOptions);\n  }\n  if (!this.flyout_) {\n    throw Error('One of Blockly.VerticalFlyout or Blockly.Horizontal must be' +\n        'required.');\n  }\n\n  // Insert the flyout after the workspace.\n  Blockly.utils.dom.insertAfter(this.flyout_.createDom('svg'), svg);\n  this.flyout_.init(workspace);\n\n  this.config_['cssCollapsedFolderIcon'] =\n      'blocklyTreeIconClosed' + (workspace.RTL ? 'Rtl' : 'Ltr');\n  this.render(workspace.options.languageTree);\n};\n\n/**\n * Fill the toolbox with categories and blocks.\n * @param {Array.<Blockly.utils.toolbox.Toolbox>} toolboxDef Array holding objects\n *    containing information on the contents of the toolbox.\n * @package\n */\nBlockly.Toolbox.prototype.render = function(toolboxDef) {\n  if (this.tree_) {\n    this.tree_.dispose();  // Delete any existing content.\n    this.lastCategory_ = null;\n  }\n  var tree = new Blockly.tree.TreeControl(this,\n      /** @type {!Blockly.tree.BaseNode.Config} */ (this.config_));\n  this.tree_ = tree;\n  tree.setSelectedItem(null);\n  tree.onBeforeSelected(this.handleBeforeTreeSelected_);\n  tree.onAfterSelected(this.handleAfterTreeSelected_);\n  var openNode = null;\n  if (toolboxDef) {\n    this.tree_.contents = [];\n    this.hasColours_ = false;\n    openNode = this.createTree_(toolboxDef, this.tree_);\n\n    if (this.tree_.contents.length) {\n      throw Error('Toolbox cannot have both blocks and categories ' +\n          'in the root level.');\n    }\n    // Fire a resize event since the toolbox may have changed width and height.\n    this.workspace_.resizeContents();\n  }\n  tree.render(this.HtmlDiv);\n  if (openNode) {\n    tree.setSelectedItem(openNode);\n  }\n  this.addColour_();\n  this.position();\n\n  // Trees have an implicit orientation of vertical, so we only need to set this\n  // when the toolbox is in horizontal mode.\n  if (this.horizontalLayout_) {\n    Blockly.utils.aria.setState(\n        /** @type {!Element} */ (this.tree_.getElement()),\n        Blockly.utils.aria.State.ORIENTATION, 'horizontal');\n  }\n};\n\n/**\n * Create the toolbox tree.\n * @param {Array.<Blockly.utils.toolbox.Toolbox>} toolboxDef List of objects\n *    holding information on toolbox contents.\n * @param {!Blockly.tree.BaseNode} treeOut The output tree for the toolbox. Due\n *    to the recursive nature of this function, treeOut can be either the root of\n *    the tree (Blockly.tree.TreeControl) or a child node of the tree\n *    (Blockly.tree.TreeNode). These nodes are built from the toolboxDef.\n * @return {Blockly.tree.BaseNode} The TreeNode to expand when the toolbox is\n *    first loaded (or null).\n * @private\n */\nBlockly.Toolbox.prototype.createTree_ = function(toolboxDef, treeOut) {\n  var openNode = null;\n  var lastElement = null;\n  if (!toolboxDef) {\n    return null;\n  }\n\n  for (var i = 0, childIn; (childIn = toolboxDef[i]); i++) {\n    switch (childIn['kind'].toUpperCase()) {\n      case 'CATEGORY':\n        var categoryInfo = /** @type {Blockly.utils.toolbox.Category} */ (childIn);\n        openNode = this.addCategory_(categoryInfo, treeOut) || openNode;\n        lastElement = childIn;\n        break;\n      case 'SEP':\n        var separatorInfo = /** @type {Blockly.utils.toolbox.Separator} */ (childIn);\n        lastElement = this.addSeparator_(separatorInfo, treeOut, lastElement) || lastElement;\n        break;\n      case 'BLOCK':\n      case 'SHADOW':\n      case 'LABEL':\n      case 'BUTTON':\n        treeOut.contents.push(childIn);\n        lastElement = childIn;\n        break;\n    }\n  }\n  return openNode;\n};\n\n/**\n * Add a category to the toolbox tree.\n * @param {!Blockly.utils.toolbox.Category} categoryInfo The object holding\n *    information on the category.\n * @param {!Blockly.tree.BaseNode} treeOut The TreeControl or TreeNode\n *     object built from the childNodes.\n * @return {Blockly.tree.BaseNode} TreeNode to open at startup (or null).\n * @private\n */\nBlockly.Toolbox.prototype.addCategory_ = function(categoryInfo, treeOut) {\n  var openNode = null;\n  // Decode the category name for any potential message references\n  // (eg. `%{BKY_CATEGORY_NAME_LOGIC}`).\n  var categoryName = Blockly.utils.replaceMessageReferences(categoryInfo['name']);\n\n  // Create and add the tree node for the category.\n  var childOut = this.tree_.createNode(categoryName);\n  childOut.onSizeChanged(this.handleNodeSizeChanged_);\n  childOut.contents = [];\n  treeOut.add(childOut);\n\n  var custom = categoryInfo['custom'];\n\n  if (custom) {\n    // Variables and procedures are special dynamic categories.\n    childOut.contents = custom;\n  } else {\n    openNode = this.createTree_(categoryInfo['contents'], childOut) || openNode;\n  }\n  this.setColourOrStyle_(categoryInfo, childOut, categoryName);\n  openNode = this.setExpanded_(categoryInfo, childOut) || openNode;\n  return openNode;\n};\n\n/**\n * Add either the colour or the style for a category.\n * @param {!Blockly.utils.toolbox.Category} categoryInfo The object holding\n *    information on the category.\n * @param {!Blockly.tree.TreeNode} childOut The TreeNode for a category.\n * @param {string} categoryName The name of the category.\n * @private\n */\nBlockly.Toolbox.prototype.setColourOrStyle_ = function(\n    categoryInfo, childOut, categoryName) {\n  var styleName = categoryInfo['categorystyle'];\n  var colour = categoryInfo['colour'];\n\n  if (colour && styleName) {\n    childOut.hexColour = '';\n    console.warn('Toolbox category \"' + categoryName +\n        '\" must not have both a style and a colour');\n  } else if (styleName) {\n    this.setColourFromStyle_(styleName, childOut, categoryName);\n  } else {\n    this.setColour_(colour, childOut, categoryName);\n  }\n};\n\n/**\n * Add a separator to the toolbox tree if it is between categories. Otherwise,\n * add the separator to the list of contents.\n * @param {!Blockly.utils.toolbox.Separator} separatorInfo The object holding\n *    information on the separator.\n * @param {!Blockly.tree.BaseNode} treeOut The TreeControl or TreeNode\n *     object built from the childNodes.\n * @param {Object} lastElement The last element to be added to the tree.\n * @return {Object} The last element to be added to the tree, or\n *     null.\n * @private\n */\nBlockly.Toolbox.prototype.addSeparator_ = function(\n    separatorInfo, treeOut, lastElement) {\n  if (lastElement && lastElement['kind'].toUpperCase() == 'CATEGORY') {\n    // Separator between two categories.\n    // <sep></sep>\n    treeOut.add(new Blockly.Toolbox.TreeSeparator(\n        /** @type {!Blockly.tree.BaseNode.Config} */\n        (this.treeSeparatorConfig_)));\n  } else {\n    // Otherwise add to contents array.\n    treeOut.contents.push(separatorInfo);\n    return separatorInfo;\n  }\n  return null;\n};\n\n/**\n * Checks whether a node should be expanded, and expands if necessary.\n * @param {!Blockly.utils.toolbox.Category} categoryInfo The child to expand.\n * @param {!Blockly.tree.TreeNode} childOut The TreeNode created from childIn.\n * @return {Blockly.tree.BaseNode} TreeNode to open at startup (or null).\n * @private\n */\nBlockly.Toolbox.prototype.setExpanded_ = function(categoryInfo, childOut) {\n  var openNode = null;\n  if (categoryInfo['expanded'] == 'true') {\n    if (childOut.contents.length) {\n      // This is a category that directly contains blocks.\n      // After the tree is rendered, open this category and show flyout.\n      openNode = childOut;\n    }\n    childOut.setExpanded(true);\n  } else {\n    childOut.setExpanded(false);\n  }\n  return openNode;\n};\n\n/**\n * Handle the before tree item selected action.\n * @param {Blockly.tree.BaseNode} node The newly selected node.\n * @return {boolean} Whether or not to cancel selecting the node.\n * @private\n */\nBlockly.Toolbox.prototype.handleBeforeTreeSelected_ = function(node) {\n  if (node == this.tree_) {\n    return false;\n  }\n  if (this.lastCategory_) {\n    this.lastCategory_.getRowElement().style.backgroundColor = '';\n  }\n  if (node) {\n    var hexColour = node.hexColour || '#57e';\n    node.getRowElement().style.backgroundColor = hexColour;\n    // Add colours to child nodes which may have been collapsed and thus\n    // not rendered.\n    this.addColour_(node);\n  }\n  return true;\n};\n\n/**\n * Handle the after tree item selected action.\n * @param {Blockly.tree.BaseNode} oldNode The previously selected node.\n * @param {Blockly.tree.BaseNode} newNode The newly selected node.\n * @private\n */\nBlockly.Toolbox.prototype.handleAfterTreeSelected_ = function(\n    oldNode, newNode) {\n  if (newNode && newNode.contents && newNode.contents.length) {\n    this.flyout_.show(newNode.contents);\n    // Scroll the flyout to the top if the category has changed.\n    if (this.lastCategory_ != newNode) {\n      this.flyout_.scrollToStart();\n    }\n    if (this.workspace_.keyboardAccessibilityMode) {\n      Blockly.navigation.setState(Blockly.navigation.STATE_TOOLBOX);\n    }\n  } else {\n    // Hide the flyout.\n    this.flyout_.hide();\n    if (this.workspace_.keyboardAccessibilityMode &&\n        !(newNode instanceof Blockly.Toolbox.TreeSeparator)) {\n      Blockly.navigation.setState(Blockly.navigation.STATE_WS);\n    }\n  }\n  if (oldNode != newNode && oldNode != this) {\n    var event = new Blockly.Events.Ui(null, 'category',\n        oldNode && oldNode.content, newNode && newNode.content);\n    event.workspaceId = this.workspace_.id;\n    Blockly.Events.fire(event);\n  }\n  if (newNode) {\n    this.lastCategory_ = newNode;\n  }\n};\n\n/**\n * Handle a node sized changed event.\n * @private\n */\nBlockly.Toolbox.prototype.handleNodeSizeChanged_ = function() {\n  // Even though the div hasn't changed size, the visible workspace\n  // surface of the workspace has, so we may need to reposition everything.\n  Blockly.svgResize(this.workspace_);\n};\n\n/**\n * Handles the given Blockly action on a toolbox.\n * This is only triggered when keyboard accessibility mode is enabled.\n * @param {!Blockly.Action} action The action to be handled.\n * @return {boolean} True if the field handled the action, false otherwise.\n * @package\n */\nBlockly.Toolbox.prototype.onBlocklyAction = function(action) {\n  var selected = this.tree_.getSelectedItem();\n  if (!selected) {\n    return false;\n  }\n  switch (action.name) {\n    case Blockly.navigation.actionNames.PREVIOUS:\n      return selected.selectPrevious();\n    case Blockly.navigation.actionNames.OUT:\n      return selected.selectParent();\n    case Blockly.navigation.actionNames.NEXT:\n      return selected.selectNext();\n    case Blockly.navigation.actionNames.IN:\n      return selected.selectChild();\n    default:\n      return false;\n  }\n};\n\n/**\n * Dispose of this toolbox.\n */\nBlockly.Toolbox.prototype.dispose = function() {\n  this.flyout_.dispose();\n  this.tree_.dispose();\n  this.workspace_.getThemeManager().unsubscribe(this.HtmlDiv);\n  Blockly.utils.dom.removeNode(this.HtmlDiv);\n  this.lastCategory_ = null;\n};\n\n/**\n * Toggles the visibility of the toolbox.\n * @param {boolean} isVisible True if toolbox should be visible.\n */\nBlockly.Toolbox.prototype.setVisible = function(isVisible) {\n  this.HtmlDiv.style.display = isVisible ? 'block' : 'none';\n};\n\n/**\n * Get the width of the toolbox.\n * @return {number} The width of the toolbox.\n */\nBlockly.Toolbox.prototype.getWidth = function() {\n  return this.width;\n};\n\n/**\n * Get the height of the toolbox.\n * @return {number} The width of the toolbox.\n */\nBlockly.Toolbox.prototype.getHeight = function() {\n  return this.height;\n};\n\n/**\n * Get the toolbox flyout.\n * @return {Blockly.Flyout} The toolbox flyout.\n */\nBlockly.Toolbox.prototype.getFlyout = function() {\n  return this.flyout_;\n};\n\n/**\n * Move the toolbox to the edge.\n */\nBlockly.Toolbox.prototype.position = function() {\n  var treeDiv = this.HtmlDiv;\n  if (!treeDiv) {\n    // Not initialized yet.\n    return;\n  }\n  var svgSize = Blockly.svgSize(this.workspace_.getParentSvg());\n  if (this.horizontalLayout_) {\n    treeDiv.style.left = '0';\n    treeDiv.style.height = 'auto';\n    treeDiv.style.width = svgSize.width + 'px';\n    this.height = treeDiv.offsetHeight;\n    if (this.toolboxPosition == Blockly.TOOLBOX_AT_TOP) {  // Top\n      treeDiv.style.top = '0';\n    } else {  // Bottom\n      treeDiv.style.bottom = '0';\n    }\n  } else {\n    if (this.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT) {  // Right\n      treeDiv.style.right = '0';\n    } else {  // Left\n      treeDiv.style.left = '0';\n    }\n    treeDiv.style.height = svgSize.height + 'px';\n    this.width = treeDiv.offsetWidth;\n  }\n  this.flyout_.position();\n};\n\n/**\n * Sets the colour on the category.\n * @param {number|string} colourValue HSV hue value (0 to 360), #RRGGBB string,\n *     or a message reference string pointing to one of those two values.\n * @param {Blockly.tree.TreeNode} childOut The child to set the hexColour on.\n * @param {string} categoryName Name of the toolbox category.\n * @private\n */\nBlockly.Toolbox.prototype.setColour_ = function(colourValue, childOut,\n    categoryName) {\n  // Decode the colour for any potential message references\n  // (eg. `%{BKY_MATH_HUE}`).\n  var colour = Blockly.utils.replaceMessageReferences(colourValue);\n  if (colour === null || colour === '') {\n    // No attribute. No colour.\n    childOut.hexColour = '';\n  } else {\n    var hue = Number(colour);\n    if (!isNaN(hue)) {\n      childOut.hexColour = Blockly.hueToHex(hue);\n      this.hasColours_ = true;\n    } else {\n      var hex = Blockly.utils.colour.parse(colour);\n      if (hex) {\n        childOut.hexColour = hex;\n        this.hasColours_ = true;\n      } else {\n        childOut.hexColour = '';\n        console.warn('Toolbox category \"' + categoryName +\n            '\" has unrecognized colour attribute: ' + colour);\n      }\n    }\n  }\n};\n\n/**\n * Retrieves and sets the colour for the category using the style name.\n * The category colour is set from the colour style attribute.\n * @param {string} styleName Name of the style.\n * @param {!Blockly.tree.TreeNode} childOut The child to set the hexColour on.\n * @param {string} categoryName Name of the toolbox category.\n * @private\n */\nBlockly.Toolbox.prototype.setColourFromStyle_ = function(\n    styleName, childOut, categoryName) {\n  childOut.styleName = styleName;\n  var theme = this.workspace_.getTheme();\n  if (styleName && theme) {\n    var style = theme.categoryStyles[styleName];\n    if (style && style.colour) {\n      this.setColour_(style.colour, childOut, categoryName);\n    } else {\n      console.warn('Style \"' + styleName +\n          '\" must exist and contain a colour value');\n    }\n  }\n};\n\n/**\n * Recursively updates all the category colours using the category style name.\n * @param {Blockly.tree.BaseNode=} opt_tree Starting point of tree.\n *     Defaults to the root node.\n * @private\n */\nBlockly.Toolbox.prototype.updateColourFromTheme_ = function(opt_tree) {\n  var tree = opt_tree || this.tree_;\n  if (tree) {\n    var children = tree.getChildren(false);\n    for (var i = 0, child; (child = children[i]); i++) {\n      if (child.styleName) {\n        this.setColourFromStyle_(child.styleName, child, '');\n        this.addColour_();\n      }\n      this.updateColourFromTheme_(child);\n    }\n  }\n};\n\n/**\n * Updates the category colours and background colour of selected categories.\n * @package\n */\nBlockly.Toolbox.prototype.refreshTheme = function() {\n  var tree = this.tree_;\n  if (tree) {\n    this.updateColourFromTheme_(tree);\n    this.updateSelectedItemColour_(tree);\n  }\n};\n\n/**\n * Updates the background colour of the selected category.\n * @param {!Blockly.tree.BaseNode} tree Starting point of tree.\n *     Defaults to the root node.\n * @private\n */\nBlockly.Toolbox.prototype.updateSelectedItemColour_ = function(tree) {\n  var selectedItem = tree.getSelectedItem();\n  if (selectedItem) {\n    var hexColour = selectedItem.hexColour || '#57e';\n    selectedItem.getRowElement().style.backgroundColor = hexColour;\n    this.addColour_(selectedItem);\n  }\n};\n\n\n/**\n * Recursively add colours to this toolbox.\n * @param {Blockly.tree.BaseNode=} opt_tree Starting point of tree.\n *     Defaults to the root node.\n * @private\n */\nBlockly.Toolbox.prototype.addColour_ = function(opt_tree) {\n  var tree = opt_tree || this.tree_;\n  var children = tree.getChildren(false);\n  for (var i = 0, child; (child = children[i]); i++) {\n    var element = child.getRowElement();\n    if (element) {\n      if (this.hasColours_) {\n        var border = '8px solid ' + (child.hexColour || '#ddd');\n      } else {\n        var border = 'none';\n      }\n      if (this.workspace_.RTL) {\n        element.style.borderRight = border;\n      } else {\n        element.style.borderLeft = border;\n      }\n    }\n    this.addColour_(child);\n  }\n};\n\n/**\n * Unhighlight any previously specified option.\n */\nBlockly.Toolbox.prototype.clearSelection = function() {\n  this.tree_.setSelectedItem(null);\n};\n\n/**\n * Adds a style on the toolbox. Usually used to change the cursor.\n * @param {string} style The name of the class to add.\n * @package\n */\nBlockly.Toolbox.prototype.addStyle = function(style) {\n  Blockly.utils.dom.addClass(/** @type {!Element} */ (this.HtmlDiv), style);\n};\n\n/**\n * Removes a style from the toolbox. Usually used to change the cursor.\n * @param {string} style The name of the class to remove.\n * @package\n */\nBlockly.Toolbox.prototype.removeStyle = function(style) {\n  Blockly.utils.dom.removeClass(/** @type {!Element} */ (this.HtmlDiv), style);\n};\n\n/**\n * Return the deletion rectangle for this toolbox.\n * @return {Blockly.utils.Rect} Rectangle in which to delete.\n */\nBlockly.Toolbox.prototype.getClientRect = function() {\n  if (!this.HtmlDiv) {\n    return null;\n  }\n\n  // BIG_NUM is offscreen padding so that blocks dragged beyond the toolbox\n  // area are still deleted.  Must be smaller than Infinity, but larger than\n  // the largest screen size.\n  var BIG_NUM = 10000000;\n  var toolboxRect = this.HtmlDiv.getBoundingClientRect();\n\n  var top = toolboxRect.top;\n  var bottom = top + toolboxRect.height;\n  var left = toolboxRect.left;\n  var right = left + toolboxRect.width;\n\n  // Assumes that the toolbox is on the SVG edge.  If this changes\n  // (e.g. toolboxes in mutators) then this code will need to be more complex.\n  if (this.toolboxPosition == Blockly.TOOLBOX_AT_TOP) {\n    return new Blockly.utils.Rect(-BIG_NUM, bottom, -BIG_NUM, BIG_NUM);\n  } else if (this.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    return new Blockly.utils.Rect(top, BIG_NUM, -BIG_NUM, BIG_NUM);\n  } else if (this.toolboxPosition == Blockly.TOOLBOX_AT_LEFT) {\n    return new Blockly.utils.Rect(-BIG_NUM, BIG_NUM, -BIG_NUM, right);\n  } else {  // Right\n    return new Blockly.utils.Rect(-BIG_NUM, BIG_NUM, left, BIG_NUM);\n  }\n};\n\n/**\n * Update the flyout's contents without closing it.  Should be used in response\n * to a change in one of the dynamic categories, such as variables or\n * procedures.\n */\nBlockly.Toolbox.prototype.refreshSelection = function() {\n  var selectedItem = this.tree_.getSelectedItem();\n  if (selectedItem && selectedItem.contents) {\n    this.flyout_.show(selectedItem.contents);\n  }\n};\n\n/**\n * Select the first toolbox category if no category is selected.\n * @package\n */\nBlockly.Toolbox.prototype.selectFirstCategory = function() {\n  var selectedItem = this.tree_.getSelectedItem();\n  if (!selectedItem) {\n    this.tree_.selectChild();\n  }\n};\n\n/**\n * A blank separator node in the tree.\n * @param {!Blockly.tree.BaseNode.Config} config The configuration for the tree.\n * @constructor\n * @extends {Blockly.tree.TreeNode}\n */\nBlockly.Toolbox.TreeSeparator = function(config) {\n  Blockly.tree.TreeNode.call(this, null, '', config);\n};\nBlockly.utils.object.inherits(Blockly.Toolbox.TreeSeparator,\n    Blockly.tree.TreeNode);\n\n/**\n * CSS for Toolbox.  See css.js for use.\n */\nBlockly.Css.register([\n  /* eslint-disable indent */\n  '.blocklyToolboxDelete {',\n    'cursor: url(\"<<<PATH>>>/handdelete.cur\"), auto;',\n  '}',\n\n  '.blocklyToolboxGrab {',\n    'cursor: url(\"<<<PATH>>>/handclosed.cur\"), auto;',\n    'cursor: grabbing;',\n    'cursor: -webkit-grabbing;',\n  '}',\n\n  /* Category tree in Toolbox. */\n  '.blocklyToolboxDiv {',\n    'background-color: #ddd;',\n    'overflow-x: visible;',\n    'overflow-y: auto;',\n    'position: absolute;',\n    'z-index: 70;', /* so blocks go under toolbox when dragging */\n    '-webkit-tap-highlight-color: transparent;', /* issue #1345 */\n  '}',\n\n  '.blocklyTreeRoot {',\n    'padding: 4px 0;',\n  '}',\n\n  '.blocklyTreeRoot:focus {',\n    'outline: none;',\n  '}',\n\n  '.blocklyTreeRow {',\n    'height: 22px;',\n    'line-height: 22px;',\n    'margin-bottom: 3px;',\n    'padding-right: 8px;',\n    'white-space: nowrap;',\n  '}',\n\n  '.blocklyHorizontalTree {',\n    'float: left;',\n    'margin: 1px 5px 8px 0;',\n  '}',\n\n  '.blocklyHorizontalTreeRtl {',\n    'float: right;',\n    'margin: 1px 0 8px 5px;',\n  '}',\n\n  '.blocklyToolboxDiv[dir=\"RTL\"] .blocklyTreeRow {',\n    'margin-left: 8px;',\n  '}',\n\n  '.blocklyTreeRow:not(.blocklyTreeSelected):hover {',\n    'background-color: rgba(255, 255, 255, 0.2);',\n  '}',\n\n  '.blocklyTreeSeparator {',\n    'border-bottom: solid #e5e5e5 1px;',\n    'height: 0;',\n    'margin: 5px 0;',\n  '}',\n\n  '.blocklyTreeSeparatorHorizontal {',\n    'border-right: solid #e5e5e5 1px;',\n    'width: 0;',\n    'padding: 5px 0;',\n    'margin: 0 5px;',\n  '}',\n\n  '.blocklyTreeIcon {',\n    'background-image: url(<<<PATH>>>/sprites.png);',\n    'height: 16px;',\n    'vertical-align: middle;',\n    'width: 16px;',\n  '}',\n\n  '.blocklyTreeIconClosedLtr {',\n    'background-position: -32px -1px;',\n  '}',\n\n  '.blocklyTreeIconClosedRtl {',\n    'background-position: 0 -1px;',\n  '}',\n\n  '.blocklyTreeIconOpen {',\n    'background-position: -16px -1px;',\n  '}',\n\n  '.blocklyTreeSelected>.blocklyTreeIconClosedLtr {',\n    'background-position: -32px -17px;',\n  '}',\n\n  '.blocklyTreeSelected>.blocklyTreeIconClosedRtl {',\n    'background-position: 0 -17px;',\n  '}',\n\n  '.blocklyTreeSelected>.blocklyTreeIconOpen {',\n    'background-position: -16px -17px;',\n  '}',\n\n  '.blocklyTreeIconNone,',\n  '.blocklyTreeSelected>.blocklyTreeIconNone {',\n    'background-position: -48px -1px;',\n  '}',\n\n  '.blocklyTreeLabel {',\n    'cursor: default;',\n    'font: 16px sans-serif;',\n    'padding: 0 3px;',\n    'vertical-align: middle;',\n  '}',\n\n  '.blocklyToolboxDelete .blocklyTreeLabel {',\n    'cursor: url(\"<<<PATH>>>/handdelete.cur\"), auto;',\n  '}',\n\n  '.blocklyTreeSelected .blocklyTreeLabel {',\n    'color: #fff;',\n  '}'\n  /* eslint-enable indent */\n]);\n\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX,\n    Blockly.registry.DEFAULT, Blockly.Toolbox);\n"],"file":"toolbox.min.js"}