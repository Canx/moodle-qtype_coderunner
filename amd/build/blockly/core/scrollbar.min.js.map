{"version":3,"sources":["../../../src/blockly/core/scrollbar.js"],"names":["goog","provide","require","Blockly","ScrollbarPair","workspace","workspace_","hScroll","Scrollbar","vScroll","corner_","utils","dom","createSvgElement","scrollbarThickness","insertAfter","getBubbleCanvas","oldHostMetrics_","prototype","dispose","removeNode","resize","hostMetrics","getMetrics","resizeH","resizeV","viewWidth","viewHeight","absoluteTop","absoluteLeft","contentWidth","viewLeft","contentLeft","contentHeight","viewTop","contentTop","setAttribute","position","x","y","set","xyRatio","hHandlePosition","ratio","vHandlePosition","hBarLength","scrollViewSize_","vBarLength","getRatio_","setMetrics","setHandlePosition","handlePosition","viewSize","isNaN","horizontal","opt_pair","opt_class","pair_","horizontal_","createDom_","Coordinate","svgBackground_","outerSvg_","svgHandle_","lengthAttribute_","positionAttribute_","scrollbar","onMouseDownBarWrapper_","bindEventWithChecks_","onMouseDownBar_","onMouseDownHandleWrapper_","onMouseDownHandle_","origin_","startDragMouse_","handleLength_","handlePosition_","isVisible_","containerVisible_","Touch","TOUCH_ENABLED","metricsAreEquivalent_","first","second","cleanUp_","unbindEvent_","svgGroup_","getThemeManager","unsubscribe","setHandleLength_","newLength","newPosition","setScrollViewSize_","newSize","setContainerVisible","visible","setPosition","tempX","tempY","setCssTransform","opt_metrics","resizeHorizontal_","resizeVertical_","onScroll_","resizeViewHorizontal","Math","max","xCoordinate","RTL","yCoordinate","resizeContentHorizontal","setVisible","Infinity","handleLength","constrainHandle_","resizeViewVertical","resizeContentVertical","className","radius","floor","subscribe","getParentSvg","isVisible","visibilityChanged","updateDisplay_","Error","show","e","markFocused","clearTouchIdentifier","isRightButton","stopPropagation","mouseXY","mouseToSvg","getInverseScreenCTM","mouseLocation","handleXY","getInjectionDivXY_","handleStart","pageLength","preventDefault","startDragHandle","setupDragSurface","clientX","clientY","onMouseUpWrapper_","document","onMouseUpHandle_","onMouseMoveWrapper_","onMouseMoveHandle_","currentMouse","mouseDelta","resetDragSurface","hideChaff","value","min","setOrigin"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2011 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Library for creating scrollbars.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Scrollbar');\ngoog.provide('Blockly.ScrollbarPair');\n\ngoog.require('Blockly.Touch');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.Metrics');\n\n\n/**\n * A note on units: most of the numbers that are in CSS pixels are scaled if the\n * scrollbar is in a mutator.\n */\n\n/**\n * Class for a pair of scrollbars.  Horizontal and vertical.\n * @param {!Blockly.WorkspaceSvg} workspace Workspace to bind the scrollbars to.\n * @constructor\n */\nBlockly.ScrollbarPair = function(workspace) {\n  this.workspace_ = workspace;\n  this.hScroll = new Blockly.Scrollbar(\n      workspace, true, true, 'blocklyMainWorkspaceScrollbar');\n  this.vScroll = new Blockly.Scrollbar(\n      workspace, false, true, 'blocklyMainWorkspaceScrollbar');\n  this.corner_ = Blockly.utils.dom.createSvgElement(\n      'rect',\n      {\n        'height': Blockly.Scrollbar.scrollbarThickness,\n        'width': Blockly.Scrollbar.scrollbarThickness,\n        'class': 'blocklyScrollbarBackground'\n      },\n      null);\n  Blockly.utils.dom.insertAfter(this.corner_, workspace.getBubbleCanvas());\n\n  /**\n   * Previously recorded metrics from the workspace.\n   * @type {?Blockly.utils.Metrics}\n   * @private\n   */\n  this.oldHostMetrics_ = null;\n};\n\n/**\n * Dispose of this pair of scrollbars.\n * Unlink from all DOM elements to prevent memory leaks.\n */\nBlockly.ScrollbarPair.prototype.dispose = function() {\n  Blockly.utils.dom.removeNode(this.corner_);\n  this.corner_ = null;\n  this.workspace_ = null;\n  this.oldHostMetrics_ = null;\n  this.hScroll.dispose();\n  this.hScroll = null;\n  this.vScroll.dispose();\n  this.vScroll = null;\n};\n\n/**\n * Recalculate both of the scrollbars' locations and lengths.\n * Also reposition the corner rectangle.\n */\nBlockly.ScrollbarPair.prototype.resize = function() {\n  // Look up the host metrics once, and use for both scrollbars.\n  var hostMetrics = this.workspace_.getMetrics();\n  if (!hostMetrics) {\n    // Host element is likely not visible.\n    return;\n  }\n\n  // Only change the scrollbars if there has been a change in metrics.\n  var resizeH = false;\n  var resizeV = false;\n  if (!this.oldHostMetrics_ ||\n      this.oldHostMetrics_.viewWidth != hostMetrics.viewWidth ||\n      this.oldHostMetrics_.viewHeight != hostMetrics.viewHeight ||\n      this.oldHostMetrics_.absoluteTop != hostMetrics.absoluteTop ||\n      this.oldHostMetrics_.absoluteLeft != hostMetrics.absoluteLeft) {\n    // The window has been resized or repositioned.\n    resizeH = true;\n    resizeV = true;\n  } else {\n    // Has the content been resized or moved?\n    if (!this.oldHostMetrics_ ||\n        this.oldHostMetrics_.contentWidth != hostMetrics.contentWidth ||\n        this.oldHostMetrics_.viewLeft != hostMetrics.viewLeft ||\n        this.oldHostMetrics_.contentLeft != hostMetrics.contentLeft) {\n      resizeH = true;\n    }\n    if (!this.oldHostMetrics_ ||\n        this.oldHostMetrics_.contentHeight != hostMetrics.contentHeight ||\n        this.oldHostMetrics_.viewTop != hostMetrics.viewTop ||\n        this.oldHostMetrics_.contentTop != hostMetrics.contentTop) {\n      resizeV = true;\n    }\n  }\n  if (resizeH) {\n    this.hScroll.resize(hostMetrics);\n  }\n  if (resizeV) {\n    this.vScroll.resize(hostMetrics);\n  }\n\n  // Reposition the corner square.\n  if (!this.oldHostMetrics_ ||\n      this.oldHostMetrics_.viewWidth != hostMetrics.viewWidth ||\n      this.oldHostMetrics_.absoluteLeft != hostMetrics.absoluteLeft) {\n    this.corner_.setAttribute('x', this.vScroll.position.x);\n  }\n  if (!this.oldHostMetrics_ ||\n      this.oldHostMetrics_.viewHeight != hostMetrics.viewHeight ||\n      this.oldHostMetrics_.absoluteTop != hostMetrics.absoluteTop) {\n    this.corner_.setAttribute('y', this.hScroll.position.y);\n  }\n\n  // Cache the current metrics to potentially short-cut the next resize event.\n  this.oldHostMetrics_ = hostMetrics;\n};\n\n/**\n * Set the handles of both scrollbars to be at a certain position in CSS pixels\n * relative to their parents.\n * @param {number} x Horizontal scroll value.\n * @param {number} y Vertical scroll value.\n */\nBlockly.ScrollbarPair.prototype.set = function(x, y) {\n  // This function is equivalent to:\n  //   this.hScroll.set(x);\n  //   this.vScroll.set(y);\n  // However, that calls setMetrics twice which causes a chain of\n  // getAttribute->setAttribute->getAttribute resulting in an extra layout pass.\n  // Combining them speeds up rendering.\n  var xyRatio = {};\n\n  var hHandlePosition = x * this.hScroll.ratio;\n  var vHandlePosition = y * this.vScroll.ratio;\n\n  var hBarLength = this.hScroll.scrollViewSize_;\n  var vBarLength = this.vScroll.scrollViewSize_;\n\n  xyRatio.x = this.getRatio_(hHandlePosition, hBarLength);\n  xyRatio.y = this.getRatio_(vHandlePosition, vBarLength);\n  this.workspace_.setMetrics(xyRatio);\n\n  this.hScroll.setHandlePosition(hHandlePosition);\n  this.vScroll.setHandlePosition(vHandlePosition);\n};\n\n/**\n * Helper to calculate the ratio of handle position to scrollbar view size.\n * @param {number} handlePosition The value of the handle.\n * @param {number} viewSize The total size of the scrollbar's view.\n * @return {number} Ratio.\n * @private\n */\nBlockly.ScrollbarPair.prototype.getRatio_ = function(handlePosition, viewSize) {\n  var ratio = handlePosition / viewSize;\n  if (isNaN(ratio)) {\n    return 0;\n  }\n  return ratio;\n};\n\n// --------------------------------------------------------------------\n\n/**\n * Class for a pure SVG scrollbar.\n * This technique offers a scrollbar that is guaranteed to work, but may not\n * look or behave like the system's scrollbars.\n * @param {!Blockly.WorkspaceSvg} workspace Workspace to bind the scrollbar to.\n * @param {boolean} horizontal True if horizontal, false if vertical.\n * @param {boolean=} opt_pair True if scrollbar is part of a horiz/vert pair.\n * @param {string=} opt_class A class to be applied to this scrollbar.\n * @constructor\n */\nBlockly.Scrollbar = function(workspace, horizontal, opt_pair, opt_class) {\n  this.workspace_ = workspace;\n  this.pair_ = opt_pair || false;\n  this.horizontal_ = horizontal;\n  this.oldHostMetrics_ = null;\n\n  /**\n   * @type {?number}\n   * @package\n   */\n  this.ratio = null;\n\n  this.createDom_(opt_class);\n\n  /**\n   * The upper left corner of the scrollbar's SVG group in CSS pixels relative\n   * to the scrollbar's origin.  This is usually relative to the injection div\n   * origin.\n   * @type {Blockly.utils.Coordinate}\n   * @package\n   */\n  this.position = new Blockly.utils.Coordinate(0, 0);\n\n  // Store the thickness in a temp variable for readability.\n  var scrollbarThickness = Blockly.Scrollbar.scrollbarThickness;\n  if (horizontal) {\n    this.svgBackground_.setAttribute('height', scrollbarThickness);\n    this.outerSvg_.setAttribute('height', scrollbarThickness);\n    this.svgHandle_.setAttribute('height', scrollbarThickness - 5);\n    this.svgHandle_.setAttribute('y', 2.5);\n\n    this.lengthAttribute_ = 'width';\n    this.positionAttribute_ = 'x';\n  } else {\n    this.svgBackground_.setAttribute('width', scrollbarThickness);\n    this.outerSvg_.setAttribute('width', scrollbarThickness);\n    this.svgHandle_.setAttribute('width', scrollbarThickness - 5);\n    this.svgHandle_.setAttribute('x', 2.5);\n\n    this.lengthAttribute_ = 'height';\n    this.positionAttribute_ = 'y';\n  }\n  var scrollbar = this;\n  this.onMouseDownBarWrapper_ = Blockly.bindEventWithChecks_(\n      this.svgBackground_, 'mousedown', scrollbar, scrollbar.onMouseDownBar_);\n  this.onMouseDownHandleWrapper_ = Blockly.bindEventWithChecks_(this.svgHandle_,\n      'mousedown', scrollbar, scrollbar.onMouseDownHandle_);\n};\n\n/**\n * The location of the origin of the workspace that the scrollbar is in,\n * measured in CSS pixels relative to the injection div origin.  This is usually\n * (0, 0).  When the scrollbar is in a flyout it may have a different origin.\n * @type {Blockly.utils.Coordinate}\n * @private\n */\nBlockly.Scrollbar.prototype.origin_ = new Blockly.utils.Coordinate(0, 0);\n\n/**\n * The position of the mouse along this scrollbar's major axis at the start of\n * the most recent drag.\n * Units are CSS pixels, with (0, 0) at the top left of the browser window.\n * For a horizontal scrollbar this is the x coordinate of the mouse down event;\n * for a vertical scrollbar it's the y coordinate of the mouse down event.\n * @type {number}\n * @private\n */\nBlockly.Scrollbar.prototype.startDragMouse_ = 0;\n\n/**\n * The size of the area within which the scrollbar handle can move, in CSS\n * pixels.\n * @type {number}\n * @private\n */\nBlockly.Scrollbar.prototype.scrollViewSize_ = 0;\n\n/**\n * The length of the scrollbar handle in CSS pixels.\n * @type {number}\n * @private\n */\nBlockly.Scrollbar.prototype.handleLength_ = 0;\n\n/**\n * The offset of the start of the handle from the scrollbar position, in CSS\n * pixels.\n * @type {number}\n * @private\n */\nBlockly.Scrollbar.prototype.handlePosition_ = 0;\n\n/**\n * Whether the scrollbar handle is visible.\n * @type {boolean}\n * @private\n */\nBlockly.Scrollbar.prototype.isVisible_ = true;\n\n/**\n * Whether the workspace containing this scrollbar is visible.\n * @type {boolean}\n * @private\n */\nBlockly.Scrollbar.prototype.containerVisible_ = true;\n\n/**\n * Width of vertical scrollbar or height of horizontal scrollbar in CSS pixels.\n * Scrollbars should be larger on touch devices.\n */\nBlockly.Scrollbar.scrollbarThickness = 15;\nif (Blockly.Touch.TOUCH_ENABLED) {\n  Blockly.Scrollbar.scrollbarThickness = 25;\n}\n\n/**\n * @param {Blockly.utils.Metrics} first An object containing computed\n *     measurements of a workspace.\n * @param {Blockly.utils.Metrics} second Another object containing computed\n *     measurements of a workspace.\n * @return {boolean} Whether the two sets of metrics are equivalent.\n * @private\n */\nBlockly.Scrollbar.metricsAreEquivalent_ = function(first, second) {\n  if (!(first && second)) {\n    return false;\n  }\n\n  if (first.viewWidth != second.viewWidth ||\n      first.viewHeight != second.viewHeight ||\n      first.viewLeft != second.viewLeft ||\n      first.viewTop != second.viewTop ||\n      first.absoluteTop != second.absoluteTop ||\n      first.absoluteLeft != second.absoluteLeft ||\n      first.contentWidth != second.contentWidth ||\n      first.contentHeight != second.contentHeight ||\n      first.contentLeft != second.contentLeft ||\n      first.contentTop != second.contentTop) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Dispose of this scrollbar.\n * Unlink from all DOM elements to prevent memory leaks.\n */\nBlockly.Scrollbar.prototype.dispose = function() {\n  this.cleanUp_();\n  Blockly.unbindEvent_(this.onMouseDownBarWrapper_);\n  this.onMouseDownBarWrapper_ = null;\n  Blockly.unbindEvent_(this.onMouseDownHandleWrapper_);\n  this.onMouseDownHandleWrapper_ = null;\n\n  Blockly.utils.dom.removeNode(this.outerSvg_);\n  this.outerSvg_ = null;\n  this.svgGroup_ = null;\n  this.svgBackground_ = null;\n  if (this.svgHandle_) {\n    this.workspace_.getThemeManager().unsubscribe(this.svgHandle_);\n    this.svgHandle_ = null;\n  }\n  this.workspace_ = null;\n};\n\n/**\n * Set the length of the scrollbar's handle and change the SVG attribute\n * accordingly.\n * @param {number} newLength The new scrollbar handle length in CSS pixels.\n * @private\n */\nBlockly.Scrollbar.prototype.setHandleLength_ = function(newLength) {\n  this.handleLength_ = newLength;\n  this.svgHandle_.setAttribute(this.lengthAttribute_, this.handleLength_);\n};\n\n/**\n * Set the offset of the scrollbar's handle from the scrollbar's position, and\n * change the SVG attribute accordingly.\n * @param {number} newPosition The new scrollbar handle offset in CSS pixels.\n */\nBlockly.Scrollbar.prototype.setHandlePosition = function(newPosition) {\n  this.handlePosition_ = newPosition;\n  this.svgHandle_.setAttribute(this.positionAttribute_, this.handlePosition_);\n};\n\n/**\n * Set the size of the scrollbar's background and change the SVG attribute\n * accordingly.\n * @param {number} newSize The new scrollbar background length in CSS pixels.\n * @private\n */\nBlockly.Scrollbar.prototype.setScrollViewSize_ = function(newSize) {\n  this.scrollViewSize_ = newSize;\n  this.outerSvg_.setAttribute(this.lengthAttribute_, this.scrollViewSize_);\n  this.svgBackground_.setAttribute(this.lengthAttribute_, this.scrollViewSize_);\n};\n\n/**\n * Set whether this scrollbar's container is visible.\n * @param {boolean} visible Whether the container is visible.\n */\nBlockly.ScrollbarPair.prototype.setContainerVisible = function(visible) {\n  this.hScroll.setContainerVisible(visible);\n  this.vScroll.setContainerVisible(visible);\n};\n\n/**\n * Set the position of the scrollbar's SVG group in CSS pixels relative to the\n * scrollbar's origin.  This sets the scrollbar's location within the workspace.\n * @param {number} x The new x coordinate.\n * @param {number} y The new y coordinate.\n * @package\n */\nBlockly.Scrollbar.prototype.setPosition = function(x, y) {\n  this.position.x = x;\n  this.position.y = y;\n\n  var tempX = this.position.x + this.origin_.x;\n  var tempY = this.position.y + this.origin_.y;\n  var transform = 'translate(' + tempX + 'px,' + tempY + 'px)';\n  Blockly.utils.dom.setCssTransform(this.outerSvg_, transform);\n};\n\n/**\n * Recalculate the scrollbar's location and its length.\n * @param {Blockly.utils.Metrics=} opt_metrics A data structure of from the\n *     describing all the required dimensions.  If not provided, it will be\n *     fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resize = function(opt_metrics) {\n  // Determine the location, height and width of the host element.\n  var hostMetrics = opt_metrics;\n  if (!hostMetrics) {\n    hostMetrics = this.workspace_.getMetrics();\n    if (!hostMetrics) {\n      // Host element is likely not visible.\n      return;\n    }\n  }\n\n  if (Blockly.Scrollbar.metricsAreEquivalent_(hostMetrics,\n      this.oldHostMetrics_)) {\n    return;\n  }\n  this.oldHostMetrics_ = hostMetrics;\n\n  /* hostMetrics is an object with the following properties.\n   * .viewHeight: Height of the visible rectangle,\n   * .viewWidth: Width of the visible rectangle,\n   * .contentHeight: Height of the contents,\n   * .contentWidth: Width of the content,\n   * .viewTop: Offset of top edge of visible rectangle from parent,\n   * .viewLeft: Offset of left edge of visible rectangle from parent,\n   * .contentTop: Offset of the top-most content from the y=0 coordinate,\n   * .contentLeft: Offset of the left-most content from the x=0 coordinate,\n   * .absoluteTop: Top-edge of view.\n   * .absoluteLeft: Left-edge of view.\n   */\n  if (this.horizontal_) {\n    this.resizeHorizontal_(hostMetrics);\n  } else {\n    this.resizeVertical_(hostMetrics);\n  }\n  // Resizing may have caused some scrolling.\n  this.onScroll_();\n};\n\n/**\n * Recalculate a horizontal scrollbar's location and length.\n * @param {!Blockly.utils.Metrics} hostMetrics A data structure describing all\n *     the required dimensions, possibly fetched from the host object.\n * @private\n */\nBlockly.Scrollbar.prototype.resizeHorizontal_ = function(hostMetrics) {\n  // TODO: Inspect metrics to determine if we can get away with just a content\n  // resize.\n  this.resizeViewHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Blockly.utils.Metrics} hostMetrics A data structure describing all\n *     the required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewHorizontal = function(hostMetrics) {\n  var viewSize = hostMetrics.viewWidth - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + 0.5;\n  if (this.pair_ && this.workspace_.RTL) {\n    xCoordinate += Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  // Horizontal toolbar should always be just above the bottom of the workspace.\n  var yCoordinate = hostMetrics.absoluteTop + hostMetrics.viewHeight -\n      Blockly.Scrollbar.scrollbarThickness - 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentHorizontal(hostMetrics);\n};\n\n/**\n * Recalculate a horizontal scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Blockly.utils.Metrics} hostMetrics A data structure describing all\n *     the required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentHorizontal = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    // Ideally this would also apply to scrollbar pairs, but that's a bigger\n    // headache (due to interactions with the corner square).\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentWidth);\n  }\n\n  this.ratio = this.scrollViewSize_ / hostMetrics.contentWidth;\n  if (this.ratio == -Infinity || this.ratio == Infinity ||\n      isNaN(this.ratio)) {\n    this.ratio = 0;\n  }\n\n  var handleLength = hostMetrics.viewWidth * this.ratio;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewLeft - hostMetrics.contentLeft) *\n      this.ratio;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n/**\n * Recalculate a vertical scrollbar's location and length.\n * @param {!Blockly.utils.Metrics} hostMetrics A data structure describing all\n *     the required dimensions, possibly fetched from the host object.\n * @private\n */\nBlockly.Scrollbar.prototype.resizeVertical_ = function(hostMetrics) {\n  // TODO: Inspect metrics to determine if we can get away with just a content\n  // resize.\n  this.resizeViewVertical(hostMetrics);\n};\n\n/**\n * Recalculate a vertical scrollbar's location on the screen and path length.\n * This should be called when the layout or size of the window has changed.\n * @param {!Blockly.utils.Metrics} hostMetrics A data structure describing all\n *     the required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeViewVertical = function(hostMetrics) {\n  var viewSize = hostMetrics.viewHeight - 1;\n  if (this.pair_) {\n    // Shorten the scrollbar to make room for the corner square.\n    viewSize -= Blockly.Scrollbar.scrollbarThickness;\n  }\n  this.setScrollViewSize_(Math.max(0, viewSize));\n\n  var xCoordinate = hostMetrics.absoluteLeft + 0.5;\n  if (!this.workspace_.RTL) {\n    xCoordinate += hostMetrics.viewWidth -\n        Blockly.Scrollbar.scrollbarThickness - 1;\n  }\n  var yCoordinate = hostMetrics.absoluteTop + 0.5;\n  this.setPosition(xCoordinate, yCoordinate);\n\n  // If the view has been resized, a content resize will also be necessary.  The\n  // reverse is not true.\n  this.resizeContentVertical(hostMetrics);\n};\n\n/**\n * Recalculate a vertical scrollbar's location within its path and length.\n * This should be called when the contents of the workspace have changed.\n * @param {!Blockly.utils.Metrics} hostMetrics A data structure describing all\n *     the required dimensions, possibly fetched from the host object.\n */\nBlockly.Scrollbar.prototype.resizeContentVertical = function(hostMetrics) {\n  if (!this.pair_) {\n    // Only show the scrollbar if needed.\n    this.setVisible(this.scrollViewSize_ < hostMetrics.contentHeight);\n  }\n\n  this.ratio = this.scrollViewSize_ / hostMetrics.contentHeight;\n  if (this.ratio == -Infinity || this.ratio == Infinity ||\n      isNaN(this.ratio)) {\n    this.ratio = 0;\n  }\n\n  var handleLength = hostMetrics.viewHeight * this.ratio;\n  this.setHandleLength_(Math.max(0, handleLength));\n\n  var handlePosition = (hostMetrics.viewTop - hostMetrics.contentTop) *\n      this.ratio;\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n};\n\n/**\n * Create all the DOM elements required for a scrollbar.\n * The resulting widget is not sized.\n * @param {string=} opt_class A class to be applied to this scrollbar.\n * @private\n */\nBlockly.Scrollbar.prototype.createDom_ = function(opt_class) {\n  /* Create the following DOM:\n  <svg class=\"blocklyScrollbarHorizontal  optionalClass\">\n    <g>\n      <rect class=\"blocklyScrollbarBackground\" />\n      <rect class=\"blocklyScrollbarHandle\" rx=\"8\" ry=\"8\" />\n    </g>\n  </svg>\n  */\n  var className = 'blocklyScrollbar' +\n      (this.horizontal_ ? 'Horizontal' : 'Vertical');\n  if (opt_class) {\n    className += ' ' + opt_class;\n  }\n  this.outerSvg_ = Blockly.utils.dom.createSvgElement(\n      'svg', {'class': className}, null);\n  this.svgGroup_ = Blockly.utils.dom.createSvgElement('g', {}, this.outerSvg_);\n  this.svgBackground_ = Blockly.utils.dom.createSvgElement(\n      'rect', {'class': 'blocklyScrollbarBackground'}, this.svgGroup_);\n  var radius = Math.floor((Blockly.Scrollbar.scrollbarThickness - 5) / 2);\n  this.svgHandle_ = Blockly.utils.dom.createSvgElement(\n      'rect',\n      {\n        'class': 'blocklyScrollbarHandle',\n        'rx': radius,\n        'ry': radius\n      },\n      this.svgGroup_);\n  this.workspace_.getThemeManager().subscribe(\n      this.svgHandle_, 'scrollbarColour', 'fill');\n  this.workspace_.getThemeManager().subscribe(\n      this.svgHandle_, 'scrollbarOpacity', 'fill-opacity');\n  Blockly.utils.dom.insertAfter(this.outerSvg_,\n      this.workspace_.getParentSvg());\n};\n\n/**\n * Is the scrollbar visible.  Non-paired scrollbars disappear when they aren't\n * needed.\n * @return {boolean} True if visible.\n */\nBlockly.Scrollbar.prototype.isVisible = function() {\n  return this.isVisible_;\n};\n\n/**\n * Set whether the scrollbar's container is visible and update\n * display accordingly if visibility has changed.\n * @param {boolean} visible Whether the container is visible\n */\nBlockly.Scrollbar.prototype.setContainerVisible = function(visible) {\n  var visibilityChanged = (visible != this.containerVisible_);\n\n  this.containerVisible_ = visible;\n  if (visibilityChanged) {\n    this.updateDisplay_();\n  }\n};\n\n/**\n * Set whether the scrollbar is visible.\n * Only applies to non-paired scrollbars.\n * @param {boolean} visible True if visible.\n */\nBlockly.Scrollbar.prototype.setVisible = function(visible) {\n  var visibilityChanged = (visible != this.isVisible());\n\n  // Ideally this would also apply to scrollbar pairs, but that's a bigger\n  // headache (due to interactions with the corner square).\n  if (this.pair_) {\n    throw Error('Unable to toggle visibility of paired scrollbars.');\n  }\n  this.isVisible_ = visible;\n  if (visibilityChanged) {\n    this.updateDisplay_();\n  }\n};\n\n/**\n * Update visibility of scrollbar based on whether it thinks it should\n * be visible and whether its containing workspace is visible.\n * We cannot rely on the containing workspace being hidden to hide us\n * because it is not necessarily our parent in the DOM.\n */\nBlockly.Scrollbar.prototype.updateDisplay_ = function() {\n  var show = true;\n  // Check whether our parent/container is visible.\n  if (!this.containerVisible_) {\n    show = false;\n  } else {\n    show = this.isVisible();\n  }\n  if (show) {\n    this.outerSvg_.setAttribute('display', 'block');\n  } else {\n    this.outerSvg_.setAttribute('display', 'none');\n  }\n};\n\n/**\n * Scroll by one pageful.\n * Called when scrollbar background is clicked.\n * @param {!Event} e Mouse down event.\n * @private\n */\nBlockly.Scrollbar.prototype.onMouseDownBar_ = function(e) {\n  this.workspace_.markFocused();\n  Blockly.Touch.clearTouchIdentifier();  // This is really a click.\n  this.cleanUp_();\n  if (Blockly.utils.isRightButton(e)) {\n    // Right-click.\n    // Scrollbars have no context menu.\n    e.stopPropagation();\n    return;\n  }\n  var mouseXY = Blockly.utils.mouseToSvg(e,\n      this.workspace_.getParentSvg(),\n      this.workspace_.getInverseScreenCTM());\n  var mouseLocation = this.horizontal_ ? mouseXY.x : mouseXY.y;\n\n  var handleXY = Blockly.utils.getInjectionDivXY_(this.svgHandle_);\n  var handleStart = this.horizontal_ ? handleXY.x : handleXY.y;\n  var handlePosition = this.handlePosition_;\n\n  var pageLength = this.handleLength_ * 0.95;\n  if (mouseLocation <= handleStart) {\n    // Decrease the scrollbar's value by a page.\n    handlePosition -= pageLength;\n  } else if (mouseLocation >= handleStart + this.handleLength_) {\n    // Increase the scrollbar's value by a page.\n    handlePosition += pageLength;\n  }\n\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n\n  this.onScroll_();\n  e.stopPropagation();\n  e.preventDefault();\n};\n\n/**\n * Start a dragging operation.\n * Called when scrollbar handle is clicked.\n * @param {!Event} e Mouse down event.\n * @private\n */\nBlockly.Scrollbar.prototype.onMouseDownHandle_ = function(e) {\n  this.workspace_.markFocused();\n  this.cleanUp_();\n  if (Blockly.utils.isRightButton(e)) {\n    // Right-click.\n    // Scrollbars have no context menu.\n    e.stopPropagation();\n    return;\n  }\n  // Look up the current translation and record it.\n  this.startDragHandle = this.handlePosition_;\n\n  // Tell the workspace to setup its drag surface since it is about to move.\n  // onMouseMoveHandle will call onScroll which actually tells the workspace\n  // to move.\n  this.workspace_.setupDragSurface();\n\n  // Record the current mouse position.\n  this.startDragMouse_ = this.horizontal_ ? e.clientX : e.clientY;\n  Blockly.Scrollbar.onMouseUpWrapper_ = Blockly.bindEventWithChecks_(document,\n      'mouseup', this, this.onMouseUpHandle_);\n  Blockly.Scrollbar.onMouseMoveWrapper_ = Blockly.bindEventWithChecks_(document,\n      'mousemove', this, this.onMouseMoveHandle_);\n  e.stopPropagation();\n  e.preventDefault();\n};\n\n/**\n * Drag the scrollbar's handle.\n * @param {!Event} e Mouse up event.\n * @private\n */\nBlockly.Scrollbar.prototype.onMouseMoveHandle_ = function(e) {\n  var currentMouse = this.horizontal_ ? e.clientX : e.clientY;\n  var mouseDelta = currentMouse - this.startDragMouse_;\n  var handlePosition = this.startDragHandle + mouseDelta;\n  // Position the bar.\n  this.setHandlePosition(this.constrainHandle_(handlePosition));\n  this.onScroll_();\n};\n\n/**\n * Release the scrollbar handle and reset state accordingly.\n * @private\n */\nBlockly.Scrollbar.prototype.onMouseUpHandle_ = function() {\n  // Tell the workspace to clean up now that the workspace is done moving.\n  this.workspace_.resetDragSurface();\n  Blockly.Touch.clearTouchIdentifier();\n  this.cleanUp_();\n};\n\n/**\n * Hide chaff and stop binding to mouseup and mousemove events.  Call this to\n * wrap up loose ends associated with the scrollbar.\n * @private\n */\nBlockly.Scrollbar.prototype.cleanUp_ = function() {\n  Blockly.hideChaff(true);\n  if (Blockly.Scrollbar.onMouseUpWrapper_) {\n    Blockly.unbindEvent_(Blockly.Scrollbar.onMouseUpWrapper_);\n    Blockly.Scrollbar.onMouseUpWrapper_ = null;\n  }\n  if (Blockly.Scrollbar.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(Blockly.Scrollbar.onMouseMoveWrapper_);\n    Blockly.Scrollbar.onMouseMoveWrapper_ = null;\n  }\n};\n\n/**\n * Constrain the handle's position within the minimum (0) and maximum\n * (length of scrollbar) values allowed for the scrollbar.\n * @param {number} value Value that is potentially out of bounds, in CSS pixels.\n * @return {number} Constrained value, in CSS pixels.\n * @private\n */\nBlockly.Scrollbar.prototype.constrainHandle_ = function(value) {\n  if (value <= 0 || isNaN(value) || this.scrollViewSize_ < this.handleLength_) {\n    value = 0;\n  } else {\n    value = Math.min(value, this.scrollViewSize_ - this.handleLength_);\n  }\n  return value;\n};\n\n/**\n * Called when scrollbar is moved.\n * @private\n */\nBlockly.Scrollbar.prototype.onScroll_ = function() {\n  var ratio = this.handlePosition_ / this.scrollViewSize_;\n  if (isNaN(ratio)) {\n    ratio = 0;\n  }\n  var xyRatio = {};\n  if (this.horizontal_) {\n    xyRatio.x = ratio;\n  } else {\n    xyRatio.y = ratio;\n  }\n  this.workspace_.setMetrics(xyRatio);\n};\n\n/**\n * Set the scrollbar handle's position.\n * @param {number} value The distance from the top/left end of the bar, in CSS\n *     pixels.  It may be larger than the maximum allowable position of the\n *     scrollbar handle.\n */\nBlockly.Scrollbar.prototype.set = function(value) {\n  this.setHandlePosition(this.constrainHandle_(value * this.ratio));\n  this.onScroll_();\n};\n\n/**\n * Record the origin of the workspace that the scrollbar is in, in pixels\n * relative to the injection div origin. This is for times when the scrollbar is\n * used in an object whose origin isn't the same as the main workspace\n * (e.g. in a flyout.)\n * @param {number} x The x coordinate of the scrollbar's origin, in CSS pixels.\n * @param {number} y The y coordinate of the scrollbar's origin, in CSS pixels.\n */\nBlockly.Scrollbar.prototype.setOrigin = function(x, y) {\n  this.origin_ = new Blockly.utils.Coordinate(x, y);\n};\n"],"file":"scrollbar.min.js"}