{"version":3,"sources":["../../../src/blockly/core/field_colour.js"],"names":["goog","provide","require","Blockly","FieldColour","opt_value","opt_validator","opt_config","superClass_","constructor","call","picker_","highlightedIndex_","onClickWrapper_","onMouseMoveWrapper_","onMouseEnterWrapper_","onMouseLeaveWrapper_","onKeyDownWrapper_","utils","object","inherits","Field","fromJson","options","prototype","SERIALIZABLE","CURSOR","isDirty_","colours_","titles_","columns_","configure_","config","initView","size_","Size","getConstants","FIELD_COLOUR_DEFAULT_WIDTH","FIELD_COLOUR_DEFAULT_HEIGHT","FIELD_COLOUR_FULL_BLOCK","createBorderRect_","borderRect_","style","clickTarget_","sourceBlock_","getSvgRoot","applyColour","fill","getValue","pathObject","svgPath","setAttribute","doClassValidation_","opt_newValue","colour","parse","doValueUpdate_","newValue","value_","rendered","getText","test","COLOURS","DEFAULT_VALUE","TITLES","COLUMNS","setColours","colours","opt_titles","setColumns","columns","showEditor_","dropdownCreate_","DropDownDiv","getContentDiv","appendChild","showPositionedByField","dropdownDispose_","bind","focus","preventScroll","onClick_","e","cell","target","label","setValue","hideIfOwner","onKeyDown_","handled","keyCode","KeyCodes","UP","moveHighlightBy_","DOWN","LEFT","RIGHT","ENTER","highlighted","getHighlighted_","hideWithoutAnimation","stopPropagation","onBlocklyAction","action","navigation","ACTION_PREVIOUS","ACTION_NEXT","ACTION_OUT","ACTION_IN","dx","dy","x","y","Math","floor","length","childNodes","index","setHighlightedCell_","onMouseMove_","getAttribute","onMouseEnter_","onMouseLeave_","blur","dom","removeClass","row","col","addClass","aria","setState","State","ACTIVEDESCENDANT","titles","selectedColour","table","document","createElement","className","tabIndex","dir","setRole","Role","GRID","EXPANDED","ROWCOUNT","COLCOUNT","i","ROW","title","id","IdGenerator","getNextUniqueId","GRIDCELL","LABEL","SELECTED","backgroundColor","bindEventWithChecks_","unbindEvent_","Css","register","fieldRegistry"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Colour input field.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.FieldColour');\n\ngoog.require('Blockly.Css');\ngoog.require('Blockly.DropDownDiv');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.BlockChange');\ngoog.require('Blockly.Field');\ngoog.require('Blockly.fieldRegistry');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.utils.aria');\ngoog.require('Blockly.utils.colour');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.IdGenerator');\ngoog.require('Blockly.utils.KeyCodes');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.Size');\n\n\n/**\n * Class for a colour input field.\n * @param {string=} opt_value The initial value of the field. Should be in\n *    '#rrggbb' format. Defaults to the first value in the default colour array.\n * @param {Function=} opt_validator A function that is called to validate\n *    changes to the field's value. Takes in a colour string & returns a\n *    validated colour string ('#rrggbb' format), or null to abort the change.\n * @param {Object=} opt_config A map of options used to configure the field.\n *    See the [field creation documentation]{@link https://developers.google.com/blockly/guides/create-custom-blocks/fields/built-in-fields/colour}\n *    for a list of properties this parameter supports.\n * @extends {Blockly.Field}\n * @constructor\n */\nBlockly.FieldColour = function(opt_value, opt_validator, opt_config) {\n  Blockly.FieldColour.superClass_.constructor.call(\n      this, opt_value, opt_validator, opt_config);\n\n  /**\n   * The field's colour picker element.\n   * @type {Element}\n   * @private\n   */\n  this.picker_ = null;\n\n  /**\n   * Index of the currently highlighted element.\n   * @type {?number}\n   * @private\n   */\n  this.highlightedIndex_ = null;\n\n  /**\n   * Mouse click event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onClickWrapper_ = null;\n\n  /**\n   * Mouse move event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onMouseMoveWrapper_ = null;\n\n  /**\n   * Mouse enter event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onMouseEnterWrapper_ = null;\n\n  /**\n   * Mouse leave event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onMouseLeaveWrapper_ = null;\n\n  /**\n   * Key down event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onKeyDownWrapper_ = null;\n};\nBlockly.utils.object.inherits(Blockly.FieldColour, Blockly.Field);\n\n/**\n * Construct a FieldColour from a JSON arg object.\n * @param {!Object} options A JSON object with options (colour).\n * @return {!Blockly.FieldColour} The new field instance.\n * @package\n * @nocollapse\n */\nBlockly.FieldColour.fromJson = function(options) {\n  return new Blockly.FieldColour(options['colour'], undefined, options);\n};\n\n/**\n * Serializable fields are saved by the XML renderer, non-serializable fields\n * are not. Editable fields should also be serializable.\n * @type {boolean}\n */\nBlockly.FieldColour.prototype.SERIALIZABLE = true;\n\n/**\n * Mouse cursor style when over the hotspot that initiates the editor.\n */\nBlockly.FieldColour.prototype.CURSOR = 'default';\n\n/**\n * Used to tell if the field needs to be rendered the next time the block is\n * rendered. Colour fields are statically sized, and only need to be\n * rendered at initialization.\n * @type {boolean}\n * @protected\n */\nBlockly.FieldColour.prototype.isDirty_ = false;\n\n/**\n * Array of colours used by this field.  If null, use the global list.\n * @type {Array.<string>}\n * @private\n */\nBlockly.FieldColour.prototype.colours_ = null;\n\n/**\n * Array of colour tooltips used by this field.  If null, use the global list.\n * @type {Array.<string>}\n * @private\n */\nBlockly.FieldColour.prototype.titles_ = null;\n\n/**\n * Number of colour columns used by this field.  If 0, use the global setting.\n * By default use the global constants for columns.\n * @type {number}\n * @private\n */\nBlockly.FieldColour.prototype.columns_ = 0;\n\n/**\n * Configure the field based on the given map of options.\n * @param {!Object} config A map of options to configure the field based on.\n * @private\n */\nBlockly.FieldColour.prototype.configure_ = function(config) {\n  Blockly.FieldColour.superClass_.configure_.call(this, config);\n  if (config['colourOptions']) {\n    this.colours_ = config['colourOptions'];\n    this.titles_ = config['colourTitles'];\n  }\n  if (config['columns']) {\n    this.columns_ = config['columns'];\n  }\n};\n\n/**\n * Create the block UI for this colour field.\n * @package\n */\nBlockly.FieldColour.prototype.initView = function() {\n  this.size_ = new Blockly.utils.Size(\n      this.getConstants().FIELD_COLOUR_DEFAULT_WIDTH,\n      this.getConstants().FIELD_COLOUR_DEFAULT_HEIGHT);\n  if (!this.getConstants().FIELD_COLOUR_FULL_BLOCK) {\n    this.createBorderRect_();\n    this.borderRect_.style['fillOpacity'] = '1';\n  } else {\n    this.clickTarget_ = this.sourceBlock_.getSvgRoot();\n  }\n};\n\n/**\n * @override\n */\nBlockly.FieldColour.prototype.applyColour = function() {\n  if (!this.getConstants().FIELD_COLOUR_FULL_BLOCK) {\n    if (this.borderRect_) {\n      this.borderRect_.style.fill = this.getValue();\n    }\n  } else {\n    this.sourceBlock_.pathObject.svgPath.setAttribute('fill', this.getValue());\n    this.sourceBlock_.pathObject.svgPath.setAttribute('stroke', '#fff');\n  }\n};\n\n/**\n * Ensure that the input value is a valid colour.\n * @param {*=} opt_newValue The input value.\n * @return {?string} A valid colour, or null if invalid.\n * @protected\n */\nBlockly.FieldColour.prototype.doClassValidation_ = function(opt_newValue) {\n  if (typeof opt_newValue != 'string') {\n    return null;\n  }\n  return Blockly.utils.colour.parse(opt_newValue);\n};\n\n/**\n * Update the value of this colour field, and update the displayed colour.\n * @param {*} newValue The value to be saved. The default validator guarantees\n * that this is a colour in '#rrggbb' format.\n * @protected\n */\nBlockly.FieldColour.prototype.doValueUpdate_ = function(newValue) {\n  this.value_ = newValue;\n  if (this.borderRect_) {\n    this.borderRect_.style.fill = newValue;\n  } else if (this.sourceBlock_ && this.sourceBlock_.rendered) {\n    this.sourceBlock_.pathObject.svgPath.setAttribute('fill', newValue);\n    this.sourceBlock_.pathObject.svgPath.setAttribute('stroke', '#fff');\n  }\n};\n\n/**\n * Get the text for this field.  Used when the block is collapsed.\n * @return {string} Text representing the value of this field.\n */\nBlockly.FieldColour.prototype.getText = function() {\n  var colour = /** @type {string} */ (this.value_);\n  // Try to use #rgb format if possible, rather than #rrggbb.\n  if (/^#(.)\\1(.)\\2(.)\\3$/.test(colour)) {\n    colour = '#' + colour[1] + colour[3] + colour[5];\n  }\n  return colour;\n};\n\n/**\n * An array of colour strings for the palette.\n * Copied from goog.ui.ColorPicker.SIMPLE_GRID_COLORS\n * All colour pickers use this unless overridden with setColours.\n * @type {!Array.<string>}\n */\nBlockly.FieldColour.COLOURS = [\n  // grays\n  '#ffffff', '#cccccc', '#c0c0c0', '#999999', '#666666', '#333333', '#000000',\n  // reds\n  '#ffcccc', '#ff6666', '#ff0000', '#cc0000', '#990000', '#660000', '#330000',\n  // oranges\n  '#ffcc99', '#ff9966', '#ff9900', '#ff6600', '#cc6600', '#993300', '#663300',\n  // yellows\n  '#ffff99', '#ffff66', '#ffcc66', '#ffcc33', '#cc9933', '#996633', '#663333',\n  // olives\n  '#ffffcc', '#ffff33', '#ffff00', '#ffcc00', '#999900', '#666600', '#333300',\n  // greens\n  '#99ff99', '#66ff99', '#33ff33', '#33cc00', '#009900', '#006600', '#003300',\n  // turquoises\n  '#99ffff', '#33ffff', '#66cccc', '#00cccc', '#339999', '#336666', '#003333',\n  // blues\n  '#ccffff', '#66ffff', '#33ccff', '#3366ff', '#3333ff', '#000099', '#000066',\n  // purples\n  '#ccccff', '#9999ff', '#6666cc', '#6633ff', '#6600cc', '#333399', '#330099',\n  // violets\n  '#ffccff', '#ff99ff', '#cc66cc', '#cc33cc', '#993399', '#663366', '#330033'\n];\n\n/**\n * The default value for this field.\n * @type {*}\n * @protected\n */\nBlockly.FieldColour.prototype.DEFAULT_VALUE = Blockly.FieldColour.COLOURS[0];\n\n/**\n * An array of tooltip strings for the palette.  If not the same length as\n * COLOURS, the colour's hex code will be used for any missing titles.\n * All colour pickers use this unless overridden with setColours.\n * @type {!Array.<string>}\n */\nBlockly.FieldColour.TITLES = [];\n\n/**\n * Number of columns in the palette.\n * All colour pickers use this unless overridden with setColumns.\n */\nBlockly.FieldColour.COLUMNS = 7;\n\n/**\n * Set a custom colour grid for this field.\n * @param {Array.<string>} colours Array of colours for this block,\n *     or null to use default (Blockly.FieldColour.COLOURS).\n * @param {Array.<string>=} opt_titles Optional array of colour tooltips,\n *     or null to use default (Blockly.FieldColour.TITLES).\n * @return {!Blockly.FieldColour} Returns itself (for method chaining).\n */\nBlockly.FieldColour.prototype.setColours = function(colours, opt_titles) {\n  this.colours_ = colours;\n  if (opt_titles) {\n    this.titles_ = opt_titles;\n  }\n  return this;\n};\n\n/**\n * Set a custom grid size for this field.\n * @param {number} columns Number of columns for this block,\n *     or 0 to use default (Blockly.FieldColour.COLUMNS).\n * @return {!Blockly.FieldColour} Returns itself (for method chaining).\n */\nBlockly.FieldColour.prototype.setColumns = function(columns) {\n  this.columns_ = columns;\n  return this;\n};\n\n/**\n * Create and show the colour field's editor.\n * @protected\n */\nBlockly.FieldColour.prototype.showEditor_ = function() {\n  this.picker_ = this.dropdownCreate_();\n  Blockly.DropDownDiv.getContentDiv().appendChild(this.picker_);\n\n  Blockly.DropDownDiv.showPositionedByField(\n      this, this.dropdownDispose_.bind(this));\n\n  // Focus so we can start receiving keyboard events.\n  this.picker_.focus({preventScroll:true});\n};\n\n/**\n * Handle a click on a colour cell.\n * @param {!MouseEvent} e Mouse event.\n * @private\n */\nBlockly.FieldColour.prototype.onClick_ = function(e) {\n  var cell = /** @type {!Element} */ (e.target);\n  var colour = cell && cell.label;\n  if (colour !== null) {\n    this.setValue(colour);\n    Blockly.DropDownDiv.hideIfOwner(this);\n  }\n};\n\n/**\n * Handle a key down event. Navigate around the grid with the\n * arrow keys. Enter selects the highlighted colour.\n * @param {!KeyboardEvent} e Keyboard event.\n * @private\n */\nBlockly.FieldColour.prototype.onKeyDown_ = function(e) {\n  var handled = false;\n  if (e.keyCode === Blockly.utils.KeyCodes.UP) {\n    this.moveHighlightBy_(0, -1);\n    handled = true;\n  } else if (e.keyCode === Blockly.utils.KeyCodes.DOWN) {\n    this.moveHighlightBy_(0, 1);\n    handled = true;\n  } else if (e.keyCode === Blockly.utils.KeyCodes.LEFT) {\n    this.moveHighlightBy_(-1, 0);\n    handled = true;\n  } else if (e.keyCode === Blockly.utils.KeyCodes.RIGHT) {\n    this.moveHighlightBy_(1, 0);\n    handled = true;\n  } else if (e.keyCode === Blockly.utils.KeyCodes.ENTER) {\n    // Select the highlighted colour.\n    var highlighted = this.getHighlighted_();\n    if (highlighted) {\n      var colour = highlighted && highlighted.label;\n      if (colour !== null) {\n        this.setValue(colour);\n      }\n    }\n    Blockly.DropDownDiv.hideWithoutAnimation();\n    handled = true;\n  }\n  if (handled) {\n    e.stopPropagation();\n  }\n};\n\n/**\n * Handles the given action.\n * This is only triggered when keyboard accessibility mode is enabled.\n * @param {!Blockly.Action} action The action to be handled.\n * @return {boolean} True if the field handled the action, false otherwise.\n * @package\n */\nBlockly.FieldColour.prototype.onBlocklyAction = function(action) {\n  if (this.picker_) {\n    if (action === Blockly.navigation.ACTION_PREVIOUS) {\n      this.moveHighlightBy_(0, -1);\n      return true;\n    } else if (action === Blockly.navigation.ACTION_NEXT) {\n      this.moveHighlightBy_(0, 1);\n      return true;\n    } else if (action === Blockly.navigation.ACTION_OUT) {\n      this.moveHighlightBy_(-1, 0);\n      return true;\n    } else if (action === Blockly.navigation.ACTION_IN) {\n      this.moveHighlightBy_(1, 0);\n      return true;\n    }\n  }\n  return Blockly.FieldColour.superClass_.onBlocklyAction.call(this, action);\n};\n\n/**\n * Move the currently highlighted position by dx and dy.\n * @param {number} dx Change of x\n * @param {number} dy Change of y\n * @private\n */\nBlockly.FieldColour.prototype.moveHighlightBy_ = function(dx, dy) {\n  var colours = this.colours_ || Blockly.FieldColour.COLOURS;\n  var columns = this.columns_ || Blockly.FieldColour.COLUMNS;\n\n  // Get the current x and y coordinates\n  var x = this.highlightedIndex_ % columns;\n  var y = Math.floor(this.highlightedIndex_ / columns);\n\n  // Add the offset\n  x += dx;\n  y += dy;\n\n  if (dx < 0) {\n    // Move left one grid cell, even in RTL.\n    // Loop back to the end of the previous row if we have room.\n    if (x < 0 && y > 0) {\n      x = columns - 1;\n      y--;\n    } else if (x < 0) {\n      x = 0;\n    }\n  } else if (dx > 0) {\n    // Move right one grid cell, even in RTL.\n    // Loop to the start of the next row, if there's room.\n    if (x > columns - 1 &&\n      y < Math.floor(colours.length / columns) - 1) {\n      x = 0;\n      y++;\n    } else if (x > columns - 1) {\n      x--;\n    }\n  } else if (dy < 0) {\n    // Move up one grid cell, stop at the top.\n    if (y < 0) {\n      y = 0;\n    }\n  } else if (dy > 0) {\n    // Move down one grid cell, stop at the bottom.\n    if (y > Math.floor(colours.length / columns) - 1) {\n      y = Math.floor(colours.length / columns) - 1;\n    }\n  }\n\n  // Move the highlight to the new coordinates.\n  var cell = /** @type {!Element} */ (this.picker_.childNodes[y].childNodes[x]);\n  var index = (y * columns) + x;\n  this.setHighlightedCell_(cell, index);\n};\n\n/**\n * Handle a mouse move event. Highlight the hovered colour.\n * @param {!MouseEvent} e Mouse event.\n * @private\n */\nBlockly.FieldColour.prototype.onMouseMove_ = function(e) {\n  var cell = /** @type {!Element} */ (e.target);\n  var index = cell && Number(cell.getAttribute('data-index'));\n  if (index !== null && index !== this.highlightedIndex_) {\n    this.setHighlightedCell_(cell, index);\n  }\n};\n\n/**\n * Handle a mouse enter event. Focus the picker.\n * @private\n */\nBlockly.FieldColour.prototype.onMouseEnter_ = function() {\n  this.picker_.focus({preventScroll:true});\n};\n\n/**\n * Handle a mouse leave event. Blur the picker and unhighlight\n * the currently highlighted colour.\n * @private\n */\nBlockly.FieldColour.prototype.onMouseLeave_ = function() {\n  this.picker_.blur();\n  var highlighted = this.getHighlighted_();\n  if (highlighted) {\n    Blockly.utils.dom.removeClass(highlighted, 'blocklyColourHighlighted');\n  }\n};\n\n/**\n * Returns the currently highlighted item (if any).\n * @return {HTMLElement} Highlighted item (null if none).\n * @private\n */\nBlockly.FieldColour.prototype.getHighlighted_ = function() {\n  var columns = this.columns_ || Blockly.FieldColour.COLUMNS;\n  var x = this.highlightedIndex_ % columns;\n  var y = Math.floor(this.highlightedIndex_ / columns);\n  var row = this.picker_.childNodes[y];\n  if (!row) {\n    return null;\n  }\n  var col = /** @type {HTMLElement} */ (row.childNodes[x]);\n  return col;\n};\n\n/**\n * Update the currently highlighted cell.\n * @param {!Element} cell the new cell to highlight\n * @param {number} index the index of the new cell\n * @private\n */\nBlockly.FieldColour.prototype.setHighlightedCell_ = function(cell, index) {\n  // Unhighlight the current item.\n  var highlighted = this.getHighlighted_();\n  if (highlighted) {\n    Blockly.utils.dom.removeClass(highlighted, 'blocklyColourHighlighted');\n  }\n  // Highlight new item.\n  Blockly.utils.dom.addClass(cell, 'blocklyColourHighlighted');\n  // Set new highlighted index.\n  this.highlightedIndex_ = index;\n\n  // Update accessibility roles.\n  Blockly.utils.aria.setState(/** @type {!Element} */ (this.picker_),\n      Blockly.utils.aria.State.ACTIVEDESCENDANT, cell.getAttribute('id'));\n};\n\n/**\n * Create a colour picker dropdown editor.\n * @return {!Element} The newly created colour picker.\n * @private\n */\nBlockly.FieldColour.prototype.dropdownCreate_ = function() {\n  var columns = this.columns_ || Blockly.FieldColour.COLUMNS;\n  var colours = this.colours_ || Blockly.FieldColour.COLOURS;\n  var titles = this.titles_ || Blockly.FieldColour.TITLES;\n  var selectedColour = this.getValue();\n  // Create the palette.\n  var table = document.createElement('table');\n  table.className = 'blocklyColourTable';\n  table.tabIndex = 0;\n  table.dir = 'ltr';\n  Blockly.utils.aria.setRole(table, Blockly.utils.aria.Role.GRID);\n  Blockly.utils.aria.setState(table, Blockly.utils.aria.State.EXPANDED, true);\n  Blockly.utils.aria.setState(table, Blockly.utils.aria.State.ROWCOUNT,\n      Math.floor(colours.length / columns));\n  Blockly.utils.aria.setState(table, Blockly.utils.aria.State.COLCOUNT,\n      columns);\n  var row;\n  for (var i = 0; i < colours.length; i++) {\n    if (i % columns == 0) {\n      row = document.createElement('tr');\n      Blockly.utils.aria.setRole(row, Blockly.utils.aria.Role.ROW);\n      table.appendChild(row);\n    }\n    var cell = document.createElement('td');\n    row.appendChild(cell);\n    cell.label = colours[i];  // This becomes the value, if clicked.\n    cell.title = titles[i] || colours[i];\n    cell.id = Blockly.utils.IdGenerator.getNextUniqueId();\n    cell.setAttribute('data-index', i);\n    Blockly.utils.aria.setRole(cell, Blockly.utils.aria.Role.GRIDCELL);\n    Blockly.utils.aria.setState(cell,\n        Blockly.utils.aria.State.LABEL, colours[i]);\n    Blockly.utils.aria.setState(cell,\n        Blockly.utils.aria.State.SELECTED, colours[i] == selectedColour);\n    cell.style.backgroundColor = colours[i];\n    if (colours[i] == selectedColour) {\n      cell.className = 'blocklyColourSelected';\n      this.highlightedIndex_ = i;\n    }\n  }\n\n  // Configure event handler on the table to listen for any event in a cell.\n  this.onClickWrapper_ = Blockly.bindEventWithChecks_(table,\n      'click', this, this.onClick_, true);\n  this.onMouseMoveWrapper_ = Blockly.bindEventWithChecks_(table,\n      'mousemove', this, this.onMouseMove_, true);\n  this.onMouseEnterWrapper_ = Blockly.bindEventWithChecks_(table,\n      'mouseenter', this, this.onMouseEnter_, true);\n  this.onMouseLeaveWrapper_ = Blockly.bindEventWithChecks_(table,\n      'mouseleave', this, this.onMouseLeave_, true);\n  this.onKeyDownWrapper_ = Blockly.bindEventWithChecks_(table,\n      'keydown', this, this.onKeyDown_);\n\n  return table;\n};\n\n/**\n * Disposes of events and dom-references belonging to the colour editor.\n * @private\n */\nBlockly.FieldColour.prototype.dropdownDispose_ = function() {\n  if (this.onClickWrapper_) {\n    Blockly.unbindEvent_(this.onClickWrapper_);\n    this.onClickWrapper_ = null;\n  }\n  if (this.onMouseMoveWrapper_) {\n    Blockly.unbindEvent_(this.onMouseMoveWrapper_);\n    this.onMouseMoveWrapper_ = null;\n  }\n  if (this.onMouseEnterWrapper_) {\n    Blockly.unbindEvent_(this.onMouseEnterWrapper_);\n    this.onMouseEnterWrapper_ = null;\n  }\n  if (this.onMouseLeaveWrapper_) {\n    Blockly.unbindEvent_(this.onMouseLeaveWrapper_);\n    this.onMouseLeaveWrapper_ = null;\n  }\n  if (this.onKeyDownWrapper_) {\n    Blockly.unbindEvent_(this.onKeyDownWrapper_);\n    this.onKeyDownWrapper_ = null;\n  }\n  this.picker_ = null;\n  this.highlightedIndex_ = null;\n};\n\n/**\n * CSS for colour picker.  See css.js for use.\n */\nBlockly.Css.register([\n  /* eslint-disable indent */\n  '.blocklyColourTable {',\n    'border-collapse: collapse;',\n    'display: block;',\n    'outline: none;',\n    'padding: 1px;',\n  '}',\n\n  '.blocklyColourTable>tr>td {',\n    'border: .5px solid #888;',\n    'box-sizing: border-box;',\n    'cursor: pointer;',\n    'display: inline-block;',\n    'height: 20px;',\n    'padding: 0;',\n    'width: 20px;',\n  '}',\n\n  '.blocklyColourTable>tr>td.blocklyColourHighlighted {',\n    'border-color: #eee;',\n    'box-shadow: 2px 2px 7px 2px rgba(0,0,0,.3);',\n    'position: relative;',\n  '}',\n\n  '.blocklyColourSelected, .blocklyColourSelected:hover {',\n    'border-color: #eee !important;',\n    'outline: 1px solid #333;',\n    'position: relative;',\n  '}'\n  /* eslint-enable indent */\n]);\n\nBlockly.fieldRegistry.register('field_colour', Blockly.FieldColour);\n"],"file":"field_colour.min.js"}