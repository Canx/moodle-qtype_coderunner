{"version":3,"sources":["../../../src/blockly/core/workspace_comment_svg.js"],"names":["goog","provide","require","requireType","Blockly","WorkspaceCommentSvg","workspace","content","height","width","opt_id","onMouseUpWrapper_","onMouseMoveWrapper_","svgGroup_","utils","dom","createSvgElement","translate_","svgRect_","BORDER_RADIUS","appendChild","rendered_","useDragSurface_","is3dSupported","blockDragSurface_","superClass_","constructor","call","render","object","inherits","WorkspaceComment","DEFAULT_SIZE","prototype","dispose","selected","unselect","cancelCurrentGesture","Events","isEnabled","fire","CommentDelete","removeNode","disposeInternal_","disable","enable","initSvg","rendered","TypeError","options","readOnly","eventsInit_","bindEventWithChecks_","svgRectTarget_","pathMouseDown_","svgHandleTarget_","updateMovable","getSvgRoot","parentNode","getBubbleCanvas","e","gesture","getGesture","handleBubbleStart","showContextMenu","comment","menuOptions","isDeletable","isMovable","push","ContextMenu","commentDuplicateOption","commentDeleteOption","show","RTL","select","oldId","id","event","Ui","workspaceId","addSelect","removeSelect","blurFocus","addClass","setFocus","removeClass","addFocus","removeFocus","getRelativeToSurfaceXY","x","y","dragSurfaceGroup","getGroup","element","xy","getRelativeXY","getCurrentBlock","surfaceTranslation","getSurfaceTranslation","xy_","Coordinate","moveBy","dx","dy","CommentMove","translate","recordNew","resizeContents","setAttribute","moveToDragSurface","clearTransformAttributes_","translateSurface","setBlocksAndShow","moveOffDragSurface","newXY","clearAndHide","getCanvas","moveDuringDrag","dragSurface","newLoc","skew_","moveTo","removeAttribute","getBoundingRectangle","blockXY","commentBounds","getHeightWidth","top","bottom","left","right","Rect","setMovable","movable","setEditable","editable","textarea_","setDragging","adding","group","getContent","value","content_","setContent","setDeleteStyle","setAutoLayout","fromXml","xmlComment","opt_wsWidth","info","parseAttributes","h","w","isNaN","wsWidth","getWidth","fireCreateEvent","toXmlWithXY","opt_noId","toXml","Math","round","getHeight","toCopyData","xml","source","typeCounts","Css","register"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Object representing a code comment on a rendered workspace.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.WorkspaceCommentSvg');\n\ngoog.require('Blockly.Css');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.CommentCreate');\ngoog.require('Blockly.Events.CommentDelete');\ngoog.require('Blockly.Events.CommentMove');\ngoog.require('Blockly.Events.Ui');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.Rect');\ngoog.require('Blockly.WorkspaceComment');\n\ngoog.requireType('Blockly.IBoundedElement');\ngoog.requireType('Blockly.ICopyable');\n\n/**\n * Class for a workspace comment's SVG representation.\n * @param {!Blockly.Workspace} workspace The block's workspace.\n * @param {string} content The content of this workspace comment.\n * @param {number} height Height of the comment.\n * @param {number} width Width of the comment.\n * @param {string=} opt_id Optional ID.  Use this ID if provided, otherwise\n *     create a new ID.\n * @extends {Blockly.WorkspaceComment}\n * @implements {Blockly.IBoundedElement}\n * @implements {Blockly.ICopyable}\n * @constructor\n */\nBlockly.WorkspaceCommentSvg = function(workspace, content, height, width,\n    opt_id) {\n\n  /**\n   * Mouse up event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onMouseUpWrapper_ = null;\n\n  /**\n   * Mouse move event data.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onMouseMoveWrapper_ = null;\n\n  // Create core elements for the block.\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  this.svgGroup_ = Blockly.utils.dom.createSvgElement(\n      'g', {'class': 'blocklyComment'}, null);\n  this.svgGroup_.translate_ = '';\n\n  this.svgRect_ = Blockly.utils.dom.createSvgElement(\n      'rect',\n      {\n        'class': 'blocklyCommentRect',\n        'x': 0,\n        'y': 0,\n        'rx': Blockly.WorkspaceCommentSvg.BORDER_RADIUS,\n        'ry': Blockly.WorkspaceCommentSvg.BORDER_RADIUS\n      });\n  this.svgGroup_.appendChild(this.svgRect_);\n\n  /**\n   * Whether the comment is rendered onscreen and is a part of the DOM.\n   * @type {boolean}\n   * @private\n   */\n  this.rendered_ = false;\n\n  /**\n   * Whether to move the comment to the drag surface when it is dragged.\n   * True if it should move, false if it should be translated directly.\n   * @type {boolean}\n   * @private\n   */\n  this.useDragSurface_ =\n      Blockly.utils.is3dSupported() && !!workspace.blockDragSurface_;\n\n  Blockly.WorkspaceCommentSvg.superClass_.constructor.call(this,\n      workspace, content, height, width, opt_id);\n\n  this.render();\n};\nBlockly.utils.object.inherits(Blockly.WorkspaceCommentSvg,\n    Blockly.WorkspaceComment);\n\n/**\n * The width and height to use to size a workspace comment when it is first\n * added, before it has been edited by the user.\n * @type {number}\n * @package\n */\nBlockly.WorkspaceCommentSvg.DEFAULT_SIZE = 100;\n\n/**\n * Dispose of this comment.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.dispose = function() {\n  if (!this.workspace) {\n    // The comment has already been deleted.\n    return;\n  }\n  // If this comment is being dragged, unlink the mouse events.\n  if (Blockly.selected == this) {\n    this.unselect();\n    this.workspace.cancelCurrentGesture();\n  }\n\n  if (Blockly.Events.isEnabled()) {\n    Blockly.Events.fire(new Blockly.Events.CommentDelete(this));\n  }\n\n  Blockly.utils.dom.removeNode(this.svgGroup_);\n  // Sever JavaScript to DOM connections.\n  this.svgGroup_ = null;\n  this.svgRect_ = null;\n  // Dispose of any rendered components\n  this.disposeInternal_();\n\n  Blockly.Events.disable();\n  Blockly.WorkspaceCommentSvg.superClass_.dispose.call(this);\n  Blockly.Events.enable();\n};\n\n/**\n * Create and initialize the SVG representation of a workspace comment.\n * May be called more than once.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.initSvg = function() {\n  if (!this.workspace.rendered) {\n    throw TypeError('Workspace is headless.');\n  }\n  if (!this.workspace.options.readOnly && !this.eventsInit_) {\n    Blockly.bindEventWithChecks_(\n        this.svgRectTarget_, 'mousedown', this, this.pathMouseDown_);\n    Blockly.bindEventWithChecks_(\n        this.svgHandleTarget_, 'mousedown', this, this.pathMouseDown_);\n  }\n  this.eventsInit_ = true;\n\n  this.updateMovable();\n  if (!this.getSvgRoot().parentNode) {\n    this.workspace.getBubbleCanvas().appendChild(this.getSvgRoot());\n  }\n};\n\n/**\n * Handle a mouse-down on an SVG comment.\n * @param {!Event} e Mouse down event or touch start event.\n * @private\n */\nBlockly.WorkspaceCommentSvg.prototype.pathMouseDown_ = function(e) {\n  var gesture = this.workspace.getGesture(e);\n  if (gesture) {\n    gesture.handleBubbleStart(e, this);\n  }\n};\n\n/**\n * Show the context menu for this workspace comment.\n * @param {!Event} e Mouse event.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.showContextMenu = function(e) {\n  if (this.workspace.options.readOnly) {\n    return;\n  }\n  // Save the current workspace comment in a variable for use in closures.\n  var comment = this;\n  var menuOptions = [];\n\n  if (this.isDeletable() && this.isMovable()) {\n    menuOptions.push(Blockly.ContextMenu.commentDuplicateOption(comment));\n    menuOptions.push(Blockly.ContextMenu.commentDeleteOption(comment));\n  }\n\n  Blockly.ContextMenu.show(e, menuOptions, this.RTL);\n};\n\n/**\n * Select this comment.  Highlight it visually.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.select = function() {\n  if (Blockly.selected == this) {\n    return;\n  }\n  var oldId = null;\n  if (Blockly.selected) {\n    oldId = Blockly.selected.id;\n    // Unselect any previously selected block.\n    Blockly.Events.disable();\n    try {\n      Blockly.selected.unselect();\n    } finally {\n      Blockly.Events.enable();\n    }\n  }\n  var event = new Blockly.Events.Ui(null, 'selected', oldId, this.id);\n  event.workspaceId = this.workspace.id;\n  Blockly.Events.fire(event);\n  Blockly.selected = this;\n  this.addSelect();\n};\n\n/**\n * Unselect this comment.  Remove its highlighting.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.unselect = function() {\n  if (Blockly.selected != this) {\n    return;\n  }\n  var event = new Blockly.Events.Ui(null, 'selected', this.id, null);\n  event.workspaceId = this.workspace.id;\n  Blockly.Events.fire(event);\n  Blockly.selected = null;\n  this.removeSelect();\n  this.blurFocus();\n};\n\n/**\n * Select this comment.  Highlight it visually.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.addSelect = function() {\n  Blockly.utils.dom.addClass(\n      /** @type {!Element} */ (this.svgGroup_), 'blocklySelected');\n  this.setFocus();\n};\n\n/**\n * Unselect this comment.  Remove its highlighting.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.removeSelect = function() {\n  Blockly.utils.dom.removeClass(\n      /** @type {!Element} */ (this.svgGroup_), 'blocklySelected');\n  this.blurFocus();\n};\n\n/**\n * Focus this comment.  Highlight it visually.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.addFocus = function() {\n  Blockly.utils.dom.addClass(\n      /** @type {!Element} */ (this.svgGroup_), 'blocklyFocused');\n};\n\n/**\n * Unfocus this comment.  Remove its highlighting.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.removeFocus = function() {\n  Blockly.utils.dom.removeClass(\n      /** @type {!Element} */ (this.svgGroup_), 'blocklyFocused');\n};\n\n/**\n * Return the coordinates of the top-left corner of this comment relative to\n * the drawing surface's origin (0,0), in workspace units.\n * If the comment is on the workspace, (0, 0) is the origin of the workspace\n * coordinate system.\n * This does not change with workspace scale.\n * @return {!Blockly.utils.Coordinate} Object with .x and .y properties in\n *     workspace coordinates.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.getRelativeToSurfaceXY = function() {\n  var x = 0;\n  var y = 0;\n\n  var dragSurfaceGroup = this.useDragSurface_ ?\n      this.workspace.blockDragSurface_.getGroup() : null;\n\n  var element = this.getSvgRoot();\n  if (element) {\n    do {\n      // Loop through this comment and every parent.\n      var xy = Blockly.utils.getRelativeXY(element);\n      x += xy.x;\n      y += xy.y;\n      // If this element is the current element on the drag surface, include\n      // the translation of the drag surface itself.\n      if (this.useDragSurface_ &&\n          this.workspace.blockDragSurface_.getCurrentBlock() == element) {\n        var surfaceTranslation =\n            this.workspace.blockDragSurface_.getSurfaceTranslation();\n        x += surfaceTranslation.x;\n        y += surfaceTranslation.y;\n      }\n      element = element.parentNode;\n    } while (element && element != this.workspace.getBubbleCanvas() &&\n        element != dragSurfaceGroup);\n  }\n  this.xy_ = new Blockly.utils.Coordinate(x, y);\n  return this.xy_;\n};\n\n/**\n * Move a comment by a relative offset.\n * @param {number} dx Horizontal offset, in workspace units.\n * @param {number} dy Vertical offset, in workspace units.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.moveBy = function(dx, dy) {\n  var event = new Blockly.Events.CommentMove(this);\n  // TODO: Do I need to look up the relative to surface XY position here?\n  var xy = this.getRelativeToSurfaceXY();\n  this.translate(xy.x + dx, xy.y + dy);\n  this.xy_ = new Blockly.utils.Coordinate(xy.x + dx, xy.y + dy);\n  event.recordNew();\n  Blockly.Events.fire(event);\n  this.workspace.resizeContents();\n};\n\n/**\n * Transforms a comment by setting the translation on the transform attribute\n * of the block's SVG.\n * @param {number} x The x coordinate of the translation in workspace units.\n * @param {number} y The y coordinate of the translation in workspace units.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.translate = function(x, y) {\n  this.xy_ = new Blockly.utils.Coordinate(x, y);\n  this.getSvgRoot().setAttribute('transform',\n      'translate(' + x + ',' + y + ')');\n};\n\n/**\n * Move this comment to its workspace's drag surface, accounting for\n * positioning.  Generally should be called at the same time as\n * setDragging(true).  Does nothing if useDragSurface_ is false.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.moveToDragSurface = function() {\n  if (!this.useDragSurface_) {\n    return;\n  }\n  // The translation for drag surface blocks,\n  // is equal to the current relative-to-surface position,\n  // to keep the position in sync as it move on/off the surface.\n  // This is in workspace coordinates.\n  var xy = this.getRelativeToSurfaceXY();\n  this.clearTransformAttributes_();\n  this.workspace.blockDragSurface_.translateSurface(xy.x, xy.y);\n  // Execute the move on the top-level SVG component\n  this.workspace.blockDragSurface_.setBlocksAndShow(this.getSvgRoot());\n};\n\n/**\n * Move this comment back to the workspace block canvas.\n * Generally should be called at the same time as setDragging(false).\n * Does nothing if useDragSurface_ is false.\n * @param {!Blockly.utils.Coordinate} newXY The position the comment should take on\n *     on the workspace canvas, in workspace coordinates.\n * @private\n */\nBlockly.WorkspaceCommentSvg.prototype.moveOffDragSurface = function(newXY) {\n  if (!this.useDragSurface_) {\n    return;\n  }\n  // Translate to current position, turning off 3d.\n  this.translate(newXY.x, newXY.y);\n  this.workspace.blockDragSurface_.clearAndHide(this.workspace.getCanvas());\n};\n\n/**\n * Move this comment during a drag, taking into account whether we are using a\n * drag surface to translate blocks.\n * @param {Blockly.BlockDragSurfaceSvg} dragSurface The surface that carries\n *     rendered items during a drag, or null if no drag surface is in use.\n * @param {!Blockly.utils.Coordinate} newLoc The location to translate to, in\n *     workspace coordinates.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.moveDuringDrag = function(dragSurface,\n    newLoc) {\n  if (dragSurface) {\n    dragSurface.translateSurface(newLoc.x, newLoc.y);\n  } else {\n    this.svgGroup_.translate_ = 'translate(' + newLoc.x + ',' + newLoc.y + ')';\n    this.svgGroup_.setAttribute('transform',\n        this.svgGroup_.translate_ + this.svgGroup_.skew_);\n  }\n};\n\n/**\n * Move the bubble group to the specified location in workspace coordinates.\n * @param {number} x The x position to move to.\n * @param {number} y The y position to move to.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.moveTo = function(x, y) {\n  this.translate(x, y);\n};\n\n/**\n * Clear the comment of transform=\"...\" attributes.\n * Used when the comment is switching from 3d to 2d transform or vice versa.\n * @private\n */\nBlockly.WorkspaceCommentSvg.prototype.clearTransformAttributes_ = function() {\n  this.getSvgRoot().removeAttribute('transform');\n};\n\n/**\n * Returns the coordinates of a bounding box describing the dimensions of this\n * comment.\n * Coordinate system: workspace coordinates.\n * @return {!Blockly.utils.Rect} Object with coordinates of the bounding box.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.getBoundingRectangle = function() {\n  var blockXY = this.getRelativeToSurfaceXY();\n  var commentBounds = this.getHeightWidth();\n  var top = blockXY.y;\n  var bottom = blockXY.y + commentBounds.height;\n  var left, right;\n  if (this.RTL) {\n    left = blockXY.x - commentBounds.width;\n    // Add the width of the tab/puzzle piece knob to the x coordinate\n    // since X is the corner of the rectangle, not the whole puzzle piece.\n    right = blockXY.x;\n  } else {\n    // Subtract the width of the tab/puzzle piece knob to the x coordinate\n    // since X is the corner of the rectangle, not the whole puzzle piece.\n    left = blockXY.x;\n    right = blockXY.x + commentBounds.width;\n  }\n  return new Blockly.utils.Rect(top, bottom, left, right);\n};\n\n/**\n * Add or remove the UI indicating if this comment is movable or not.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.updateMovable = function() {\n  if (this.isMovable()) {\n    Blockly.utils.dom.addClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDraggable');\n  } else {\n    Blockly.utils.dom.removeClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDraggable');\n  }\n};\n\n/**\n * Set whether this comment is movable or not.\n * @param {boolean} movable True if movable.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.setMovable = function(movable) {\n  Blockly.WorkspaceCommentSvg.superClass_.setMovable.call(this, movable);\n  this.updateMovable();\n};\n\n/**\n * Set whether this comment is editable or not.\n * @param {boolean} editable True if editable.\n */\nBlockly.WorkspaceCommentSvg.prototype.setEditable = function(editable) {\n  Blockly.WorkspaceCommentSvg.superClass_.setEditable.call(this, editable);\n  if (this.textarea_) {\n    this.textarea_.readOnly = !editable;\n  }\n};\n\n/**\n * Recursively adds or removes the dragging class to this node and its children.\n * @param {boolean} adding True if adding, false if removing.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.setDragging = function(adding) {\n  if (adding) {\n    var group = this.getSvgRoot();\n    group.translate_ = '';\n    group.skew_ = '';\n    Blockly.utils.dom.addClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDragging');\n  } else {\n    Blockly.utils.dom.removeClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDragging');\n  }\n};\n\n/**\n * Return the root node of the SVG or null if none exists.\n * @return {SVGElement} The root SVG node (probably a group).\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.getSvgRoot = function() {\n  return this.svgGroup_;\n};\n\n/**\n * Returns this comment's text.\n * @return {string} Comment text.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.getContent = function() {\n  return this.textarea_ ? this.textarea_.value : this.content_;\n};\n\n/**\n * Set this comment's content.\n * @param {string} content Comment content.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.setContent = function(content) {\n  Blockly.WorkspaceCommentSvg.superClass_.setContent.call(this, content);\n  if (this.textarea_) {\n    this.textarea_.value = content;\n  }\n};\n\n/**\n * Update the cursor over this comment by adding or removing a class.\n * @param {boolean} enable True if the delete cursor should be shown, false\n *     otherwise.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.setDeleteStyle = function(enable) {\n  if (enable) {\n    Blockly.utils.dom.addClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDraggingDelete');\n  } else {\n    Blockly.utils.dom.removeClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDraggingDelete');\n  }\n};\n\nBlockly.WorkspaceCommentSvg.prototype.setAutoLayout = function() {\n  // NOP for compatibility with the bubble dragger.\n};\n\n/**\n * Decode an XML comment tag and create a rendered comment on the workspace.\n * @param {!Element} xmlComment XML comment element.\n * @param {!Blockly.Workspace} workspace The workspace.\n * @param {number=} opt_wsWidth The width of the workspace, which is used to\n *     position comments correctly in RTL.\n * @return {!Blockly.WorkspaceCommentSvg} The created workspace comment.\n * @package\n */\nBlockly.WorkspaceCommentSvg.fromXml = function(xmlComment, workspace,\n    opt_wsWidth) {\n  Blockly.Events.disable();\n  try {\n    var info = Blockly.WorkspaceComment.parseAttributes(xmlComment);\n\n    var comment = new Blockly.WorkspaceCommentSvg(workspace,\n        info.content, info.h, info.w, info.id);\n    if (workspace.rendered) {\n      comment.initSvg();\n      comment.render(false);\n    }\n    // Position the comment correctly, taking into account the width of a\n    // rendered RTL workspace.\n    if (!isNaN(info.x) && !isNaN(info.y)) {\n      if (workspace.RTL) {\n        var wsWidth = opt_wsWidth || workspace.getWidth();\n        comment.moveBy(wsWidth - info.x, info.y);\n      } else {\n        comment.moveBy(info.x, info.y);\n      }\n    }\n  } finally {\n    Blockly.Events.enable();\n  }\n  Blockly.WorkspaceComment.fireCreateEvent(comment);\n\n  return comment;\n};\n\n/**\n * Encode a comment subtree as XML with XY coordinates.\n * @param {boolean=} opt_noId True if the encoder should skip the comment ID.\n * @return {!Element} Tree of XML elements.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.toXmlWithXY = function(opt_noId) {\n  var width;  // Not used in LTR.\n  if (this.workspace.RTL) {\n    // Here be performance dragons: This calls getMetrics().\n    width = this.workspace.getWidth();\n  }\n  var element = this.toXml(opt_noId);\n  var xy = this.getRelativeToSurfaceXY();\n  element.setAttribute('x',\n      Math.round(this.workspace.RTL ? width - xy.x : xy.x));\n  element.setAttribute('y', Math.round(xy.y));\n  element.setAttribute('h', this.getHeight());\n  element.setAttribute('w', this.getWidth());\n  return element;\n};\n\n/**\n * Encode a comment for copying.\n * @return {!Blockly.ICopyable.CopyData} Copy metadata.\n * @package\n */\nBlockly.WorkspaceCommentSvg.prototype.toCopyData = function() {\n  return {\n    xml: this.toXmlWithXY(),\n    source: this.workspace,\n    typeCounts: null\n  };\n};\n\n/**\n * CSS for workspace comment.  See css.js for use.\n */\nBlockly.Css.register([\n  /* eslint-disable indent */\n  '.blocklyCommentForeignObject {',\n    'position: relative;',\n    'z-index: 0;',\n  '}',\n\n  '.blocklyCommentRect {',\n    'fill: #E7DE8E;',\n    'stroke: #bcA903;',\n    'stroke-width: 1px;',\n  '}',\n\n  '.blocklyCommentTarget {',\n    'fill: transparent;',\n    'stroke: #bcA903;',\n  '}',\n\n  '.blocklyCommentTargetFocused {',\n    'fill: none;',\n  '}',\n\n  '.blocklyCommentHandleTarget {',\n    'fill: none;',\n  '}',\n\n  '.blocklyCommentHandleTargetFocused {',\n    'fill: transparent;',\n  '}',\n\n  '.blocklyFocused>.blocklyCommentRect {',\n    'fill: #B9B272;',\n    'stroke: #B9B272;',\n  '}',\n\n  '.blocklySelected>.blocklyCommentTarget {',\n    'stroke: #fc3;',\n    'stroke-width: 3px;',\n  '}',\n\n  '.blocklyCommentDeleteIcon {',\n    'cursor: pointer;',\n    'fill: #000;',\n    'display: none;',\n  '}',\n\n  '.blocklySelected > .blocklyCommentDeleteIcon {',\n    'display: block;',\n  '}',\n\n  '.blocklyDeleteIconShape {',\n    'fill: #000;',\n    'stroke: #000;',\n    'stroke-width: 1px;',\n  '}',\n\n  '.blocklyDeleteIconShape.blocklyDeleteIconHighlighted {',\n    'stroke: #fc3;',\n  '}'\n  /* eslint-enable indent */\n]);\n"],"file":"workspace_comment_svg.min.js"}