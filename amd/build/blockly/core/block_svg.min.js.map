{"version":3,"sources":["../../../src/blockly/core/block_svg.js"],"names":["goog","provide","require","requireType","Blockly","BlockSvg","workspace","prototypeName","opt_id","svgGroup_","utils","dom","createSvgElement","translate_","style","getRenderer","getConstants","getBlockStyle","pathObject","makePathObject","rendered","renderIsInProgress_","outputConnection","nextConnection","previousConnection","useDragSurface_","is3dSupported","getBlockDragSurface","svgPath","tooltip","Tooltip","bindMouseEvents","superClass_","constructor","call","dataset","id","object","inherits","Block","prototype","height","width","warningTextDb_","INLINE","COLLAPSED_WARNING_ID","decompose","compose","customContextMenu","renderingDebugger","initSvg","TypeError","i","input","inputList","init","icons","getIcons","length","createIcon","applyColour","updateMovable","isMovable","svg","getSvgRoot","options","readOnly","eventsInit_","bindEventWithChecks_","onMouseDown_","parentNode","getCanvas","appendChild","getColourSecondary","colourSecondary","getColourTertiary","colourTertiary","getColourShadow","getColourBorder","colourBorder","colourLight","colourDark","select","isShadow","getParent","selected","oldId","Events","disable","unselect","enable","event","Ui","workspaceId","fire","addSelect","removeSelect","mutator","comment","commentIcon_","warning","push","setParent","newParent","oldParent","parentBlock_","startTextWidthCache","stopTextWidthCache","svgRoot","isClearing","oldXY","getRelativeToSurfaceXY","newXY","moveConnections","x","y","translate","dragSurfaceGroup","getGroup","element","xy","getRelativeXY","getCurrentBlock","surfaceTranslation","getSurfaceTranslation","Coordinate","moveBy","dx","dy","Error","eventsEnabled","isEnabled","BlockMove","recordNew","resizeContents","setAttribute","moveToDragSurface","clearTransformAttributes_","translateSurface","setBlocksAndShow","moveTo","curXY","moveOffDragSurface","clearAndHide","moveDuringDrag","newLoc","skew_","removeAttribute","snapToGrid","isDragging","isInFlyout","grid","getGrid","shouldSnap","spacing","getSpacing","half","Math","round","getBoundingRectangle","blockXY","blockBounds","getHeightWidth","left","right","RTL","Rect","markDirty","constants","setCollapsed","collapsed","collapsed_","updateCollapsed_","render","isCollapsed","collapsedInputName","COLLAPSED_INPUT_NAME","collapsedFieldName","COLLAPSED_FIELD_NAME","name","setVisible","removeInput","icon","text","toString","COLLAPSE_CHARS","field","getField","setValue","getInput","appendDummyInput","appendField","FieldLabel","tab","start","forward","tabCursor","TabNavigateCursor","setCurNode","ASTNode","createFieldNode","currentNode","getCurNode","action","navigation","ACTION_NEXT","ACTION_PREVIOUS","onBlocklyAction","nextNode","nextField","getLocation","showEditor","keyboardAccessibilityMode","getCursor","e","gesture","getGesture","handleBlockStart","showHelp","url","helpUrl","window","open","generateContextMenu","contextMenu","block","menuOptions","isDeletable","ContextMenu","blockDuplicateOption","comments","isEditable","blockCommentOption","type","NEXT_STATEMENT","inlineOption","enabled","isInline","getInputsInline","Msg","callback","setInputsInline","collapse","collapseOption","expandOption","disableOption","getInheritedDisabled","group","setGroup","setEnabled","blockDeleteOption","blockHelpOption","showContextMenu","show","currentBlock","myConnections","getConnections_","computeIconLocation","childBlocks_","setDragging","adding","draggingConnections","concat","addClass","removeClass","setMovable","movable","setEditable","editable","updateEditable","setShadow","shadow","setInsertionMarker","insertionMarker","isInsertionMarker_","setColour","INSERTION_MARKER_COLOUR","updateInsertionMarker","dispose","healStack","animate","unbindMouseEvents","blockWorkspace","cancelCurrentGesture","hide","moveCursorOnBlockDelete","unplug","blockAnimations","disposeUiEffect","n","clearTimeout","removeNode","toCopyData","xml","Xml","blockToDom","deleteNext","source","typeCounts","getBlockTypeCounts","fieldRow","updateDisabled","children","getChildren","child","getCommentIcon","setCommentText","Comment","commentModel","shouldHaveComment","updateText","bumpNeighbours","setWarningText","Warning","Object","create","thisBlock","setTimeout","changedState","parent","getSurroundParent","collapsedParent","setText","oldText","getText","newText","setMutator","setBlock","setDisabled","disabled","console","warn","setHighlighted","highlighted","updateHighlighted","updateSelected","setDeleteStyle","updateDraggingDelete","getColour","colourPrimary","colour","styleObj","getBlockStyleForColour","colour_","setStyle","styleName_","blockStyleName","blockStyle","hat","bringToFront","root","childNodes","setPreviousStatement","newBoolean","opt_check","setNextStatement","setOutput","opt_quiet","removed","moveNumberedInputBefore","inputIndex","refIndex","appendInput_","setConnectionTracking","track","setTracking","targetBlock","conn","connection","all","lastConnectionInStack","getMatchingConnection","otherBlock","makeConnection_","RenderedConnection","rootBlock","getRootBlock","isConnected","isSuperior","neighbours","SNAP_RADIUS","j","otherConnection","getSourceBlock","bumpAwayFrom","scheduleSnapAndBump","BUMP_DELAY","positionNearConnection","sourceConnection","targetConnection","INPUT_VALUE","opt_bubble","updateConnectionLocations_","parentBlock","updateMarkers_","cursorSvg","draw","markerSvg","getMarker","MARKER_NAME","blockTL","moveToOffset","tighten","setCursorSvg","setMarkerSvg","nextBlock","getNextBlock","nextHeightWidth","tabHeight","NOTCH_HEIGHT","max","fadeForReplacement","add","updateReplacementFade","highlightShapeForInput","updateShapeForInputHighlight"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for graphically rendering a block as SVG.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.BlockSvg');\n\ngoog.require('Blockly.ASTNode');\ngoog.require('Blockly.Block');\ngoog.require('Blockly.blockAnimations');\ngoog.require('Blockly.blockRendering.IPathObject');\ngoog.require('Blockly.ContextMenu');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.Ui');\ngoog.require('Blockly.Events.BlockMove');\ngoog.require('Blockly.Msg');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.RenderedConnection');\ngoog.require('Blockly.TabNavigateCursor');\ngoog.require('Blockly.Tooltip');\ngoog.require('Blockly.Touch');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.Rect');\n\ngoog.requireType('Blockly.IASTNodeLocationSvg');\ngoog.requireType('Blockly.IBoundedElement');\ngoog.requireType('Blockly.ICopyable');\n\n\n/**\n * Class for a block's SVG representation.\n * Not normally called directly, workspace.newBlock() is preferred.\n * @param {!Blockly.WorkspaceSvg} workspace The block's workspace.\n * @param {?string} prototypeName Name of the language object containing\n *     type-specific functions for this block.\n * @param {string=} opt_id Optional ID.  Use this ID if provided, otherwise\n *     create a new ID.\n * @extends {Blockly.Block}\n * @implements {Blockly.IASTNodeLocationSvg}\n * @implements {Blockly.IBoundedElement}\n * @implements {Blockly.ICopyable}\n * @constructor\n */\nBlockly.BlockSvg = function(workspace, prototypeName, opt_id) {\n  // Create core elements for the block.\n  /**\n   * @type {!SVGGElement}\n   * @private\n   */\n  this.svgGroup_ = /** @type {!SVGGElement} */ (\n    Blockly.utils.dom.createSvgElement('g', {}, null));\n  this.svgGroup_.translate_ = '';\n\n  /**\n   * A block style object.\n   * @type {!Blockly.Theme.BlockStyle}\n   */\n  this.style = workspace.getRenderer().getConstants().getBlockStyle(null);\n\n  /**\n   * The renderer's path object.\n   * @type {Blockly.blockRendering.IPathObject}\n   * @package\n   */\n  this.pathObject = workspace.getRenderer().makePathObject(\n      this.svgGroup_, this.style);\n\n  /** @type {boolean} */\n  this.rendered = false;\n  /**\n   * Is this block currently rendering? Used to stop recursive render calls\n   * from actually triggering a re-render.\n   * @type {boolean}\n   * @private\n   */\n  this.renderIsInProgress_ = false;\n\n\n  /** @type {!Blockly.WorkspaceSvg} */\n  this.workspace = workspace;\n\n  /** @type {Blockly.RenderedConnection} */\n  this.outputConnection = null;\n  /** @type {Blockly.RenderedConnection} */\n  this.nextConnection = null;\n  /** @type {Blockly.RenderedConnection} */\n  this.previousConnection = null;\n\n  /**\n   * Whether to move the block to the drag surface when it is dragged.\n   * True if it should move, false if it should be translated directly.\n   * @type {boolean}\n   * @private\n   */\n  this.useDragSurface_ =\n      Blockly.utils.is3dSupported() && !!workspace.getBlockDragSurface();\n\n  var svgPath = this.pathObject.svgPath;\n  svgPath.tooltip = this;\n  Blockly.Tooltip.bindMouseEvents(svgPath);\n  Blockly.BlockSvg.superClass_.constructor.call(this,\n      workspace, prototypeName, opt_id);\n\n  // Expose this block's ID on its top-level SVG group.\n  if (this.svgGroup_.dataset) {\n    this.svgGroup_.dataset['id'] = this.id;\n  }\n};\nBlockly.utils.object.inherits(Blockly.BlockSvg, Blockly.Block);\n\n/**\n * Height of this block, not including any statement blocks above or below.\n * Height is in workspace units.\n */\nBlockly.BlockSvg.prototype.height = 0;\n\n/**\n * Width of this block, including any connected value blocks.\n * Width is in workspace units.\n */\nBlockly.BlockSvg.prototype.width = 0;\n\n/**\n * Map from IDs for warnings text to PIDs of functions to apply them.\n * Used to be able to maintain multiple warnings.\n * @type {Object.<string, number>}\n * @private\n */\nBlockly.BlockSvg.prototype.warningTextDb_ = null;\n\n/**\n * Constant for identifying rows that are to be rendered inline.\n * Don't collide with Blockly.INPUT_VALUE and friends.\n * @const\n */\nBlockly.BlockSvg.INLINE = -1;\n\n/**\n * ID to give the \"collapsed warnings\" warning. Allows us to remove the\n * \"collapsed warnings\" warning without removing any warnings that belong to\n * the block.\n * @type {string}\n * @const\n */\nBlockly.BlockSvg.COLLAPSED_WARNING_ID = 'TEMP_COLLAPSED_WARNING_';\n\n/**\n * An optional method called when a mutator dialog is first opened.\n * This function must create and initialize a top-level block for the mutator\n * dialog, and return it. This function should also populate this top-level\n * block with any sub-blocks which are appropriate. This method must also be\n * coupled with defining a `compose` method for the default mutation dialog\n * button and UI to appear.\n * @type {?function(Blockly.WorkspaceSvg):!Blockly.BlockSvg}\n */\nBlockly.BlockSvg.prototype.decompose;\n\n/**\n * An optional method called when a mutator dialog saves its content.\n * This function is called to modify the original block according to new\n * settings. This method must also be coupled with defining a `decompose`\n * method for the default mutation dialog button and UI to appear.\n * @type {?function(!Blockly.BlockSvg)}\n */\nBlockly.BlockSvg.prototype.compose;\n\n/**\n * An optional method for defining custom block context menu items.\n * @type {?function(!Array.<!Object>)}\n */\nBlockly.BlockSvg.prototype.customContextMenu;\n\n/**\n * An property used internally to reference the block's rendering debugger.\n * @type {?Blockly.blockRendering.Debug}\n * @package\n */\nBlockly.BlockSvg.prototype.renderingDebugger;\n\n/**\n * Create and initialize the SVG representation of the block.\n * May be called more than once.\n */\nBlockly.BlockSvg.prototype.initSvg = function() {\n  if (!this.workspace.rendered) {\n    throw TypeError('Workspace is headless.');\n  }\n  for (var i = 0, input; (input = this.inputList[i]); i++) {\n    input.init();\n  }\n  var icons = this.getIcons();\n  for (var i = 0; i < icons.length; i++) {\n    icons[i].createIcon();\n  }\n  this.applyColour();\n  this.pathObject.updateMovable(this.isMovable());\n  var svg = this.getSvgRoot();\n  if (!this.workspace.options.readOnly && !this.eventsInit_ && svg) {\n    Blockly.bindEventWithChecks_(\n        svg, 'mousedown', this, this.onMouseDown_);\n  }\n  this.eventsInit_ = true;\n\n  if (!svg.parentNode) {\n    this.workspace.getCanvas().appendChild(svg);\n  }\n};\n\n/**\n * Get the secondary colour of a block.\n * @return {?string} #RRGGBB string.\n */\nBlockly.BlockSvg.prototype.getColourSecondary = function() {\n  return this.style.colourSecondary;\n};\n\n/**\n * Get the tertiary colour of a block.\n * @return {?string} #RRGGBB string.\n */\nBlockly.BlockSvg.prototype.getColourTertiary = function() {\n  return this.style.colourTertiary;\n};\n\n/**\n * Get the shadow colour of a block.\n * @return {?string} #RRGGBB string.\n * @deprecated Use style.colourSecondary. (2020 January 21)\n */\nBlockly.BlockSvg.prototype.getColourShadow = function() {\n  return this.getColourSecondary();\n};\n\n/**\n * Get the border colour(s) of a block.\n * @return {{colourDark, colourLight, colourBorder}} An object containing\n *     colour values for the border(s) of the block. If the block is using a\n *     style the colourBorder will be defined and equal to the tertiary colour\n *     of the style (#RRGGBB string). Otherwise the colourDark and colourLight\n *     attributes will be defined (#RRGGBB strings).\n * @deprecated Use style.colourTertiary. (2020 January 21)\n */\nBlockly.BlockSvg.prototype.getColourBorder = function() {\n  var colourTertiary = this.getColourTertiary();\n  return {\n    colourBorder: colourTertiary,\n    colourLight: null,\n    colourDark: null\n  };\n};\n\n/**\n * Select this block.  Highlight it visually.\n */\nBlockly.BlockSvg.prototype.select = function() {\n  if (this.isShadow() && this.getParent()) {\n    // Shadow blocks should not be selected.\n    this.getParent().select();\n    return;\n  }\n  if (Blockly.selected == this) {\n    return;\n  }\n  var oldId = null;\n  if (Blockly.selected) {\n    oldId = Blockly.selected.id;\n    // Unselect any previously selected block.\n    Blockly.Events.disable();\n    try {\n      Blockly.selected.unselect();\n    } finally {\n      Blockly.Events.enable();\n    }\n  }\n  var event = new Blockly.Events.Ui(null, 'selected', oldId, this.id);\n  event.workspaceId = this.workspace.id;\n  Blockly.Events.fire(event);\n  Blockly.selected = this;\n  this.addSelect();\n};\n\n/**\n * Unselect this block.  Remove its highlighting.\n */\nBlockly.BlockSvg.prototype.unselect = function() {\n  if (Blockly.selected != this) {\n    return;\n  }\n  var event = new Blockly.Events.Ui(null, 'selected', this.id, null);\n  event.workspaceId = this.workspace.id;\n  Blockly.Events.fire(event);\n  Blockly.selected = null;\n  this.removeSelect();\n};\n\n/**\n * Block's mutator icon (if any).\n * @type {Blockly.Mutator}\n */\nBlockly.BlockSvg.prototype.mutator = null;\n\n/**\n * Block's comment icon (if any).\n * @type {Blockly.Comment}\n * @deprecated August 2019. Use getCommentIcon instead.\n */\nBlockly.BlockSvg.prototype.comment = null;\n\n/**\n * Block's comment icon (if any).\n * @type {Blockly.Comment}\n * @private\n */\nBlockly.BlockSvg.prototype.commentIcon_ = null;\n\n/**\n * Block's warning icon (if any).\n * @type {Blockly.Warning}\n */\nBlockly.BlockSvg.prototype.warning = null;\n\n/**\n * Returns a list of mutator, comment, and warning icons.\n * @return {!Array} List of icons.\n */\nBlockly.BlockSvg.prototype.getIcons = function() {\n  var icons = [];\n  if (this.mutator) {\n    icons.push(this.mutator);\n  }\n  if (this.commentIcon_) {\n    icons.push(this.commentIcon_);\n  }\n  if (this.warning) {\n    icons.push(this.warning);\n  }\n  return icons;\n};\n\n/**\n * Set parent of this block to be a new block or null.\n * @param {Blockly.Block} newParent New parent block.\n * @override\n */\nBlockly.BlockSvg.prototype.setParent = function(newParent) {\n  var oldParent = this.parentBlock_;\n  if (newParent == oldParent) {\n    return;\n  }\n\n  Blockly.utils.dom.startTextWidthCache();\n  Blockly.BlockSvg.superClass_.setParent.call(this, newParent);\n  Blockly.utils.dom.stopTextWidthCache();\n\n  var svgRoot = this.getSvgRoot();\n\n  // Bail early if workspace is clearing, or we aren't rendered.\n  // We won't need to reattach ourselves anywhere.\n  if (this.workspace.isClearing || !svgRoot) {\n    return;\n  }\n\n  var oldXY = this.getRelativeToSurfaceXY();\n  if (newParent) {\n    newParent.getSvgRoot().appendChild(svgRoot);\n    var newXY = this.getRelativeToSurfaceXY();\n    // Move the connections to match the child's new position.\n    this.moveConnections(newXY.x - oldXY.x, newXY.y - oldXY.y);\n  }\n  // If we are losing a parent, we want to move our DOM element to the\n  // root of the workspace.\n  else if (oldParent) {\n    this.workspace.getCanvas().appendChild(svgRoot);\n    this.translate(oldXY.x, oldXY.y);\n  }\n\n  this.applyColour();\n};\n\n/**\n * Return the coordinates of the top-left corner of this block relative to the\n * drawing surface's origin (0,0), in workspace units.\n * If the block is on the workspace, (0, 0) is the origin of the workspace\n * coordinate system.\n * This does not change with workspace scale.\n * @return {!Blockly.utils.Coordinate} Object with .x and .y properties in\n *     workspace coordinates.\n */\nBlockly.BlockSvg.prototype.getRelativeToSurfaceXY = function() {\n  var x = 0;\n  var y = 0;\n\n  var dragSurfaceGroup = this.useDragSurface_ ?\n      this.workspace.getBlockDragSurface().getGroup() : null;\n\n  var element = this.getSvgRoot();\n  if (element) {\n    do {\n      // Loop through this block and every parent.\n      var xy = Blockly.utils.getRelativeXY(element);\n      x += xy.x;\n      y += xy.y;\n      // If this element is the current element on the drag surface, include\n      // the translation of the drag surface itself.\n      if (this.useDragSurface_ &&\n          this.workspace.getBlockDragSurface().getCurrentBlock() == element) {\n        var surfaceTranslation =\n            this.workspace.getBlockDragSurface().getSurfaceTranslation();\n        x += surfaceTranslation.x;\n        y += surfaceTranslation.y;\n      }\n      element = /** @type {!SVGElement} */ (element.parentNode);\n    } while (element && element != this.workspace.getCanvas() &&\n        element != dragSurfaceGroup);\n  }\n  return new Blockly.utils.Coordinate(x, y);\n};\n\n/**\n * Move a block by a relative offset.\n * @param {number} dx Horizontal offset in workspace units.\n * @param {number} dy Vertical offset in workspace units.\n */\nBlockly.BlockSvg.prototype.moveBy = function(dx, dy) {\n  if (this.parentBlock_) {\n    throw Error('Block has parent.');\n  }\n  var eventsEnabled = Blockly.Events.isEnabled();\n  if (eventsEnabled) {\n    var event = new Blockly.Events.BlockMove(this);\n  }\n  var xy = this.getRelativeToSurfaceXY();\n  this.translate(xy.x + dx, xy.y + dy);\n  this.moveConnections(dx, dy);\n  if (eventsEnabled) {\n    event.recordNew();\n    Blockly.Events.fire(event);\n  }\n  this.workspace.resizeContents();\n};\n\n/**\n * Transforms a block by setting the translation on the transform attribute\n * of the block's SVG.\n * @param {number} x The x coordinate of the translation in workspace units.\n * @param {number} y The y coordinate of the translation in workspace units.\n */\nBlockly.BlockSvg.prototype.translate = function(x, y) {\n  this.getSvgRoot().setAttribute('transform',\n      'translate(' + x + ',' + y + ')');\n};\n\n/**\n * Move this block to its workspace's drag surface, accounting for positioning.\n * Generally should be called at the same time as setDragging_(true).\n * Does nothing if useDragSurface_ is false.\n * @package\n */\nBlockly.BlockSvg.prototype.moveToDragSurface = function() {\n  if (!this.useDragSurface_) {\n    return;\n  }\n  // The translation for drag surface blocks,\n  // is equal to the current relative-to-surface position,\n  // to keep the position in sync as it move on/off the surface.\n  // This is in workspace coordinates.\n  var xy = this.getRelativeToSurfaceXY();\n  this.clearTransformAttributes_();\n  this.workspace.getBlockDragSurface().translateSurface(xy.x, xy.y);\n  // Execute the move on the top-level SVG component\n  var svg = this.getSvgRoot();\n  if (svg) {\n    this.workspace.getBlockDragSurface().setBlocksAndShow(svg);\n  }\n};\n\n/**\n * Move a block to a position.\n * @param {Blockly.utils.Coordinate} xy The position to move to in workspace units.\n */\nBlockly.BlockSvg.prototype.moveTo = function(xy) {\n  var curXY = this.getRelativeToSurfaceXY();\n  this.moveBy(xy.x - curXY.x, xy.y - curXY.y);\n};\n\n/**\n * Move this block back to the workspace block canvas.\n * Generally should be called at the same time as setDragging_(false).\n * Does nothing if useDragSurface_ is false.\n * @param {!Blockly.utils.Coordinate} newXY The position the block should take on\n *     on the workspace canvas, in workspace coordinates.\n * @package\n */\nBlockly.BlockSvg.prototype.moveOffDragSurface = function(newXY) {\n  if (!this.useDragSurface_) {\n    return;\n  }\n  // Translate to current position, turning off 3d.\n  this.translate(newXY.x, newXY.y);\n  this.workspace.getBlockDragSurface().clearAndHide(this.workspace.getCanvas());\n};\n\n/**\n * Move this block during a drag, taking into account whether we are using a\n * drag surface to translate blocks.\n * This block must be a top-level block.\n * @param {!Blockly.utils.Coordinate} newLoc The location to translate to, in\n *     workspace coordinates.\n * @package\n */\nBlockly.BlockSvg.prototype.moveDuringDrag = function(newLoc) {\n  if (this.useDragSurface_) {\n    this.workspace.getBlockDragSurface().translateSurface(newLoc.x, newLoc.y);\n  } else {\n    this.svgGroup_.translate_ = 'translate(' + newLoc.x + ',' + newLoc.y + ')';\n    this.svgGroup_.setAttribute('transform',\n        this.svgGroup_.translate_ + this.svgGroup_.skew_);\n  }\n};\n\n/**\n * Clear the block of transform=\"...\" attributes.\n * Used when the block is switching from 3d to 2d transform or vice versa.\n * @private\n */\nBlockly.BlockSvg.prototype.clearTransformAttributes_ = function() {\n  this.getSvgRoot().removeAttribute('transform');\n};\n\n/**\n * Snap this block to the nearest grid point.\n */\nBlockly.BlockSvg.prototype.snapToGrid = function() {\n  if (!this.workspace) {\n    return;  // Deleted block.\n  }\n  if (this.workspace.isDragging()) {\n    return;  // Don't bump blocks during a drag.\n  }\n  if (this.getParent()) {\n    return;  // Only snap top-level blocks.\n  }\n  if (this.isInFlyout) {\n    return;  // Don't move blocks around in a flyout.\n  }\n  var grid = this.workspace.getGrid();\n  if (!grid || !grid.shouldSnap()) {\n    return;  // Config says no snapping.\n  }\n  var spacing = grid.getSpacing();\n  var half = spacing / 2;\n  var xy = this.getRelativeToSurfaceXY();\n  var dx = Math.round((xy.x - half) / spacing) * spacing + half - xy.x;\n  var dy = Math.round((xy.y - half) / spacing) * spacing + half - xy.y;\n  dx = Math.round(dx);\n  dy = Math.round(dy);\n  if (dx != 0 || dy != 0) {\n    this.moveBy(dx, dy);\n  }\n};\n\n/**\n * Returns the coordinates of a bounding box describing the dimensions of this\n * block and any blocks stacked below it.\n * Coordinate system: workspace coordinates.\n * @return {!Blockly.utils.Rect} Object with coordinates of the bounding box.\n */\nBlockly.BlockSvg.prototype.getBoundingRectangle = function() {\n  var blockXY = this.getRelativeToSurfaceXY();\n  var blockBounds = this.getHeightWidth();\n  var left, right;\n  if (this.RTL) {\n    left = blockXY.x - blockBounds.width;\n    right = blockXY.x;\n  } else {\n    left = blockXY.x;\n    right = blockXY.x + blockBounds.width;\n  }\n  return new Blockly.utils.Rect(\n      blockXY.y, blockXY.y + blockBounds.height, left, right);\n};\n\n/**\n * Notify every input on this block to mark its fields as dirty.\n * A dirty field is a field that needs to be re-rendered.\n */\nBlockly.BlockSvg.prototype.markDirty = function() {\n  this.pathObject.constants =\n    (/** @type {!Blockly.WorkspaceSvg} */ (this.workspace))\n        .getRenderer().getConstants();\n  for (var i = 0, input; (input = this.inputList[i]); i++) {\n    input.markDirty();\n  }\n};\n\n/**\n * Set whether the block is collapsed or not.\n * @param {boolean} collapsed True if collapsed.\n */\nBlockly.BlockSvg.prototype.setCollapsed = function(collapsed) {\n  if (this.collapsed_ == collapsed) {\n    return;\n  }\n  Blockly.BlockSvg.superClass_.setCollapsed.call(this, collapsed);\n  if (!collapsed) {\n    this.updateCollapsed_();\n  } else if (this.rendered) {\n    this.render();\n    // Don't bump neighbours. Users like to store collapsed functions together\n    // and bumping makes them go out of alignment.\n  }\n};\n\n/**\n * Makes sure that when the block is collapsed, it is rendered correctly\n * for that state.\n * @private\n */\nBlockly.BlockSvg.prototype.updateCollapsed_ = function() {\n  var collapsed = this.isCollapsed();\n  var collapsedInputName = Blockly.Block.COLLAPSED_INPUT_NAME;\n  var collapsedFieldName = Blockly.Block.COLLAPSED_FIELD_NAME;\n\n  for (var i = 0, input; (input = this.inputList[i]); i++) {\n    if (input.name != collapsedInputName) {\n      input.setVisible(!collapsed);\n    }\n  }\n\n  if (!collapsed) {\n    this.removeInput(collapsedInputName);\n    return;\n  }\n\n  var icons = this.getIcons();\n  for (var i = 0, icon; (icon = icons[i]); i++) {\n    icon.setVisible(false);\n  }\n\n  var text = this.toString(Blockly.COLLAPSE_CHARS);\n  var field = this.getField(collapsedFieldName);\n  if (field) {\n    field.setValue(text);\n    return;\n  }\n  var input = this.getInput(collapsedInputName) ||\n      this.appendDummyInput(collapsedInputName);\n  input.appendField(new Blockly.FieldLabel(text), collapsedFieldName);\n};\n\n/**\n * Open the next (or previous) FieldTextInput.\n * @param {!Blockly.Field} start Current field.\n * @param {boolean} forward If true go forward, otherwise backward.\n */\nBlockly.BlockSvg.prototype.tab = function(start, forward) {\n  var tabCursor = new Blockly.TabNavigateCursor();\n  tabCursor.setCurNode(Blockly.ASTNode.createFieldNode(start));\n  var currentNode = tabCursor.getCurNode();\n  var action = forward ?\n      Blockly.navigation.ACTION_NEXT : Blockly.navigation.ACTION_PREVIOUS;\n\n  tabCursor.onBlocklyAction(action);\n\n  var nextNode = tabCursor.getCurNode();\n  if (nextNode && nextNode !== currentNode) {\n    var nextField = /** @type {!Blockly.Field} */ (nextNode.getLocation());\n    nextField.showEditor();\n\n    // Also move the cursor if we're in keyboard nav mode.\n    if (this.workspace.keyboardAccessibilityMode) {\n      this.workspace.getCursor().setCurNode(nextNode);\n    }\n  }\n};\n\n/**\n * Handle a mouse-down on an SVG block.\n * @param {!Event} e Mouse down event or touch start event.\n * @private\n */\nBlockly.BlockSvg.prototype.onMouseDown_ = function(e) {\n  var gesture = this.workspace && this.workspace.getGesture(e);\n  if (gesture) {\n    gesture.handleBlockStart(e, this);\n  }\n};\n\n/**\n * Load the block's help page in a new window.\n * @package\n */\nBlockly.BlockSvg.prototype.showHelp = function() {\n  var url = (typeof this.helpUrl == 'function') ? this.helpUrl() : this.helpUrl;\n  if (url) {\n    window.open(url);\n  }\n};\n\n/**\n * Generate the context menu for this block.\n * @protected\n * @return {Array.<!Object>} Context menu options\n */\nBlockly.BlockSvg.prototype.generateContextMenu = function() {\n  if (this.workspace.options.readOnly || !this.contextMenu) {\n    return null;\n  }\n  // Save the current block in a variable for use in closures.\n  var block = this;\n  var menuOptions = [];\n\n  if (!this.isInFlyout) {\n    if (this.isDeletable() && this.isMovable()) {\n      menuOptions.push(Blockly.ContextMenu.blockDuplicateOption(block));\n    }\n\n    if (this.workspace.options.comments && !this.collapsed_ &&\n        this.isEditable()) {\n      menuOptions.push(Blockly.ContextMenu.blockCommentOption(block));\n    }\n\n    if (this.isMovable()) {\n      if (!this.collapsed_) {\n        // Option to make block inline.\n        for (var i = 1; i < this.inputList.length; i++) {\n          if (this.inputList[i - 1].type != Blockly.NEXT_STATEMENT &&\n              this.inputList[i].type != Blockly.NEXT_STATEMENT) {\n            // Only display this option if there are two value or dummy inputs\n            // next to each other.\n            var inlineOption = {enabled: true};\n            var isInline = this.getInputsInline();\n            inlineOption.text = isInline ?\n                Blockly.Msg['EXTERNAL_INPUTS'] : Blockly.Msg['INLINE_INPUTS'];\n            inlineOption.callback = function() {\n              block.setInputsInline(!isInline);\n            };\n            menuOptions.push(inlineOption);\n            break;\n          }\n        }\n        // Option to collapse block\n        if (this.workspace.options.collapse) {\n          var collapseOption = {enabled: true};\n          collapseOption.text = Blockly.Msg['COLLAPSE_BLOCK'];\n          collapseOption.callback = function() {\n            block.setCollapsed(true);\n          };\n          menuOptions.push(collapseOption);\n        }\n      } else {\n        // Option to expand block.\n        if (this.workspace.options.collapse) {\n          var expandOption = {enabled: true};\n          expandOption.text = Blockly.Msg['EXPAND_BLOCK'];\n          expandOption.callback = function() {\n            block.setCollapsed(false);\n          };\n          menuOptions.push(expandOption);\n        }\n      }\n    }\n\n    if (this.workspace.options.disable && this.isEditable()) {\n      // Option to disable/enable block.\n      var disableOption = {\n        text: this.isEnabled() ?\n            Blockly.Msg['DISABLE_BLOCK'] : Blockly.Msg['ENABLE_BLOCK'],\n        enabled: !this.getInheritedDisabled(),\n        callback: function() {\n          var group = Blockly.Events.getGroup();\n          if (!group) {\n            Blockly.Events.setGroup(true);\n          }\n          block.setEnabled(!block.isEnabled());\n          if (!group) {\n            Blockly.Events.setGroup(false);\n          }\n        }\n      };\n      menuOptions.push(disableOption);\n    }\n\n    if (this.isDeletable()) {\n      menuOptions.push(Blockly.ContextMenu.blockDeleteOption(block));\n    }\n  }\n\n  menuOptions.push(Blockly.ContextMenu.blockHelpOption(block));\n\n  // Allow the block to add or modify menuOptions.\n  if (this.customContextMenu) {\n    this.customContextMenu(menuOptions);\n  }\n\n  return menuOptions;\n};\n\n/**\n * Show the context menu for this block.\n * @param {!Event} e Mouse event.\n * @package\n */\nBlockly.BlockSvg.prototype.showContextMenu = function(e) {\n  var menuOptions = this.generateContextMenu();\n\n  if (menuOptions && menuOptions.length) {\n    Blockly.ContextMenu.show(e, menuOptions, this.RTL);\n    Blockly.ContextMenu.currentBlock = this;\n  }\n};\n\n/**\n * Move the connections for this block and all blocks attached under it.\n * Also update any attached bubbles.\n * @param {number} dx Horizontal offset from current location, in workspace\n *     units.\n * @param {number} dy Vertical offset from current location, in workspace\n *     units.\n * @package\n */\nBlockly.BlockSvg.prototype.moveConnections = function(dx, dy) {\n  if (!this.rendered) {\n    // Rendering is required to lay out the blocks.\n    // This is probably an invisible block attached to a collapsed block.\n    return;\n  }\n  var myConnections = this.getConnections_(false);\n  for (var i = 0; i < myConnections.length; i++) {\n    myConnections[i].moveBy(dx, dy);\n  }\n  var icons = this.getIcons();\n  for (var i = 0; i < icons.length; i++) {\n    icons[i].computeIconLocation();\n  }\n\n  // Recurse through all blocks attached under this one.\n  for (var i = 0; i < this.childBlocks_.length; i++) {\n    this.childBlocks_[i].moveConnections(dx, dy);\n  }\n};\n\n/**\n * Recursively adds or removes the dragging class to this node and its children.\n * @param {boolean} adding True if adding, false if removing.\n * @package\n */\nBlockly.BlockSvg.prototype.setDragging = function(adding) {\n  if (adding) {\n    var group = this.getSvgRoot();\n    group.translate_ = '';\n    group.skew_ = '';\n    Blockly.draggingConnections =\n        Blockly.draggingConnections.concat(this.getConnections_(true));\n    Blockly.utils.dom.addClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDragging');\n  } else {\n    Blockly.draggingConnections = [];\n    Blockly.utils.dom.removeClass(\n        /** @type {!Element} */ (this.svgGroup_), 'blocklyDragging');\n  }\n  // Recurse through all blocks attached under this one.\n  for (var i = 0; i < this.childBlocks_.length; i++) {\n    this.childBlocks_[i].setDragging(adding);\n  }\n};\n\n/**\n * Set whether this block is movable or not.\n * @param {boolean} movable True if movable.\n */\nBlockly.BlockSvg.prototype.setMovable = function(movable) {\n  Blockly.BlockSvg.superClass_.setMovable.call(this, movable);\n  this.pathObject.updateMovable(movable);\n};\n\n/**\n * Set whether this block is editable or not.\n * @param {boolean} editable True if editable.\n */\nBlockly.BlockSvg.prototype.setEditable = function(editable) {\n  Blockly.BlockSvg.superClass_.setEditable.call(this, editable);\n  var icons = this.getIcons();\n  for (var i = 0; i < icons.length; i++) {\n    icons[i].updateEditable();\n  }\n};\n\n/**\n * Set whether this block is a shadow block or not.\n * @param {boolean} shadow True if a shadow.\n */\nBlockly.BlockSvg.prototype.setShadow = function(shadow) {\n  Blockly.BlockSvg.superClass_.setShadow.call(this, shadow);\n  this.applyColour();\n};\n\n/**\n * Set whether this block is an insertion marker block or not.\n * Once set this cannot be unset.\n * @param {boolean} insertionMarker True if an insertion marker.\n * @package\n */\nBlockly.BlockSvg.prototype.setInsertionMarker = function(insertionMarker) {\n  if (this.isInsertionMarker_ == insertionMarker) {\n    return;  // No change.\n  }\n  this.isInsertionMarker_ = insertionMarker;\n  if (this.isInsertionMarker_) {\n    this.setColour(this.workspace.getRenderer().getConstants().\n        INSERTION_MARKER_COLOUR);\n    this.pathObject.updateInsertionMarker(true);\n  }\n};\n\n/**\n * Return the root node of the SVG or null if none exists.\n * @return {!SVGGElement} The root SVG node (probably a group).\n */\nBlockly.BlockSvg.prototype.getSvgRoot = function() {\n  return this.svgGroup_;\n};\n\n/**\n * Dispose of this block.\n * @param {boolean=} healStack If true, then try to heal any gap by connecting\n *     the next statement with the previous statement.  Otherwise, dispose of\n *     all children of this block.\n * @param {boolean=} animate If true, show a disposal animation and sound.\n * @suppress {checkTypes}\n */\nBlockly.BlockSvg.prototype.dispose = function(healStack, animate) {\n  if (!this.workspace) {\n    // The block has already been deleted.\n    return;\n  }\n  Blockly.Tooltip.dispose();\n  Blockly.Tooltip.unbindMouseEvents(this.pathObject.svgPath);\n  Blockly.utils.dom.startTextWidthCache();\n  // Save the block's workspace temporarily so we can resize the\n  // contents once the block is disposed.\n  var blockWorkspace = this.workspace;\n  // If this block is being dragged, unlink the mouse events.\n  if (Blockly.selected == this) {\n    this.unselect();\n    this.workspace.cancelCurrentGesture();\n  }\n  // If this block has a context menu open, close it.\n  if (Blockly.ContextMenu.currentBlock == this) {\n    Blockly.ContextMenu.hide();\n  }\n\n  if (this.workspace.keyboardAccessibilityMode) {\n    Blockly.navigation.moveCursorOnBlockDelete(this);\n  }\n\n  if (animate && this.rendered) {\n    this.unplug(healStack);\n    Blockly.blockAnimations.disposeUiEffect(this);\n  }\n  // Stop rerendering.\n  this.rendered = false;\n\n  // Clear pending warnings.\n  if (this.warningTextDb_) {\n    for (var n in this.warningTextDb_) {\n      clearTimeout(this.warningTextDb_[n]);\n    }\n    this.warningTextDb_ = null;\n  }\n\n  var icons = this.getIcons();\n  for (var i = 0; i < icons.length; i++) {\n    icons[i].dispose();\n  }\n  Blockly.BlockSvg.superClass_.dispose.call(this, !!healStack);\n\n  Blockly.utils.dom.removeNode(this.svgGroup_);\n  blockWorkspace.resizeContents();\n  // Sever JavaScript to DOM connections.\n  this.svgGroup_ = null;\n  Blockly.utils.dom.stopTextWidthCache();\n};\n\n/**\n * Encode a block for copying.\n * @return {!Blockly.ICopyable.CopyData} Copy metadata.\n * @package\n */\nBlockly.BlockSvg.prototype.toCopyData = function() {\n  var xml = Blockly.Xml.blockToDom(this, true);\n  // Copy only the selected block and internal blocks.\n  Blockly.Xml.deleteNext(xml);\n  // Encode start position in XML.\n  var xy = this.getRelativeToSurfaceXY();\n  xml.setAttribute('x', this.RTL ? -xy.x : xy.x);\n  xml.setAttribute('y', xy.y);\n  return {\n    xml: xml,\n    source: this.workspace,\n    typeCounts: Blockly.utils.getBlockTypeCounts(this, true)\n  };\n};\n\n/**\n * Change the colour of a block.\n * @package\n */\nBlockly.BlockSvg.prototype.applyColour = function() {\n  this.pathObject.applyColour(this);\n\n  var icons = this.getIcons();\n  for (var i = 0; i < icons.length; i++) {\n    icons[i].applyColour();\n  }\n\n  for (var x = 0, input; (input = this.inputList[x]); x++) {\n    for (var y = 0, field; (field = input.fieldRow[y]); y++) {\n      field.applyColour();\n    }\n  }\n};\n\n/**\n * Enable or disable a block.\n */\nBlockly.BlockSvg.prototype.updateDisabled = function() {\n  var children = this.getChildren(false);\n  this.applyColour();\n  for (var i = 0, child; (child = children[i]); i++) {\n    child.updateDisabled();\n  }\n};\n\n/**\n * Get the comment icon attached to this block, or null if the block has no\n * comment.\n * @return {Blockly.Comment} The comment icon attached to this block, or null.\n */\nBlockly.BlockSvg.prototype.getCommentIcon = function() {\n  return this.commentIcon_;\n};\n\n/**\n * Set this block's comment text.\n * @param {?string} text The text, or null to delete.\n */\nBlockly.BlockSvg.prototype.setCommentText = function(text) {\n  if (!Blockly.Comment) {\n    throw Error('Missing require for Blockly.Comment');\n  }\n  if (this.commentModel.text == text) {\n    return;\n  }\n  Blockly.BlockSvg.superClass_.setCommentText.call(this, text);\n\n  var shouldHaveComment = text != null;\n  if (!!this.commentIcon_ == shouldHaveComment) {\n    // If the comment's state of existence is correct, but the text is new\n    // that means we're just updating a comment.\n    this.commentIcon_.updateText();\n    return;\n  }\n  if (shouldHaveComment) {\n    this.commentIcon_ = new Blockly.Comment(this);\n    this.comment = this.commentIcon_;  // For backwards compatibility.\n  } else {\n    this.commentIcon_.dispose();\n    this.commentIcon_ = null;\n    this.comment = null;  // For backwards compatibility.\n  }\n  if (this.rendered) {\n    this.render();\n    // Adding or removing a comment icon will cause the block to change shape.\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Set this block's warning text.\n * @param {?string} text The text, or null to delete.\n * @param {string=} opt_id An optional ID for the warning text to be able to\n *     maintain multiple warnings.\n */\nBlockly.BlockSvg.prototype.setWarningText = function(text, opt_id) {\n  if (!Blockly.Warning) {\n    throw Error('Missing require for Blockly.Warning');\n  }\n  if (!this.warningTextDb_) {\n    // Create a database of warning PIDs.\n    // Only runs once per block (and only those with warnings).\n    this.warningTextDb_ = Object.create(null);\n  }\n  var id = opt_id || '';\n  if (!id) {\n    // Kill all previous pending processes, this edit supersedes them all.\n    for (var n in this.warningTextDb_) {\n      clearTimeout(this.warningTextDb_[n]);\n      delete this.warningTextDb_[n];\n    }\n  } else if (this.warningTextDb_[id]) {\n    // Only queue up the latest change.  Kill any earlier pending process.\n    clearTimeout(this.warningTextDb_[id]);\n    delete this.warningTextDb_[id];\n  }\n  if (this.workspace.isDragging()) {\n    // Don't change the warning text during a drag.\n    // Wait until the drag finishes.\n    var thisBlock = this;\n    this.warningTextDb_[id] = setTimeout(function() {\n      if (thisBlock.workspace) {  // Check block wasn't deleted.\n        delete thisBlock.warningTextDb_[id];\n        thisBlock.setWarningText(text, id);\n      }\n    }, 100);\n    return;\n  }\n  if (this.isInFlyout) {\n    text = null;\n  }\n\n  var changedState = false;\n  if (typeof text == 'string') {\n    // Bubble up to add a warning on top-most collapsed block.\n    var parent = this.getSurroundParent();\n    var collapsedParent = null;\n    while (parent) {\n      if (parent.isCollapsed()) {\n        collapsedParent = parent;\n      }\n      parent = parent.getSurroundParent();\n    }\n    if (collapsedParent) {\n      collapsedParent.setWarningText(Blockly.Msg['COLLAPSED_WARNINGS_WARNING'],\n          Blockly.BlockSvg.COLLAPSED_WARNING_ID);\n    }\n    \n    if (!this.warning) {\n      this.warning = new Blockly.Warning(this);\n      changedState = true;\n    }\n    this.warning.setText(/** @type {string} */ (text), id);\n  } else {\n    // Dispose all warnings if no ID is given.\n    if (this.warning && !id) {\n      this.warning.dispose();\n      changedState = true;\n    } else if (this.warning) {\n      var oldText = this.warning.getText();\n      this.warning.setText('', id);\n      var newText = this.warning.getText();\n      if (!newText) {\n        this.warning.dispose();\n      }\n      changedState = oldText != newText;\n    }\n  }\n  if (changedState && this.rendered) {\n    this.render();\n    // Adding or removing a warning icon will cause the block to change shape.\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Give this block a mutator dialog.\n * @param {Blockly.Mutator} mutator A mutator dialog instance or null to remove.\n */\nBlockly.BlockSvg.prototype.setMutator = function(mutator) {\n  if (this.mutator && this.mutator !== mutator) {\n    this.mutator.dispose();\n  }\n  if (mutator) {\n    mutator.setBlock(this);\n    this.mutator = mutator;\n    mutator.createIcon();\n  }\n  if (this.rendered) {\n    this.render();\n    // Adding or removing a mutator icon will cause the block to change shape.\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Set whether the block is disabled or not.\n * @param {boolean} disabled True if disabled.\n * @deprecated May 2019\n */\nBlockly.BlockSvg.prototype.setDisabled = function(disabled) {\n  console.warn('Deprecated call to Blockly.BlockSvg.prototype.setDisabled, ' +\n  'use Blockly.BlockSvg.prototype.setEnabled instead.');\n  this.setEnabled(!disabled);\n};\n\n/**\n * Set whether the block is enabled or not.\n * @param {boolean} enabled True if enabled.\n */\nBlockly.BlockSvg.prototype.setEnabled = function(enabled) {\n  if (this.isEnabled() != enabled) {\n    Blockly.BlockSvg.superClass_.setEnabled.call(this, enabled);\n    if (this.rendered && !this.getInheritedDisabled()) {\n      this.updateDisabled();\n    }\n  }\n};\n\n/**\n * Set whether the block is highlighted or not.  Block highlighting is\n * often used to visually mark blocks currently being executed.\n * @param {boolean} highlighted True if highlighted.\n */\nBlockly.BlockSvg.prototype.setHighlighted = function(highlighted) {\n  if (!this.rendered) {\n    return;\n  }\n  this.pathObject.updateHighlighted(highlighted);\n};\n\n/**\n * Select this block.  Highlight it visually.\n */\nBlockly.BlockSvg.prototype.addSelect = function() {\n  this.pathObject.updateSelected(true);\n};\n\n/**\n * Unselect this block.  Remove its highlighting.\n */\nBlockly.BlockSvg.prototype.removeSelect = function() {\n  this.pathObject.updateSelected(false);\n};\n\n/**\n * Update the cursor over this block by adding or removing a class.\n * @param {boolean} enable True if the delete cursor should be shown, false\n *     otherwise.\n * @package\n */\nBlockly.BlockSvg.prototype.setDeleteStyle = function(enable) {\n  this.pathObject.updateDraggingDelete(enable);\n};\n\n\n// Overrides of functions on Blockly.Block that take into account whether the\n// block has been rendered.\n/**\n * Get the colour of a block.\n * @return {string} #RRGGBB string.\n */\nBlockly.BlockSvg.prototype.getColour = function() {\n  return this.style.colourPrimary;\n};\n\n/**\n * Change the colour of a block.\n * @param {number|string} colour HSV hue value, or #RRGGBB string.\n */\nBlockly.BlockSvg.prototype.setColour = function(colour) {\n  Blockly.BlockSvg.superClass_.setColour.call(this, colour);\n  var styleObj = this.workspace.getRenderer().getConstants()\n      .getBlockStyleForColour(this.colour_);\n\n  this.pathObject.setStyle(styleObj.style);\n  this.style = styleObj.style;\n  this.styleName_ = styleObj.name;\n\n  this.applyColour();\n};\n\n/**\n * Set the style and colour values of a block.\n * @param {string} blockStyleName Name of the block style\n * @throws {Error} if the block style does not exist.\n */\nBlockly.BlockSvg.prototype.setStyle = function(blockStyleName) {\n  var blockStyle = this.workspace.getRenderer()\n      .getConstants().getBlockStyle(blockStyleName);\n  this.styleName_ = blockStyleName;\n\n  if (blockStyle) {\n    this.hat = blockStyle.hat;\n    this.pathObject.setStyle(blockStyle);\n    // Set colour to match Block.\n    this.colour_ = blockStyle.colourPrimary;\n    this.style = blockStyle;\n\n    this.applyColour();\n  } else {\n    throw Error('Invalid style name: ' + blockStyleName);\n  }\n};\n\n/**\n * Move this block to the front of the visible workspace.\n * <g> tags do not respect z-index so SVG renders them in the\n * order that they are in the DOM.  By placing this block first within the\n * block group's <g>, it will render on top of any other blocks.\n * @package\n */\nBlockly.BlockSvg.prototype.bringToFront = function() {\n  var block = this;\n  do {\n    var root = block.getSvgRoot();\n    var parent = root.parentNode;\n    var childNodes = parent.childNodes;\n    // Avoid moving the block if it's already at the bottom.\n    if (childNodes[childNodes.length - 1] !== root) {\n      parent.appendChild(root);\n    }\n    block = block.getParent();\n  } while (block);\n};\n\n/**\n * Set whether this block can chain onto the bottom of another block.\n * @param {boolean} newBoolean True if there can be a previous statement.\n * @param {(string|Array.<string>|null)=} opt_check Statement type or\n *     list of statement types.  Null/undefined if any type could be connected.\n */\nBlockly.BlockSvg.prototype.setPreviousStatement = function(newBoolean,\n    opt_check) {\n  Blockly.BlockSvg.superClass_.setPreviousStatement.call(this, newBoolean,\n      opt_check);\n\n  if (this.rendered) {\n    this.render();\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Set whether another block can chain onto the bottom of this block.\n * @param {boolean} newBoolean True if there can be a next statement.\n * @param {(string|Array.<string>|null)=} opt_check Statement type or\n *     list of statement types.  Null/undefined if any type could be connected.\n */\nBlockly.BlockSvg.prototype.setNextStatement = function(newBoolean, opt_check) {\n  Blockly.BlockSvg.superClass_.setNextStatement.call(this, newBoolean,\n      opt_check);\n\n  if (this.rendered) {\n    this.render();\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Set whether this block returns a value.\n * @param {boolean} newBoolean True if there is an output.\n * @param {(string|Array.<string>|null)=} opt_check Returned type or list\n *     of returned types.  Null or undefined if any type could be returned\n *     (e.g. variable get).\n */\nBlockly.BlockSvg.prototype.setOutput = function(newBoolean, opt_check) {\n  Blockly.BlockSvg.superClass_.setOutput.call(this, newBoolean, opt_check);\n\n  if (this.rendered) {\n    this.render();\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Set whether value inputs are arranged horizontally or vertically.\n * @param {boolean} newBoolean True if inputs are horizontal.\n */\nBlockly.BlockSvg.prototype.setInputsInline = function(newBoolean) {\n  Blockly.BlockSvg.superClass_.setInputsInline.call(this, newBoolean);\n\n  if (this.rendered) {\n    this.render();\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Remove an input from this block.\n * @param {string} name The name of the input.\n * @param {boolean=} opt_quiet True to prevent error if input is not present.\n * @return {boolean} True if operation succeeds, false if input is not present and opt_quiet is true\n * @throws {Error} if the input is not present and\n *     opt_quiet is not true.\n */\nBlockly.BlockSvg.prototype.removeInput = function(name, opt_quiet) {\n  var removed = Blockly.BlockSvg.superClass_.removeInput.call(this, name, opt_quiet);\n\n  if (this.rendered) {\n    this.render();\n    // Removing an input will cause the block to change shape.\n    this.bumpNeighbours();\n  }\n\n  return removed;\n};\n\n/**\n * Move a numbered input to a different location on this block.\n * @param {number} inputIndex Index of the input to move.\n * @param {number} refIndex Index of input that should be after the moved input.\n */\nBlockly.BlockSvg.prototype.moveNumberedInputBefore = function(\n    inputIndex, refIndex) {\n  Blockly.BlockSvg.superClass_.moveNumberedInputBefore.call(this, inputIndex,\n      refIndex);\n\n  if (this.rendered) {\n    this.render();\n    // Moving an input will cause the block to change shape.\n    this.bumpNeighbours();\n  }\n};\n\n/**\n * Add a value input, statement input or local variable to this block.\n * @param {number} type Either Blockly.INPUT_VALUE or Blockly.NEXT_STATEMENT or\n *     Blockly.DUMMY_INPUT.\n * @param {string} name Language-neutral identifier which may used to find this\n *     input again.  Should be unique to this block.\n * @return {!Blockly.Input} The input object created.\n * @private\n */\nBlockly.BlockSvg.prototype.appendInput_ = function(type, name) {\n  var input = Blockly.BlockSvg.superClass_.appendInput_.call(this, type, name);\n\n  if (this.rendered) {\n    this.render();\n    // Adding an input will cause the block to change shape.\n    this.bumpNeighbours();\n  }\n  return input;\n};\n\n/**\n * Sets whether this block's connections are tracked in the database or not.\n *\n * Used by the deserializer to be more efficient. Setting a connection's\n * tracked_ value to false keeps it from adding itself to the db when it\n * gets its first moveTo call, saving expensive ops for later.\n * @param {boolean} track If true, start tracking. If false, stop tracking.\n * @package\n */\nBlockly.BlockSvg.prototype.setConnectionTracking = function(track) {\n  if (this.previousConnection) {\n    this.previousConnection.setTracking(track);\n  }\n  if (this.outputConnection) {\n    this.outputConnection.setTracking(track);\n  }\n  if (this.nextConnection) {\n    this.nextConnection.setTracking(track);\n    var child = this.nextConnection.targetBlock();\n    if (child) {\n      child.setConnectionTracking(track);\n    }\n  }\n\n  if (this.collapsed_) {\n    // When track is true, we don't want to start tracking collapsed\n    // connections. When track is false, we're already not tracking\n    // collapsed connections, so no need to update.\n    return;\n  }\n\n  for (var i = 0; i < this.inputList.length; i++) {\n    var conn = this.inputList[i].connection;\n    if (conn) {\n      conn.setTracking(track);\n\n      // Pass tracking on down the chain.\n      var block = conn.targetBlock();\n      if (block) {\n        block.setConnectionTracking(track);\n      }\n    }\n  }\n};\n\n/**\n * Returns connections originating from this block.\n * @param {boolean} all If true, return all connections even hidden ones.\n *     Otherwise, for a non-rendered block return an empty list, and for a\n *     collapsed block don't return inputs connections.\n * @return {!Array.<!Blockly.RenderedConnection>} Array of connections.\n * @package\n */\nBlockly.BlockSvg.prototype.getConnections_ = function(all) {\n  var myConnections = [];\n  if (all || this.rendered) {\n    if (this.outputConnection) {\n      myConnections.push(this.outputConnection);\n    }\n    if (this.previousConnection) {\n      myConnections.push(this.previousConnection);\n    }\n    if (this.nextConnection) {\n      myConnections.push(this.nextConnection);\n    }\n    if (all || !this.collapsed_) {\n      for (var i = 0, input; (input = this.inputList[i]); i++) {\n        if (input.connection) {\n          myConnections.push(input.connection);\n        }\n      }\n    }\n  }\n  return myConnections;\n};\n\n/**\n * Walks down a stack of blocks and finds the last next connection on the stack.\n * @return {Blockly.RenderedConnection} The last next connection on the stack,\n *     or null.\n * @package\n * @override\n */\nBlockly.BlockSvg.prototype.lastConnectionInStack = function() {\n  return /** @type {Blockly.RenderedConnection} */ (\n    Blockly.BlockSvg.superClass_.lastConnectionInStack.call(this));\n};\n\n/**\n * Find the connection on this block that corresponds to the given connection\n * on the other block.\n * Used to match connections between a block and its insertion marker.\n * @param {!Blockly.Block} otherBlock The other block to match against.\n * @param {!Blockly.Connection} conn The other connection to match.\n * @return {Blockly.RenderedConnection} The matching connection on this block,\n *     or null.\n * @package\n * @override\n */\nBlockly.BlockSvg.prototype.getMatchingConnection = function(otherBlock, conn) {\n  return /** @type {Blockly.RenderedConnection} */ (\n    Blockly.BlockSvg.superClass_.getMatchingConnection.call(this,\n        otherBlock, conn));\n};\n\n/**\n * Create a connection of the specified type.\n * @param {number} type The type of the connection to create.\n * @return {!Blockly.RenderedConnection} A new connection of the specified type.\n * @protected\n */\nBlockly.BlockSvg.prototype.makeConnection_ = function(type) {\n  return new Blockly.RenderedConnection(this, type);\n};\n\n/**\n * Bump unconnected blocks out of alignment.  Two blocks which aren't actually\n * connected should not coincidentally line up on screen.\n */\nBlockly.BlockSvg.prototype.bumpNeighbours = function() {\n  if (!this.workspace) {\n    return;  // Deleted block.\n  }\n  if (this.workspace.isDragging()) {\n    return;  // Don't bump blocks during a drag.\n  }\n  var rootBlock = this.getRootBlock();\n  if (rootBlock.isInFlyout) {\n    return;  // Don't move blocks around in a flyout.\n  }\n  // Loop through every connection on this block.\n  var myConnections = this.getConnections_(false);\n  for (var i = 0, connection; (connection = myConnections[i]); i++) {\n\n    // Spider down from this block bumping all sub-blocks.\n    if (connection.isConnected() && connection.isSuperior()) {\n      connection.targetBlock().bumpNeighbours();\n    }\n\n    var neighbours = connection.neighbours(Blockly.SNAP_RADIUS);\n    for (var j = 0, otherConnection; (otherConnection = neighbours[j]); j++) {\n\n      // If both connections are connected, that's probably fine.  But if\n      // either one of them is unconnected, then there could be confusion.\n      if (!connection.isConnected() || !otherConnection.isConnected()) {\n        // Only bump blocks if they are from different tree structures.\n        if (otherConnection.getSourceBlock().getRootBlock() != rootBlock) {\n\n          // Always bump the inferior block.\n          if (connection.isSuperior()) {\n            otherConnection.bumpAwayFrom(connection);\n          } else {\n            connection.bumpAwayFrom(otherConnection);\n          }\n        }\n      }\n    }\n  }\n};\n\n/**\n * Schedule snapping to grid and bumping neighbours to occur after a brief\n * delay.\n * @package\n */\nBlockly.BlockSvg.prototype.scheduleSnapAndBump = function() {\n  var block = this;\n  // Ensure that any snap and bump are part of this move's event group.\n  var group = Blockly.Events.getGroup();\n\n  setTimeout(function() {\n    Blockly.Events.setGroup(group);\n    block.snapToGrid();\n    Blockly.Events.setGroup(false);\n  }, Blockly.BUMP_DELAY / 2);\n\n  setTimeout(function() {\n    Blockly.Events.setGroup(group);\n    block.bumpNeighbours();\n    Blockly.Events.setGroup(false);\n  }, Blockly.BUMP_DELAY);\n};\n\n/**\n * Position a block so that it doesn't move the target block when connected.\n * The block to position is usually either the first block in a dragged stack or\n * an insertion marker.\n * @param {!Blockly.RenderedConnection} sourceConnection The connection on the\n *     moving block's stack.\n * @param {!Blockly.RenderedConnection} targetConnection The connection that\n *     should stay stationary as this block is positioned.\n * @package\n */\nBlockly.BlockSvg.prototype.positionNearConnection = function(sourceConnection,\n    targetConnection) {\n  // We only need to position the new block if it's before the existing one,\n  // otherwise its position is set by the previous block.\n  if (sourceConnection.type == Blockly.NEXT_STATEMENT ||\n      sourceConnection.type == Blockly.INPUT_VALUE) {\n    var dx = targetConnection.x - sourceConnection.x;\n    var dy = targetConnection.y - sourceConnection.y;\n\n    this.moveBy(dx, dy);\n  }\n};\n\n/**\n * Return the parent block or null if this block is at the top level.\n * @return {Blockly.BlockSvg} The block that holds the current block.\n * @override\n */\nBlockly.BlockSvg.prototype.getParent = function() {\n  return /** @type {!Blockly.BlockSvg} */ (\n    Blockly.BlockSvg.superClass_.getParent.call(this));\n};\n\n/**\n * Return the top-most block in this block's tree.\n * This will return itself if this block is at the top level.\n * @return {!Blockly.BlockSvg} The root block.\n * @override\n */\nBlockly.BlockSvg.prototype.getRootBlock = function() {\n  return /** @type {!Blockly.BlockSvg} */ (\n    Blockly.BlockSvg.superClass_.getRootBlock.call(this));\n};\n\n/**\n * Lays out and reflows a block based on its contents and settings.\n * @param {boolean=} opt_bubble If false, just render this block.\n *   If true, also render block's parent, grandparent, etc.  Defaults to true.\n */\nBlockly.BlockSvg.prototype.render = function(opt_bubble) {\n  if (this.renderIsInProgress_) {\n    return;  // Don't allow recursive renders.\n  }\n  this.renderIsInProgress_ = true;\n  try {\n    this.rendered = true;\n    Blockly.utils.dom.startTextWidthCache();\n\n    if (this.isCollapsed()) {\n      this.updateCollapsed_();\n    }\n    this.workspace.getRenderer().render(this);\n    this.updateConnectionLocations_();\n\n    if (opt_bubble !== false) {\n      var parentBlock = this.getParent();\n      if (parentBlock) {\n        parentBlock.render(true);\n      } else {\n        // Top-most block. Fire an event to allow scrollbars to resize.\n        this.workspace.resizeContents();\n      }\n    }\n\n    Blockly.utils.dom.stopTextWidthCache();\n    this.updateMarkers_();\n  } finally {\n    this.renderIsInProgress_ = false;\n  }\n};\n\n/**\n * Redraw any attached marker or cursor svgs if needed.\n * @protected\n */\nBlockly.BlockSvg.prototype.updateMarkers_ = function() {\n  if (this.workspace.keyboardAccessibilityMode && this.pathObject.cursorSvg) {\n    this.workspace.getCursor().draw();\n  }\n  if (this.workspace.keyboardAccessibilityMode && this.pathObject.markerSvg) {\n    this.workspace.getMarker(Blockly.navigation.MARKER_NAME).draw();\n  }\n};\n\n/**\n * Update all of the connections on this block with the new locations calculated\n * during rendering.  Also move all of the connected blocks based on the new\n * connection locations.\n * @private\n */\nBlockly.BlockSvg.prototype.updateConnectionLocations_ = function() {\n  var blockTL = this.getRelativeToSurfaceXY();\n  // Don't tighten previous or output connections because they are inferior\n  // connections.\n  if (this.previousConnection) {\n    this.previousConnection.moveToOffset(blockTL);\n  }\n  if (this.outputConnection) {\n    this.outputConnection.moveToOffset(blockTL);\n  }\n\n  for (var i = 0; i < this.inputList.length; i++) {\n    var conn = this.inputList[i].connection;\n    if (conn) {\n      conn.moveToOffset(blockTL);\n      if (conn.isConnected()) {\n        conn.tighten();\n      }\n    }\n  }\n\n  if (this.nextConnection) {\n    this.nextConnection.moveToOffset(blockTL);\n    if (this.nextConnection.isConnected()) {\n      this.nextConnection.tighten();\n    }\n  }\n};\n\n/**\n * Add the cursor svg to this block's svg group.\n * @param {SVGElement} cursorSvg The svg root of the cursor to be added to the\n *     block svg group.\n * @package\n */\nBlockly.BlockSvg.prototype.setCursorSvg = function(cursorSvg) {\n  this.pathObject.setCursorSvg(cursorSvg);\n};\n\n/**\n * Add the marker svg to this block's svg group.\n * @param {SVGElement} markerSvg The svg root of the marker to be added to the\n *     block svg group.\n * @package\n */\nBlockly.BlockSvg.prototype.setMarkerSvg = function(markerSvg) {\n  this.pathObject.setMarkerSvg(markerSvg);\n};\n\n/**\n * Returns a bounding box describing the dimensions of this block\n * and any blocks stacked below it.\n * @return {!{height: number, width: number}} Object with height and width\n *    properties in workspace units.\n * @package\n */\nBlockly.BlockSvg.prototype.getHeightWidth = function() {\n  var height = this.height;\n  var width = this.width;\n  // Recursively add size of subsequent blocks.\n  var nextBlock = this.getNextBlock();\n  if (nextBlock) {\n    var nextHeightWidth = nextBlock.getHeightWidth();\n    var workspace = /** @type {!Blockly.WorkspaceSvg} */ (this.workspace);\n    var tabHeight = workspace.getRenderer().getConstants().NOTCH_HEIGHT;\n    height += nextHeightWidth.height - tabHeight;\n    width = Math.max(width, nextHeightWidth.width);\n  }\n  return {height: height, width: width};\n};\n\n/**\n * Visual effect to show that if the dragging block is dropped, this block will\n * be replaced.  If a shadow block, it will disappear.  Otherwise it will bump.\n * @param {boolean} add True if highlighting should be added.\n * @package\n */\nBlockly.BlockSvg.prototype.fadeForReplacement = function(add) {\n  this.pathObject.updateReplacementFade(add);\n};\n\n/**\n * Visual effect to show that if the dragging block is dropped it will connect\n * to this input.\n * @param {Blockly.Connection} conn The connection on the input to highlight.\n * @param {boolean} add True if highlighting should be added.\n * @package\n */\nBlockly.BlockSvg.prototype.highlightShapeForInput = function(conn, add) {\n  this.pathObject.updateShapeForInputHighlight(conn, add);\n};\n"],"file":"block_svg.min.js"}