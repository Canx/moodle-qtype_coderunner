{"version":3,"sources":["../../../src/blockly/core/bubble_dragger.js"],"names":["goog","provide","require","Blockly","BubbleDragger","bubble","workspace","draggingBubble_","workspace_","deleteArea_","wouldDeleteBubble_","startXY_","getRelativeToSurfaceXY","dragSurface_","utils","is3dSupported","getBlockDragSurface","prototype","dispose","startBubbleDrag","Events","getGroup","setGroup","setResizesEnabled","setAutoLayout","moveToDragSurface_","setDragging","toolbox","getToolbox","addStyle","style","isDeletable","dragBubble","e","currentDragDeltaXY","delta","pixelsToWorkspaceUnits_","newLoc","Coordinate","sum","moveDuringDrag","isDeleteArea","updateCursorDuringBubbleDrag_","maybeDeleteBubble_","trashcan","setTimeout","close","bind","fireMoveEvent_","DELETE_AREA_NONE","setDeleteStyle","DELETE_AREA_TRASH","setOpen","endBubbleDrag","moveTo","x","y","deleted","clearAndHide","getBubbleCanvas","removeStyle","isComment","event","CommentMove","setOldCoordinate","recordNew","fire","pixelCoord","result","scale","isMutator","mainScale","options","parentWorkspace","translateSurface","setBlocksAndShow","getSvgRoot"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for dragging a bubble visually.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.BubbleDragger');\n\ngoog.require('Blockly.Bubble');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.CommentMove');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\n\n\n/**\n * Class for a bubble dragger.  It moves things on the bubble canvas around the\n * workspace when they are being dragged by a mouse or touch.  These can be\n * block comments, mutators, warnings, or workspace comments.\n * @param {!Blockly.Bubble|!Blockly.WorkspaceCommentSvg} bubble The item on the\n *     bubble canvas to drag.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace to drag on.\n * @constructor\n */\nBlockly.BubbleDragger = function(bubble, workspace) {\n  /**\n   * The item on the bubble canvas that is being dragged.\n   * @type {!Blockly.Bubble|!Blockly.WorkspaceCommentSvg}\n   * @private\n   */\n  this.draggingBubble_ = bubble;\n\n  /**\n   * The workspace on which the bubble is being dragged.\n   * @type {!Blockly.WorkspaceSvg}\n   * @private\n   */\n  this.workspace_ = workspace;\n\n  /**\n   * Which delete area the mouse pointer is over, if any.\n   * One of {@link Blockly.DELETE_AREA_TRASH},\n   * {@link Blockly.DELETE_AREA_TOOLBOX}, or {@link Blockly.DELETE_AREA_NONE}.\n   * @type {?number}\n   * @private\n   */\n  this.deleteArea_ = null;\n\n  /**\n   * Whether the bubble would be deleted if dropped immediately.\n   * @type {boolean}\n   * @private\n   */\n  this.wouldDeleteBubble_ = false;\n\n  /**\n   * The location of the top left corner of the dragging bubble's body at the\n   * beginning of the drag, in workspace coordinates.\n   * @type {!Blockly.utils.Coordinate}\n   * @private\n   */\n  this.startXY_ = this.draggingBubble_.getRelativeToSurfaceXY();\n\n  /**\n   * The drag surface to move bubbles to during a drag, or null if none should\n   * be used.  Block dragging and bubble dragging use the same surface.\n   * @type {Blockly.BlockDragSurfaceSvg}\n   * @private\n   */\n  this.dragSurface_ =\n      Blockly.utils.is3dSupported() && !!workspace.getBlockDragSurface() ?\n      workspace.getBlockDragSurface() : null;\n};\n\n/**\n * Sever all links from this object.\n * @package\n * @suppress {checkTypes}\n */\nBlockly.BubbleDragger.prototype.dispose = function() {\n  this.draggingBubble_ = null;\n  this.workspace_ = null;\n  this.dragSurface_ = null;\n};\n\n/**\n * Start dragging a bubble.  This includes moving it to the drag surface.\n * @package\n */\nBlockly.BubbleDragger.prototype.startBubbleDrag = function() {\n  if (!Blockly.Events.getGroup()) {\n    Blockly.Events.setGroup(true);\n  }\n\n  this.workspace_.setResizesEnabled(false);\n  this.draggingBubble_.setAutoLayout(false);\n  if (this.dragSurface_) {\n    this.moveToDragSurface_();\n  }\n\n  this.draggingBubble_.setDragging && this.draggingBubble_.setDragging(true);\n\n  var toolbox = this.workspace_.getToolbox();\n  if (toolbox && typeof toolbox.addStyle == 'function') {\n    var style = this.draggingBubble_.isDeletable() ? 'blocklyToolboxDelete' :\n        'blocklyToolboxGrab';\n    toolbox.addStyle(style);\n  }\n};\n\n/**\n * Execute a step of bubble dragging, based on the given event.  Update the\n * display accordingly.\n * @param {!Event} e The most recent move event.\n * @param {!Blockly.utils.Coordinate} currentDragDeltaXY How far the pointer has\n *     moved from the position at the start of the drag, in pixel units.\n * @package\n */\nBlockly.BubbleDragger.prototype.dragBubble = function(e, currentDragDeltaXY) {\n  var delta = this.pixelsToWorkspaceUnits_(currentDragDeltaXY);\n  var newLoc = Blockly.utils.Coordinate.sum(this.startXY_, delta);\n\n  this.draggingBubble_.moveDuringDrag(this.dragSurface_, newLoc);\n\n  if (this.draggingBubble_.isDeletable()) {\n    this.deleteArea_ = this.workspace_.isDeleteArea(e);\n    this.updateCursorDuringBubbleDrag_();\n  }\n};\n\n/**\n * Shut the trash can and, if necessary, delete the dragging bubble.\n * Should be called at the end of a bubble drag.\n * @return {boolean} Whether the bubble was deleted.\n * @private\n */\nBlockly.BubbleDragger.prototype.maybeDeleteBubble_ = function() {\n  var trashcan = this.workspace_.trashcan;\n\n  if (this.wouldDeleteBubble_) {\n    if (trashcan) {\n      setTimeout(trashcan.close.bind(trashcan), 100);\n    }\n    // Fire a move event, so we know where to go back to for an undo.\n    this.fireMoveEvent_();\n    this.draggingBubble_.dispose(false, true);\n  } else if (trashcan) {\n    // Make sure the trash can is closed.\n    trashcan.close();\n  }\n  return this.wouldDeleteBubble_;\n};\n\n/**\n * Update the cursor (and possibly the trash can lid) to reflect whether the\n * dragging bubble would be deleted if released immediately.\n * @private\n */\nBlockly.BubbleDragger.prototype.updateCursorDuringBubbleDrag_ = function() {\n  this.wouldDeleteBubble_ = this.deleteArea_ != Blockly.DELETE_AREA_NONE;\n  var trashcan = this.workspace_.trashcan;\n  if (this.wouldDeleteBubble_) {\n    this.draggingBubble_.setDeleteStyle(true);\n    if (this.deleteArea_ == Blockly.DELETE_AREA_TRASH && trashcan) {\n      trashcan.setOpen(true);\n    }\n  } else {\n    this.draggingBubble_.setDeleteStyle(false);\n    if (trashcan) {\n      trashcan.setOpen(false);\n    }\n  }\n};\n\n/**\n * Finish a bubble drag and put the bubble back on the workspace.\n * @param {!Event} e The mouseup/touchend event.\n * @param {!Blockly.utils.Coordinate} currentDragDeltaXY How far the pointer has\n *     moved from the position at the start of the drag, in pixel units.\n * @package\n */\nBlockly.BubbleDragger.prototype.endBubbleDrag = function(\n    e, currentDragDeltaXY) {\n  // Make sure internal state is fresh.\n  this.dragBubble(e, currentDragDeltaXY);\n\n  var delta = this.pixelsToWorkspaceUnits_(currentDragDeltaXY);\n  var newLoc = Blockly.utils.Coordinate.sum(this.startXY_, delta);\n\n  // Move the bubble to its final location.\n  this.draggingBubble_.moveTo(newLoc.x, newLoc.y);\n  var deleted = this.maybeDeleteBubble_();\n\n  if (!deleted) {\n    // Put everything back onto the bubble canvas.\n    if (this.dragSurface_) {\n      this.dragSurface_.clearAndHide(this.workspace_.getBubbleCanvas());\n    }\n\n    this.draggingBubble_.setDragging && this.draggingBubble_.setDragging(false);\n    this.fireMoveEvent_();\n  }\n  this.workspace_.setResizesEnabled(true);\n\n  var toolbox = this.workspace_.getToolbox();\n  if (toolbox && typeof toolbox.removeStyle == 'function') {\n    var style = this.draggingBubble_.isDeletable() ? 'blocklyToolboxDelete' :\n        'blocklyToolboxGrab';\n    toolbox.removeStyle(style);\n  }\n  Blockly.Events.setGroup(false);\n};\n\n/**\n * Fire a move event at the end of a bubble drag.\n * @private\n */\nBlockly.BubbleDragger.prototype.fireMoveEvent_ = function() {\n  if (this.draggingBubble_.isComment) {\n    var event = new Blockly.Events.CommentMove(\n        /** @type {!Blockly.WorkspaceCommentSvg} */ (this.draggingBubble_));\n    event.setOldCoordinate(this.startXY_);\n    event.recordNew();\n    Blockly.Events.fire(event);\n  }\n  // TODO (fenichel): move events for comments.\n  return;\n};\n\n/**\n * Convert a coordinate object from pixels to workspace units, including a\n * correction for mutator workspaces.\n * This function does not consider differing origins.  It simply scales the\n * input's x and y values.\n * @param {!Blockly.utils.Coordinate} pixelCoord A coordinate with x and y values\n *     in CSS pixel units.\n * @return {!Blockly.utils.Coordinate} The input coordinate divided by the workspace\n *     scale.\n * @private\n */\nBlockly.BubbleDragger.prototype.pixelsToWorkspaceUnits_ = function(pixelCoord) {\n  var result = new Blockly.utils.Coordinate(pixelCoord.x / this.workspace_.scale,\n      pixelCoord.y / this.workspace_.scale);\n  if (this.workspace_.isMutator) {\n    // If we're in a mutator, its scale is always 1, purely because of some\n    // oddities in our rendering optimizations.  The actual scale is the same as\n    // the scale on the parent workspace.\n    // Fix that for dragging.\n    var mainScale = this.workspace_.options.parentWorkspace.scale;\n    result.scale(1 / mainScale);\n  }\n  return result;\n};\n\n/**\n * Move the bubble onto the drag surface at the beginning of a drag.  Move the\n * drag surface to preserve the apparent location of the bubble.\n * @private\n */\nBlockly.BubbleDragger.prototype.moveToDragSurface_ = function() {\n  this.draggingBubble_.moveTo(0, 0);\n  this.dragSurface_.translateSurface(this.startXY_.x, this.startXY_.y);\n  // Execute the move on the top-level SVG component.\n  this.dragSurface_.setBlocksAndShow(this.draggingBubble_.getSvgRoot());\n};\n"],"file":"bubble_dragger.min.js"}