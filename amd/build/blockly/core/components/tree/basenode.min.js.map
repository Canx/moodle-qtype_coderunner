{"version":3,"sources":["../../../../../src/blockly/core/components/tree/basenode.js"],"names":["goog","provide","require","Blockly","tree","BaseNode","content","config","Component","call","iconClass","expandedIconClass","config_","previousSibling_","nextSibling_","selected_","expanded_","depth_","utils","object","inherits","Config","allNodes","prototype","disposeInternal","superClass_","setElementInternal","initAccessibility","el","getElement","label","getLabelElement","id","getId","aria","setRole","Role","TREEITEM","setState","State","SELECTED","LEVEL","getDepth","LABELLEDBY","img","getIconElement","PRESENTATION","ce","getChildrenElement","GROUP","hasChildNodes","EXPANDED","count","getChildCount","i","child","getChildAt","SETSIZE","POSINSET","createDom","element","document","createElement","appendChild","toDom","enterDocument","exitDocument","addChildAt","index","prevNode","nextNode","getTree","setTreeInternal","setDepth_","updateExpandIcon","childrenEl","childElement","nextElement","insertBefore","isInDocument","style","setElementShown","setExpanded","add","getParent","Error","PARENT_UNABLE_TO_BE_SET","depth","parent","row","getRowElement","indent","getPixelIndent_","rightToLeft_","paddingRight","paddingLeft","forEachChild","contains","node","getChildren","children","push","getPreviousSibling","getNextSibling","isLastSibling","isSelected","select","setSelectedItem","setSelected","selected","updateRow","treeElement","ACTIVEDESCENDANT","expanded","isStateChange","hasChildren","getSelectedItem","updateIcon_","doNodeExpanded","doNodeCollapsed","toggle","nonEmptyAndExpanded","backgroundPosition","getBackgroundPosition","display","getRowDom","Math","max","indentWidth","className","getRowClassName","getIconDom","getLabelDom","selectedClass","cssSelectedRow","cssTreeRow","cssItemLabel","textContent","icon","getCalculatedIconClass","ABSTRACT_METHOD","getElementById","firstChild","lastChild","previousSibling","rowEl","cel","onClick_","e","preventDefault","onKeyDown","handled","keyCode","KeyCodes","RIGHT","selectChild","LEFT","selectParent","DOWN","selectNext","UP","selectPrevious","ENTER","SPACE","getNextShownNode","previousNode","getPreviousShownNode","getLastShownDescendant","next","ps"],"mappings":"AAWA,aAEAA,IAAI,CAACC,OAAL,CAAa,uBAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,mBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,oBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,sBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,wBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,qBAAb,EAaAC,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAwB,SAASC,CAAT,CAAkBC,CAAlB,CAA0B,CAChDJ,OAAO,CAACK,SAAR,CAAkBC,IAAlB,CAAuB,IAAvB,EAOA,KAAKH,OAAL,CAAeA,CAAf,CAMA,KAAKI,SAAL,CAMA,KAAKC,iBAAL,CAOA,KAAKC,OAAL,CAAeL,CAAf,CAMA,KAAKH,IAAL,CAMA,KAAKS,gBAAL,CAMA,KAAKC,YAAL,CAOA,KAAKC,SAAL,IAOA,KAAKC,SAAL,IAQA,KAAKC,MAAL,CAAc,CAAC,CAChB,CApED,CAqEAd,OAAO,CAACe,KAAR,CAAcC,MAAd,CAAqBC,QAArB,CAA8BjB,OAAO,CAACC,IAAR,CAAaC,QAA3C,CAAqDF,OAAO,CAACK,SAA7D,EAkBAL,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBgB,MAAtB,CASAlB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBiB,QAAtB,CAAiC,EAAjC,CAGAnB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCC,eAAhC,CAAkD,UAAW,CAC3DrB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBoB,WAAtB,CAAkCD,eAAlC,CAAkDf,IAAlD,CAAuD,IAAvD,EACA,GAAI,KAAKL,IAAT,CAAe,CACb,KAAKA,IAAL,CAAY,IACb,CACD,KAAKsB,kBAAL,CAAwB,IAAxB,CACD,CAND,CAaAvB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCI,iBAAhC,CAAoD,UAAW,CAC7D,GAAIC,CAAAA,CAAE,CAAG,KAAKC,UAAL,EAAT,CACA,GAAID,CAAJ,CAAQ,CAEN,GAAIE,CAAAA,CAAK,CAAG,KAAKC,eAAL,EAAZ,CACA,GAAID,CAAK,EAAI,CAACA,CAAK,CAACE,EAApB,CAAwB,CACtBF,CAAK,CAACE,EAAN,CAAW,KAAKC,KAAL,GAAe,QAC3B,CAED9B,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBC,OAAnB,CAA2BP,CAA3B,CAA+BzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBE,IAAnB,CAAwBC,QAAvD,EACAlC,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BV,CAA5B,CAAgCzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBC,QAAzD,KACArC,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BV,CAA5B,CACIzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBE,KAD7B,CACoC,KAAKC,QAAL,EADpC,EAEA,GAAIZ,CAAJ,CAAW,CACT3B,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BV,CAA5B,CACIzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBI,UAD7B,CACyCb,CAAK,CAACE,EAD/C,CAED,CAED,GAAIY,CAAAA,CAAG,CAAG,KAAKC,cAAL,EAAV,CACA,GAAID,CAAJ,CAAS,CACPzC,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBC,OAAnB,CAA2BS,CAA3B,CAAgCzC,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBE,IAAnB,CAAwBU,YAAxD,CACD,CAED,GAAIC,CAAAA,CAAE,CAAG,KAAKC,kBAAL,EAAT,CACA,GAAID,CAAJ,CAAQ,CACN5C,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBC,OAAnB,CAA2BY,CAA3B,CAA+B5C,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBE,IAAnB,CAAwBa,KAAvD,EAGA,GAAIF,CAAE,CAACG,aAAH,EAAJ,CAAwB,CAEtB/C,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BV,CAA5B,CAAgCzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBY,QAAzD,KAIA,OADIC,CAAAA,CAAK,CAAG,KAAKC,aAAL,EACZ,CAASC,CAAC,CAAG,CAAb,CACMC,CADN,CAAgBD,CAAC,EAAIF,CAArB,CAA4BE,CAAC,EAA7B,CAAiC,CAC3BC,CAD2B,CACM,KAAKC,UAAL,CAAgBF,CAAC,CAAG,CAApB,EAAuBzB,UAAvB,EADN,CAE/B1B,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BiB,CAA5B,CACIpD,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBkB,OAD7B,CACsCL,CADtC,EAEAjD,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BiB,CAA5B,CACIpD,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBmB,QAD7B,CACuCJ,CADvC,CAED,CACF,CACF,CACF,CACF,CA5CD,CAgDAnD,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCoC,SAAhC,CAA4C,UAAW,CACrD,GAAIC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CACAF,CAAO,CAACG,WAAR,CAAoB,KAAKC,KAAL,EAApB,EACA,KAAKtC,kBAAL,CAAqDkC,CAArD,CACD,CAJD,CAQAzD,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC0C,aAAhC,CAAgD,UAAW,CACzD9D,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBoB,WAAtB,CAAkCwC,aAAlC,CAAgDxD,IAAhD,CAAqD,IAArD,EACAN,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBiB,QAAtB,CAA+B,KAAKW,KAAL,EAA/B,EAA+C,IAA/C,CACA,KAAKN,iBAAL,EACD,CAJD,CAQAxB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC2C,YAAhC,CAA+C,UAAW,CACxD/D,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBoB,WAAtB,CAAkCyC,YAAlC,CAA+CzD,IAA/C,CAAoD,IAApD,EACA,MAAON,CAAAA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBiB,QAAtB,CAA+B,KAAKW,KAAL,EAA/B,CACR,CAHD,CAUA9B,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC4C,UAAhC,CAA6C,SAASZ,CAAT,CAAgBa,CAAhB,CAAuB,CAClEb,CAAK,CAAyCA,CAA9C,CADkE,GAE9Dc,CAAAA,CAAQ,CAAG,KAAKb,UAAL,CAAgBY,CAAK,CAAG,CAAxB,CAFmD,CAG9DE,CAAQ,CAAG,KAAKd,UAAL,CAAgBY,CAAhB,CAHmD,CAKlEjE,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBoB,WAAtB,CAAkC0C,UAAlC,CAA6C1D,IAA7C,CAAkD,IAAlD,CAAwD8C,CAAxD,CAA+Da,CAA/D,EAEAb,CAAK,CAAC1C,gBAAN,CAAyBwD,CAAzB,CACAd,CAAK,CAACzC,YAAN,CAAqBwD,CAArB,CAEA,GAAID,CAAJ,CAAc,CACZA,CAAQ,CAACvD,YAAT,CAAwByC,CACzB,CACD,GAAIe,CAAJ,CAAc,CACZA,CAAQ,CAACzD,gBAAT,CAA4B0C,CAC7B,CAED,GAAInD,CAAAA,CAAI,CAAG,KAAKmE,OAAL,EAAX,CACA,GAAInE,CAAJ,CAAU,CACRmD,CAAK,CAACiB,eAAN,CAAsBpE,CAAtB,CACD,CAEDmD,CAAK,CAACkB,SAAN,CAAgB,KAAK/B,QAAL,GAAkB,CAAlC,EAEA,GAAId,CAAAA,CAAE,CAAG,KAAKC,UAAL,EAAT,CACA,GAAID,CAAJ,CAAQ,CACN,KAAK8C,gBAAL,GACAvE,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CACIV,CADJ,CACQzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBY,QADjC,CAC2C,KAAKnC,SADhD,EAEA,GAAI,KAAKA,SAAT,CAAoB,CAClB,GAAI2D,CAAAA,CAAU,CAAG,KAAK3B,kBAAL,EAAjB,CACA,GAAI,CAACO,CAAK,CAAC1B,UAAN,EAAL,CAAyB,CACvB0B,CAAK,CAACI,SAAN,EACD,CAJiB,GAKdiB,CAAAA,CAAY,CAAGrB,CAAK,CAAC1B,UAAN,EALD,CAMdgD,CAAW,CAAGP,CAAQ,EAAIA,CAAQ,CAACzC,UAAT,EANZ,CAOlB8C,CAAU,CAACG,YAAX,CAAwBF,CAAxB,CAAsCC,CAAtC,EAEA,GAAI,KAAKE,YAAL,EAAJ,CAAyB,CACvBxB,CAAK,CAACU,aAAN,EACD,CAED,GAAI,CAACK,CAAL,CAAe,CACb,GAAID,CAAJ,CAAc,CACZA,CAAQ,CAACK,gBAAT,EACD,CAFD,IAEO,CACLvE,OAAO,CAACe,KAAR,CAAc8D,KAAd,CAAoBC,eAApB,CAAoCN,CAApC,KACA,KAAKO,WAAL,CAAiB,KAAKlE,SAAtB,CACD,CACF,CACF,CACF,CACF,CApDD,CA2DAb,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC4D,GAAhC,CAAsC,SAAS5B,CAAT,CAAgB,CACpD,GAAIA,CAAK,CAAC6B,SAAN,EAAJ,CAAuB,CACrB,KAAMC,CAAAA,KAAK,CAAClF,OAAO,CAACK,SAAR,CAAkB6E,KAAlB,CAAwBC,uBAAzB,CACZ,CACD,KAAKnB,UAAL,CAAgBZ,CAAhB,CAAuB,KAAKF,aAAL,EAAvB,CACD,CALD,CAYAlD,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCgD,OAAhC,CAA0C,UAAW,CACnD,MAAO,KACR,CAFD,CASApE,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCmB,QAAhC,CAA2C,UAAW,CACpD,GAAI6C,CAAAA,CAAK,CAAG,KAAKtE,MAAjB,CACA,GAAY,CAAR,CAAAsE,CAAJ,CAAe,CACb,GAAIC,CAAAA,CAAM,CAAG,KAAKJ,SAAL,EAAb,CACA,GAAII,CAAJ,CAAY,CACVD,CAAK,CAAGC,CAAM,CAAC9C,QAAP,GAAoB,CAC7B,CAFD,IAEO,CACL6C,CAAK,CAAG,CACT,CACD,KAAKd,SAAL,CAAec,CAAf,CACD,CACD,MAAOA,CAAAA,CACR,CAZD,CAmBApF,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCkD,SAAhC,CAA4C,SAASc,CAAT,CAAgB,CAC1D,GAAIA,CAAK,EAAI,KAAKtE,MAAlB,CAA0B,CACxB,KAAKA,MAAL,CAAcsE,CAAd,CACA,GAAIE,CAAAA,CAAG,CAAG,KAAKC,aAAL,EAAV,CACA,GAAID,CAAJ,CAAS,CACP,GAAIE,CAAAA,CAAM,CAAG,KAAKC,eAAL,GAAyB,IAAtC,CACA,GAAI,KAAKC,YAAT,CAAuB,CACrBJ,CAAG,CAACT,KAAJ,CAAUc,YAAV,CAAyBH,CAC1B,CAFD,IAEO,CACLF,CAAG,CAACT,KAAJ,CAAUe,WAAV,CAAwBJ,CACzB,CACF,CACD,KAAKK,YAAL,CAAkB,SAASzC,CAAT,CAAgB,CAAEA,CAAK,CAACkB,SAAN,CAAgBc,CAAK,CAAG,CAAxB,CAA6B,CAAjE,CACD,CACF,CAdD,CAuBApF,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC0E,QAAhC,CAA2C,SAASC,CAAT,CAAe,CACxD,MAAOA,CAAP,CAAa,CACX,GAAIA,CAAI,EAAI,IAAZ,CAAkB,CAChB,QACD,CACDA,CAAI,CAAGA,CAAI,CAACd,SAAL,EACR,CACD,QACD,CARD,CAiBAjF,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCiC,UAAhC,CAOArD,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC4E,WAAhC,CAA8C,UAAW,CACvD,GAAIC,CAAAA,CAAQ,CAAG,EAAf,CACA,KAAKJ,YAAL,CAAkB,SAASzC,CAAT,CAAgB,CAAE6C,CAAQ,CAACC,IAAT,CAAc9C,CAAd,CAAuB,CAA3D,EACA,MAAO6C,CAAAA,CACR,CAJD,CAWAjG,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC6D,SAAhC,CAA4C,UAAW,CACrD,MACEjF,CAAAA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBoB,WAAtB,CAAkC2D,SAAlC,CAA4C3E,IAA5C,CAAiD,IAAjD,CACH,CAHD,CASAN,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC+E,kBAAhC,CAAqD,UAAW,CAC9D,MAAO,MAAKzF,gBACb,CAFD,CAQAV,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCgF,cAAhC,CAAiD,UAAW,CAC1D,MAAO,MAAKzF,YACb,CAFD,CAQAX,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCiF,aAAhC,CAAgD,UAAW,CACzD,MAAO,CAAC,KAAK1F,YACd,CAFD,CAQAX,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCkF,UAAhC,CAA6C,UAAW,CACtD,MAAO,MAAK1F,SACb,CAFD,CAQAZ,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCmF,MAAhC,CAAyC,UAAW,CAClD,GAAItG,CAAAA,CAAI,CAAG,KAAKmE,OAAL,EAAX,CACA,GAAInE,CAAJ,CAAU,CACRA,CAAI,CAACuG,eAAL,CAAqB,IAArB,CACD,CACF,CALD,CAYAxG,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCqF,WAAhC,CAA8C,SAASC,CAAT,CAAmB,CAC/D,GAAI,KAAK9F,SAAL,EAAkB8F,CAAtB,CAAgC,CAC9B,MACD,CACD,KAAK9F,SAAL,CAAiB8F,CAAjB,CAEA,KAAKC,SAAL,GAEA,GAAIlF,CAAAA,CAAE,CAAG,KAAKC,UAAL,EAAT,CACA,GAAID,CAAJ,CAAQ,CACNzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BV,CAA5B,CAAgCzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBC,QAAzD,CAAmEqE,CAAnE,EACA,GAAIA,CAAJ,CAAc,CACZ,GAAIE,CAAAA,CAAW,CAA4B,KAAKxC,OAAL,GAAe1C,UAAf,EAA3C,CACA1B,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4ByE,CAA5B,CACI5G,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyByE,gBAD7B,CAC+C,KAAK/E,KAAL,EAD/C,CAED,CACF,CACF,CAjBD,CAwBA9B,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC2D,WAAhC,CAA8C,SAAS+B,CAAT,CAAmB,IAC3DC,CAAAA,CAAa,CAAGD,CAAQ,EAAI,KAAKjG,SAD0B,CAE3D+B,CAF2D,CAG/D,KAAK/B,SAAL,CAAiBiG,CAAjB,CAH+D,GAI3D7G,CAAAA,CAAI,CAAG,KAAKmE,OAAL,EAJoD,CAK3D3C,CAAE,CAAG,KAAKC,UAAL,EALsD,CAO/D,GAAI,KAAKsF,WAAL,EAAJ,CAAwB,CACtB,GAAI,CAACF,CAAD,EAAa7G,CAAb,EAAqB,KAAK6F,QAAL,CAAc7F,CAAI,CAACgH,eAAL,EAAd,CAAzB,CAAgE,CAC9D,KAAKV,MAAL,EACD,CAED,GAAI9E,CAAJ,CAAQ,CACNmB,CAAE,CAAG,KAAKC,kBAAL,EAAL,CACA,GAAID,CAAJ,CAAQ,CACN5C,OAAO,CAACe,KAAR,CAAc8D,KAAd,CAAoBC,eAApB,CAAoClC,CAApC,CAAwCkE,CAAxC,EACA9G,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBI,QAAnB,CAA4BV,CAA5B,CAAgCzB,OAAO,CAACe,KAAR,CAAcgB,IAAd,CAAmBK,KAAnB,CAAyBY,QAAzD,CAAmE8D,CAAnE,EAGA,GAAIA,CAAQ,EAAI,KAAKlC,YAAL,EAAZ,EAAmC,CAAChC,CAAE,CAACG,aAAH,EAAxC,CAA4D,CAC1D,KAAK8C,YAAL,CAAkB,SAASzC,CAAT,CAAgB,CAChCR,CAAE,CAACgB,WAAH,CAAeR,CAAK,CAACS,KAAN,EAAf,CACD,CAFD,EAGA,KAAKgC,YAAL,CAAkB,SAASzC,CAAT,CAAgB,CAAEA,CAAK,CAACU,aAAN,EAAwB,CAA5D,CACD,CACF,CACD,KAAKS,gBAAL,EACD,CACF,CArBD,IAqBO,CACL3B,CAAE,CAAG,KAAKC,kBAAL,EAAL,CACA,GAAID,CAAJ,CAAQ,CACN5C,OAAO,CAACe,KAAR,CAAc8D,KAAd,CAAoBC,eAApB,CAAoClC,CAApC,IACD,CACF,CACD,GAAInB,CAAJ,CAAQ,CACN,KAAKyF,WAAL,EACD,CAED,GAAIH,CAAJ,CAAmB,CACjB,GAAID,CAAJ,CAAc,CACZ,KAAKK,cAAL,EACD,CAFD,IAEO,CACL,KAAKC,eAAL,EACD,CACF,CACF,CA7CD,CAoDApH,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC+F,cAAhC,CAAiD,UAAW,CAE3D,CAFD,CASAnH,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCgG,eAAhC,CAAkD,UAAW,CAE5D,CAFD,CAQApH,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCiG,MAAhC,CAAyC,UAAW,CAClD,KAAKtC,WAAL,CAAiB,CAAC,KAAKlE,SAAvB,CACD,CAFD,CASAb,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCyC,KAAhC,CAAwC,UAAW,IAC7CyD,CAAAA,CAAmB,CAAG,KAAKzG,SAAL,EAAkB,KAAKmG,WAAL,EADK,CAG7Cf,CAAQ,CAAGvC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAHkC,CAIjDsC,CAAQ,CAACpB,KAAT,CAAe0C,kBAAf,CAAoC,KAAKC,qBAAL,EAApC,CACA,GAAI,CAACF,CAAL,CAA0B,CACxBrB,CAAQ,CAACpB,KAAT,CAAe4C,OAAf,CAAyB,MAC1B,CAED,GAAIH,CAAJ,CAAyB,CAEvB,KAAKzB,YAAL,CAAkB,SAASzC,CAAT,CAAgB,CAAE6C,CAAQ,CAACrC,WAAT,CAAqBR,CAAK,CAACS,KAAN,EAArB,CAAsC,CAA1E,CACD,CAED,GAAIkC,CAAAA,CAAI,CAAGrC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX,CACAoC,CAAI,CAAClE,EAAL,CAAU,KAAKC,KAAL,EAAV,CAEAiE,CAAI,CAACnC,WAAL,CAAiB,KAAK8D,SAAL,EAAjB,EACA3B,CAAI,CAACnC,WAAL,CAAiBqC,CAAjB,EAEA,MAAOF,CAAAA,CACR,CArBD,CA4BA/F,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCqE,eAAhC,CAAkD,UAAW,CAC3D,MAAOkC,CAAAA,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,CAAC,KAAKrF,QAAL,GAAkB,CAAnB,EAAwB,KAAK9B,OAAL,CAAaoH,WAAjD,CACR,CAFD,CASA7H,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCsG,SAAhC,CAA4C,UAAW,CACrD,GAAIpC,CAAAA,CAAG,CAAG5B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV,CACA2B,CAAG,CAACwC,SAAJ,CAAgB,KAAKC,eAAL,EAAhB,CACAzC,CAAG,CAACT,KAAJ,CAAU,YAAc,KAAKa,YAAL,CAAoB,OAApB,CAA8B,MAA5C,CAAV,EACI,KAAKD,eAAL,GAAyB,IAD7B,CAGAH,CAAG,CAAC1B,WAAJ,CAAgB,KAAKoE,UAAL,EAAhB,EACA1C,CAAG,CAAC1B,WAAJ,CAAgB,KAAKqE,WAAL,EAAhB,EAEA,MAAO3C,CAAAA,CACR,CAVD,CAkBAtF,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC2G,eAAhC,CAAkD,UAAW,CAC3D,GAAIG,CAAAA,CAAa,CAAG,EAApB,CACA,GAAI,KAAK5B,UAAL,EAAJ,CAAuB,CACrB4B,CAAa,CAAG,KAAO,KAAKzH,OAAL,CAAa0H,cAAb,EAA+B,EAAtC,CACjB,CACD,MAAO,MAAK1H,OAAL,CAAa2H,UAAb,CAA0BF,CAClC,CAND,CAYAlI,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC6G,WAAhC,CAA8C,UAAW,CACvD,GAAItG,CAAAA,CAAK,CAAG+B,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ,CACAhC,CAAK,CAACmG,SAAN,CAAkB,KAAKrH,OAAL,CAAa4H,YAAb,EAA6B,EAA/C,CACA1G,CAAK,CAAC2G,WAAN,CAAoB,KAAKnI,OAAzB,CACA,MAAOwB,CAAAA,CACR,CALD,CAWA3B,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC4G,UAAhC,CAA6C,UAAW,CACtD,GAAIO,CAAAA,CAAI,CAAG7E,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX,CACA4E,CAAI,CAAC1D,KAAL,CAAW4C,OAAX,CAAqB,cAArB,CACAc,CAAI,CAACT,SAAL,CAAiB,KAAKU,sBAAL,EAAjB,CACA,MAAOD,CAAAA,CACR,CALD,CAWAvI,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCoH,sBAAhC,CAAyD,UAAW,CAClE,KAAMtD,CAAAA,KAAK,CAAClF,OAAO,CAACK,SAAR,CAAkB6E,KAAlB,CAAwBuD,eAAzB,CACZ,CAFD,CASAzI,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCoG,qBAAhC,CAAwD,UAAW,CACjE,MAAO,CAAC,KAAKnB,aAAL,GAAuB,MAAvB,CAAgC,CAAC,KAAK9D,QAAL,GAAkB,CAAnB,EACpC,KAAK9B,OAAL,CAAaoH,WADV,EACyB,MACjC,CAHD,CASA7H,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCM,UAAhC,CAA6C,UAAW,CACtD,GAAID,CAAAA,CAAE,CAAGzB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBoB,WAAtB,CAAkCI,UAAlC,CAA6CpB,IAA7C,CAAkD,IAAlD,CAAT,CACA,GAAI,CAACmB,CAAL,CAAS,CACPA,CAAE,CAAGiC,QAAQ,CAACgF,cAAT,CAAwB,KAAK5G,KAAL,EAAxB,CAAL,CACA,KAAKP,kBAAL,CAAwBE,CAAxB,CACD,CACD,MAAoCA,CAAAA,CACrC,CAPD,CAcAzB,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCmE,aAAhC,CAAgD,UAAW,CACzD,GAAI9D,CAAAA,CAAE,CAAG,KAAKC,UAAL,EAAT,CACA,MAAOD,CAAAA,CAAE,CAA2BA,CAAE,CAACkH,UAA9B,CAA4C,IACtD,CAHD,CASA3I,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCsB,cAAhC,CAAiD,UAAW,CAC1D,GAAIjB,CAAAA,CAAE,CAAG,KAAK8D,aAAL,EAAT,CACA,MAAO9D,CAAAA,CAAE,CAA2BA,CAAE,CAACkH,UAA9B,CAA4C,IACtD,CAHD,CASA3I,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCQ,eAAhC,CAAkD,UAAW,CAC3D,GAAIH,CAAAA,CAAE,CAAG,KAAK8D,aAAL,EAAT,CACA,MAAO9D,CAAAA,CAAE,EAAIA,CAAE,CAACmH,SAAT,CACqBnH,CAAE,CAACmH,SAAH,CAAaC,eADlC,CAEoB,IAC5B,CALD,CAWA7I,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCyB,kBAAhC,CAAqD,UAAW,CAC9D,GAAIpB,CAAAA,CAAE,CAAG,KAAKC,UAAL,EAAT,CACA,MAAOD,CAAAA,CAAE,CAA2BA,CAAE,CAACmH,SAA9B,CAA2C,IACrD,CAHD,CASA5I,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCuF,SAAhC,CAA4C,UAAW,CACrD,GAAImC,CAAAA,CAAK,CAAG,KAAKvD,aAAL,EAAZ,CACA,GAAIuD,CAAJ,CAAW,CACTA,CAAK,CAAChB,SAAN,CAAkB,KAAKC,eAAL,EACnB,CACF,CALD,CAWA/H,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCmD,gBAAhC,CAAmD,UAAW,CAC5D,GAAIwE,CAAAA,CAAG,CAAG,KAAKlG,kBAAL,EAAV,CACA,GAAIkG,CAAJ,CAAS,CACPA,CAAG,CAAClE,KAAJ,CAAU0C,kBAAV,CAA+B,KAAKC,qBAAL,EAChC,CACF,CALD,CAWAxH,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC8F,WAAhC,CAA8C,UAAW,CACvD,KAAKxE,cAAL,GAAsBoF,SAAtB,CAAkC,KAAKU,sBAAL,EACnC,CAFD,CASAxI,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC4H,QAAhC,CAA2C,SAASC,CAAT,CAAY,CACrDA,CAAC,CAACC,cAAF,EACD,CAFD,CAUAlJ,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC+H,SAAhC,CAA4C,SAASF,CAAT,CAAY,CACtD,GAAIG,CAAAA,CAAO,GAAX,CACA,OAAQH,CAAC,CAACI,OAAV,EACE,IAAKrJ,CAAAA,OAAO,CAACe,KAAR,CAAcuI,QAAd,CAAuBC,KAA5B,CACEH,CAAO,CAAG,KAAKI,WAAL,EAAV,CACA,MAEF,IAAKxJ,CAAAA,OAAO,CAACe,KAAR,CAAcuI,QAAd,CAAuBG,IAA5B,CACEL,CAAO,CAAG,KAAKM,YAAL,EAAV,CACA,MAEF,IAAK1J,CAAAA,OAAO,CAACe,KAAR,CAAcuI,QAAd,CAAuBK,IAA5B,CACEP,CAAO,CAAG,KAAKQ,UAAL,EAAV,CACA,MAEF,IAAK5J,CAAAA,OAAO,CAACe,KAAR,CAAcuI,QAAd,CAAuBO,EAA5B,CACET,CAAO,CAAG,KAAKU,cAAL,EAAV,CACA,MAEF,IAAK9J,CAAAA,OAAO,CAACe,KAAR,CAAcuI,QAAd,CAAuBS,KAA5B,CACA,IAAK/J,CAAAA,OAAO,CAACe,KAAR,CAAcuI,QAAd,CAAuBU,KAA5B,CACE,KAAK3C,MAAL,GACA+B,CAAO,GAAP,CACA,MAEF,QACEA,CAAO,GAAP,CAxBJ,CA2BA,GAAIA,CAAJ,CAAa,CACXH,CAAC,CAACC,cAAF,EACD,CAED,MAAOE,CAAAA,CACR,CAlCD,CA0CApJ,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCwI,UAAhC,CAA6C,UAAW,CACtD,GAAIzF,CAAAA,CAAQ,CAAG,KAAK8F,gBAAL,EAAf,CACA,GAAI9F,CAAJ,CAAc,CACZA,CAAQ,CAACoC,MAAT,EACD,CACD,QACD,CAND,CAaAvG,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC0I,cAAhC,CAAiD,UAAW,CAC1D,GAAII,CAAAA,CAAY,CAAG,KAAKC,oBAAL,EAAnB,CACA,GAAID,CAAJ,CAAkB,CAChBA,CAAY,CAAC3D,MAAb,EACD,CACD,QACD,CAND,CAaAvG,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCsI,YAAhC,CAA+C,UAAW,CACxD,GAAI,KAAK1C,WAAL,IAAsB,KAAKnG,SAA/B,CAA0C,CACxC,KAAKkE,WAAL,IACD,CAFD,IAEO,IACDM,CAAAA,CAAM,CAAG,KAAKJ,SAAL,EADR,CAEDhF,CAAI,CAAG,KAAKmE,OAAL,EAFN,CAIL,GAAIiB,CAAM,EAAKA,CAAM,EAAIpF,CAAzB,CAAgC,CAC9BoF,CAAM,CAACkB,MAAP,EACD,CACF,CACD,QACD,CAZD,CAoBAvG,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCoI,WAAhC,CAA8C,UAAW,CACvD,GAAI,KAAKxC,WAAL,EAAJ,CAAwB,CACtB,GAAI,CAAC,KAAKnG,SAAV,CAAqB,CACnB,KAAKkE,WAAL,IACD,CAFD,IAEO,CACL,KAAK1B,UAAL,CAAgB,CAAhB,EAAmBkD,MAAnB,EACD,CACD,QACD,CACD,QACD,CAVD,CAgBAvG,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCgJ,sBAAhC,CAAyD,UAAW,CAClE,GAAI,CAAC,KAAKvJ,SAAN,EAAmB,CAAC,KAAKmG,WAAL,EAAxB,CAA4C,CAC1C,MAAO,KACR,CAED,MAAO,MAAK3D,UAAL,CAAgB,KAAKH,aAAL,GAAuB,CAAvC,EAA0CkH,sBAA1C,EACR,CAND,CAaApK,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC6I,gBAAhC,CAAmD,UAAW,CAC5D,GAAI,KAAKjD,WAAL,IAAsB,KAAKnG,SAA/B,CAA0C,CACxC,MAAO,MAAKwC,UAAL,CAAgB,CAAhB,CACR,CAH2D,GAIxDgC,CAAAA,CAAM,CAAG,IAJ+C,CAKxDgF,CALwD,CAM5D,MAAOhF,CAAM,EAAI,KAAKjB,OAAL,EAAjB,CAAiC,CAC/BiG,CAAI,CAAGhF,CAAM,CAACe,cAAP,EAAP,CACA,GAAY,IAAR,EAAAiE,CAAJ,CAAkB,CAChB,MAAOA,CAAAA,CACR,CACDhF,CAAM,CAAGA,CAAM,CAACJ,SAAP,EACV,CACD,MAAO,KACR,CAdD,CAoBAjF,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgC+I,oBAAhC,CAAuD,UAAW,CAChE,GAAIG,CAAAA,CAAE,CAAG,KAAKnE,kBAAL,EAAT,CACA,GAAU,IAAN,EAAAmE,CAAJ,CAAgB,CACd,MAAOA,CAAAA,CAAE,CAACF,sBAAH,EACR,CAJ+D,GAK5D/E,CAAAA,CAAM,CAAG,KAAKJ,SAAL,EALmD,CAM5DhF,CAAI,CAAG,KAAKmE,OAAL,EANqD,CAOhE,GAAIiB,CAAM,EAAIpF,CAAd,CAAoB,CAClB,MAAO,KACR,CAED,GAAI,MAAQA,CAAZ,CAAkB,CAChB,MAAO,KACR,CACD,MAA6CoF,CAAAA,CAC9C,CAfD,CAsBArF,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBkB,SAAtB,CAAgCiD,eAAhC,CAAkD,SAASpE,CAAT,CAAe,CAC/D,GAAI,KAAKA,IAAL,EAAaA,CAAjB,CAAuB,CACrB,KAAKA,IAAL,CAAYA,CAAZ,CACA,KAAK4F,YAAL,CAAkB,SAASzC,CAAT,CAAgB,CAAEA,CAAK,CAACiB,eAAN,CAAsBpE,CAAtB,CAA8B,CAAlE,CACD,CACF,CALD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Definition of the Blockly.tree.BaseNode class.\n * This class is similar to Closure's goog.ui.tree.BaseNode class.\n * @author samelh@google.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.tree.BaseNode');\n\ngoog.require('Blockly.Component');\ngoog.require('Blockly.utils.aria');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.KeyCodes');\ngoog.require('Blockly.utils.style');\n\n\n/**\n * An abstract base class for a node in the tree.\n * Similar to goog.ui.tree.BaseNode\n *\n * @param {string} content The content of the node label treated as\n *     plain-text and will be HTML escaped.\n * @param {!Blockly.tree.BaseNode.Config} config The configuration for the tree.\n * @constructor\n * @extends {Blockly.Component}\n */\nBlockly.tree.BaseNode = function(content, config) {\n  Blockly.Component.call(this);\n\n  /**\n   * Text content of the node label.\n   * @type {string}\n   * @package\n   */\n  this.content = content;\n\n  /**\n   * @type {string}\n   * @package\n   */\n  this.iconClass;\n\n  /**\n   * @type {string}\n   * @package\n   */\n  this.expandedIconClass;\n\n  /**\n   * The configuration for the tree.\n   * @type {!Blockly.tree.BaseNode.Config}\n   * @protected\n   */\n  this.config_ = config;\n\n  /**\n   * @type {Blockly.tree.TreeControl}\n   * @protected\n   */\n  this.tree;\n\n  /**\n   * @type {Blockly.tree.BaseNode}\n   * @private\n   */\n  this.previousSibling_;\n\n  /**\n   * @type {Blockly.tree.BaseNode}\n   * @private\n   */\n  this.nextSibling_;\n\n  /**\n   * Whether the tree item is selected.\n   * @type {boolean}\n   * @protected\n   */\n  this.selected_ = false;\n\n  /**\n   * Whether the tree node is expanded.\n   * @type {boolean}\n   * @protected\n   */\n  this.expanded_ = false;\n\n  /**\n   * Nesting depth of this node; cached result of getDepth.\n   * -1 if value has not been cached.\n   * @type {number}\n   * @private\n   */\n  this.depth_ = -1;\n};\nBlockly.utils.object.inherits(Blockly.tree.BaseNode, Blockly.Component);\n\n\n/**\n * The config type for the tree.\n * @typedef {{\n *            indentWidth:number,\n *            cssRoot:string,\n *            cssHideRoot:string,\n *            cssTreeRow:string,\n *            cssItemLabel:string,\n *            cssTreeIcon:string,\n *            cssExpandedFolderIcon:string,\n *            cssCollapsedFolderIcon:string,\n *            cssFileIcon:string,\n *            cssSelectedRow:string\n *          }}\n */\nBlockly.tree.BaseNode.Config;\n\n/**\n * Map of nodes in existence. Needed to route events to the appropriate nodes.\n * Nodes are added to the map at {@link #enterDocument} time and removed at\n * {@link #exitDocument} time.\n * @type {Object}\n * @protected\n */\nBlockly.tree.BaseNode.allNodes = {};\n\n/** @override */\nBlockly.tree.BaseNode.prototype.disposeInternal = function() {\n  Blockly.tree.BaseNode.superClass_.disposeInternal.call(this);\n  if (this.tree) {\n    this.tree = null;\n  }\n  this.setElementInternal(null);\n};\n\n\n/**\n * Adds roles and states.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.initAccessibility = function() {\n  var el = this.getElement();\n  if (el) {\n    // Set an id for the label\n    var label = this.getLabelElement();\n    if (label && !label.id) {\n      label.id = this.getId() + '.label';\n    }\n\n    Blockly.utils.aria.setRole(el, Blockly.utils.aria.Role.TREEITEM);\n    Blockly.utils.aria.setState(el, Blockly.utils.aria.State.SELECTED, false);\n    Blockly.utils.aria.setState(el,\n        Blockly.utils.aria.State.LEVEL, this.getDepth());\n    if (label) {\n      Blockly.utils.aria.setState(el,\n          Blockly.utils.aria.State.LABELLEDBY, label.id);\n    }\n\n    var img = this.getIconElement();\n    if (img) {\n      Blockly.utils.aria.setRole(img, Blockly.utils.aria.Role.PRESENTATION);\n    }\n\n    var ce = this.getChildrenElement();\n    if (ce) {\n      Blockly.utils.aria.setRole(ce, Blockly.utils.aria.Role.GROUP);\n\n      // In case the children will be created lazily.\n      if (ce.hasChildNodes()) {\n        // Only set aria-expanded if the node has children (can be expanded).\n        Blockly.utils.aria.setState(el, Blockly.utils.aria.State.EXPANDED, false);\n\n        // do setsize for each child\n        var count = this.getChildCount();\n        for (var i = 1; i <= count; i++) {\n          var child = /** @type {!Element} */ (this.getChildAt(i - 1).getElement());\n          Blockly.utils.aria.setState(child,\n              Blockly.utils.aria.State.SETSIZE, count);\n          Blockly.utils.aria.setState(child,\n              Blockly.utils.aria.State.POSINSET, i);\n        }\n      }\n    }\n  }\n};\n\n\n/** @override */\nBlockly.tree.BaseNode.prototype.createDom = function() {\n  var element = document.createElement('div');\n  element.appendChild(this.toDom());\n  this.setElementInternal(/** @type {!HTMLElement} */ (element));\n};\n\n\n/** @override */\nBlockly.tree.BaseNode.prototype.enterDocument = function() {\n  Blockly.tree.BaseNode.superClass_.enterDocument.call(this);\n  Blockly.tree.BaseNode.allNodes[this.getId()] = this;\n  this.initAccessibility();\n};\n\n\n/** @override */\nBlockly.tree.BaseNode.prototype.exitDocument = function() {\n  Blockly.tree.BaseNode.superClass_.exitDocument.call(this);\n  delete Blockly.tree.BaseNode.allNodes[this.getId()];\n};\n\n\n/**\n * The method assumes that the child doesn't have parent node yet.\n * @override\n */\nBlockly.tree.BaseNode.prototype.addChildAt = function(child, index) {\n  child = /** @type {Blockly.tree.BaseNode} */ (child);\n  var prevNode = this.getChildAt(index - 1);\n  var nextNode = this.getChildAt(index);\n\n  Blockly.tree.BaseNode.superClass_.addChildAt.call(this, child, index);\n\n  child.previousSibling_ = prevNode;\n  child.nextSibling_ = nextNode;\n\n  if (prevNode) {\n    prevNode.nextSibling_ = child;\n  }\n  if (nextNode) {\n    nextNode.previousSibling_ = child;\n  }\n\n  var tree = this.getTree();\n  if (tree) {\n    child.setTreeInternal(tree);\n  }\n\n  child.setDepth_(this.getDepth() + 1);\n\n  var el = this.getElement();\n  if (el) {\n    this.updateExpandIcon();\n    Blockly.utils.aria.setState(\n        el, Blockly.utils.aria.State.EXPANDED, this.expanded_);\n    if (this.expanded_) {\n      var childrenEl = this.getChildrenElement();\n      if (!child.getElement()) {\n        child.createDom();\n      }\n      var childElement = child.getElement();\n      var nextElement = nextNode && nextNode.getElement();\n      childrenEl.insertBefore(childElement, nextElement);\n\n      if (this.isInDocument()) {\n        child.enterDocument();\n      }\n\n      if (!nextNode) {\n        if (prevNode) {\n          prevNode.updateExpandIcon();\n        } else {\n          Blockly.utils.style.setElementShown(childrenEl, true);\n          this.setExpanded(this.expanded_);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Appends a node as a child to the current node.\n * @param {Blockly.tree.BaseNode} child The child to add.\n * @package\n */\nBlockly.tree.BaseNode.prototype.add = function(child) {\n  if (child.getParent()) {\n    throw Error(Blockly.Component.Error.PARENT_UNABLE_TO_BE_SET);\n  }\n  this.addChildAt(child, this.getChildCount());\n};\n\n/**\n * Returns the tree.\n * @return {?Blockly.tree.TreeControl} tree\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getTree = function() {\n  return null;\n};\n\n/**\n * Returns the depth of the node in the tree. Should not be overridden.\n * @return {number} The non-negative depth of this node (the root is zero).\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getDepth = function() {\n  var depth = this.depth_;\n  if (depth < 0) {\n    var parent = this.getParent();\n    if (parent) {\n      depth = parent.getDepth() + 1;\n    } else {\n      depth = 0;\n    }\n    this.setDepth_(depth);\n  }\n  return depth;\n};\n\n/**\n * Changes the depth of a node (and all its descendants).\n * @param {number} depth The new nesting depth; must be non-negative.\n * @private\n */\nBlockly.tree.BaseNode.prototype.setDepth_ = function(depth) {\n  if (depth != this.depth_) {\n    this.depth_ = depth;\n    var row = this.getRowElement();\n    if (row) {\n      var indent = this.getPixelIndent_() + 'px';\n      if (this.rightToLeft_) {\n        row.style.paddingRight = indent;\n      } else {\n        row.style.paddingLeft = indent;\n      }\n    }\n    this.forEachChild(function(child) { child.setDepth_(depth + 1); });\n  }\n};\n\n/**\n * Returns true if the node is a descendant of this node.\n * @param {Blockly.Component} node The node to check.\n * @return {boolean} True if the node is a descendant of this node, false\n *    otherwise.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.contains = function(node) {\n  while (node) {\n    if (node == this) {\n      return true;\n    }\n    node = node.getParent();\n  }\n  return false;\n};\n\n/**\n * This is re-defined here to indicate to the Closure Compiler the correct\n * child return type.\n * @param {number} index 0-based index.\n * @return {Blockly.tree.BaseNode} The child at the given index; null if none.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getChildAt;\n\n/**\n * Returns the children of this node.\n * @return {!Array.<!Blockly.tree.BaseNode>} The children.\n * @package\n */\nBlockly.tree.BaseNode.prototype.getChildren = function() {\n  var children = [];\n  this.forEachChild(function(child) { children.push(child); });\n  return children;\n};\n\n/**\n * Returns the node's parent, if any.\n * @return {?Blockly.tree.BaseNode} The parent node.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getParent = function() {\n  return /** @type {Blockly.tree.BaseNode} */ (\n    Blockly.tree.BaseNode.superClass_.getParent.call(this));\n};\n\n/**\n * @return {Blockly.tree.BaseNode} The previous sibling of this node.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getPreviousSibling = function() {\n  return this.previousSibling_;\n};\n\n/**\n * @return {Blockly.tree.BaseNode} The next sibling of this node.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getNextSibling = function() {\n  return this.nextSibling_;\n};\n\n/**\n * @return {boolean} Whether the node is the last sibling.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.isLastSibling = function() {\n  return !this.nextSibling_;\n};\n\n/**\n * @return {boolean} Whether the node is selected.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.isSelected = function() {\n  return this.selected_;\n};\n\n/**\n * Selects the node.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.select = function() {\n  var tree = this.getTree();\n  if (tree) {\n    tree.setSelectedItem(this);\n  }\n};\n\n/**\n * Called from the tree to instruct the node change its selection state.\n * @param {boolean} selected The new selection state.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.setSelected = function(selected) {\n  if (this.selected_ == selected) {\n    return;\n  }\n  this.selected_ = selected;\n\n  this.updateRow();\n\n  var el = this.getElement();\n  if (el) {\n    Blockly.utils.aria.setState(el, Blockly.utils.aria.State.SELECTED, selected);\n    if (selected) {\n      var treeElement = /** @type {!Element} */ (this.getTree().getElement());\n      Blockly.utils.aria.setState(treeElement,\n          Blockly.utils.aria.State.ACTIVEDESCENDANT, this.getId());\n    }\n  }\n};\n\n/**\n * Sets the node to be expanded.\n * @param {boolean} expanded Whether to expand or close the node.\n * @package\n */\nBlockly.tree.BaseNode.prototype.setExpanded = function(expanded) {\n  var isStateChange = expanded != this.expanded_;\n  var ce;\n  this.expanded_ = expanded;\n  var tree = this.getTree();\n  var el = this.getElement();\n\n  if (this.hasChildren()) {\n    if (!expanded && tree && this.contains(tree.getSelectedItem())) {\n      this.select();\n    }\n\n    if (el) {\n      ce = this.getChildrenElement();\n      if (ce) {\n        Blockly.utils.style.setElementShown(ce, expanded);\n        Blockly.utils.aria.setState(el, Blockly.utils.aria.State.EXPANDED, expanded);\n\n        // Make sure we have the HTML for the children here.\n        if (expanded && this.isInDocument() && !ce.hasChildNodes()) {\n          this.forEachChild(function(child) {\n            ce.appendChild(child.toDom());\n          });\n          this.forEachChild(function(child) { child.enterDocument(); });\n        }\n      }\n      this.updateExpandIcon();\n    }\n  } else {\n    ce = this.getChildrenElement();\n    if (ce) {\n      Blockly.utils.style.setElementShown(ce, false);\n    }\n  }\n  if (el) {\n    this.updateIcon_();\n  }\n\n  if (isStateChange) {\n    if (expanded) {\n      this.doNodeExpanded();\n    } else {\n      this.doNodeCollapsed();\n    }\n  }\n};\n\n/**\n * Used to notify a node of that we have expanded it.\n * Can be overridden by subclasses, see Blockly.tree.TreeNode.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.doNodeExpanded = function() {\n  // NOP\n};\n\n/**\n * Used to notify a node that we have collapsed it.\n * Can be overridden by subclasses, see Blockly.tree.TreeNode.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.doNodeCollapsed = function() {\n  // NOP\n};\n\n/**\n * Toggles the expanded state of the node.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.toggle = function() {\n  this.setExpanded(!this.expanded_);\n};\n\n/**\n * Creates HTML Element for the node.\n * @return {!Element} HTML element\n * @protected\n */\nBlockly.tree.BaseNode.prototype.toDom = function() {\n  var nonEmptyAndExpanded = this.expanded_ && this.hasChildren();\n\n  var children = document.createElement('div');\n  children.style.backgroundPosition = this.getBackgroundPosition();\n  if (!nonEmptyAndExpanded) {\n    children.style.display = 'none';\n  }\n\n  if (nonEmptyAndExpanded) {\n    // children\n    this.forEachChild(function(child) { children.appendChild(child.toDom()); });\n  }\n\n  var node = document.createElement('div');\n  node.id = this.getId();\n\n  node.appendChild(this.getRowDom());\n  node.appendChild(children);\n\n  return node;\n};\n\n/**\n * Calculates correct padding for each row. Nested categories are indented more.\n * @return {number} The pixel indent of the row.\n * @private\n */\nBlockly.tree.BaseNode.prototype.getPixelIndent_ = function() {\n  return Math.max(0, (this.getDepth() - 1) * this.config_.indentWidth);\n};\n\n/**\n * Creates row with icon and label dom.\n * @return {!Element} The HTML element for the row.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getRowDom = function() {\n  var row = document.createElement('div');\n  row.className = this.getRowClassName();\n  row.style['padding-' + (this.rightToLeft_ ? 'right' : 'left')] =\n      this.getPixelIndent_() + 'px';\n\n  row.appendChild(this.getIconDom());\n  row.appendChild(this.getLabelDom());\n\n  return row;\n};\n\n/**\n * Adds the selected class name to the default row class name if node is\n *     selected.\n * @return {string} The class name for the row.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getRowClassName = function() {\n  var selectedClass = '';\n  if (this.isSelected()) {\n    selectedClass = ' ' + (this.config_.cssSelectedRow || '');\n  }\n  return this.config_.cssTreeRow + selectedClass;\n};\n\n/**\n * @return {!Element} The HTML element for the label.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getLabelDom = function() {\n  var label = document.createElement('span');\n  label.className = this.config_.cssItemLabel || '';\n  label.textContent = this.content;\n  return label;\n};\n\n/**\n * @return {!Element} The HTML for the icon.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getIconDom = function() {\n  var icon = document.createElement('span');\n  icon.style.display = 'inline-block';\n  icon.className = this.getCalculatedIconClass();\n  return icon;\n};\n\n/**\n * Gets the calculated icon class.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getCalculatedIconClass = function() {\n  throw Error(Blockly.Component.Error.ABSTRACT_METHOD);\n};\n\n/**\n * Gets a string containing the x and y position of the node's background.\n * @return {string} The background position style value.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getBackgroundPosition = function() {\n  return (this.isLastSibling() ? '-100' : (this.getDepth() - 1) *\n      this.config_.indentWidth) + 'px 0';\n};\n\n/**\n * @return {HTMLElement} The element for the tree node.\n * @override\n */\nBlockly.tree.BaseNode.prototype.getElement = function() {\n  var el = Blockly.tree.BaseNode.superClass_.getElement.call(this);\n  if (!el) {\n    el = document.getElementById(this.getId());\n    this.setElementInternal(el);\n  }\n  return /** @type {!HTMLElement} */ (el);\n};\n\n/**\n * @return {Element} The row is the div that is used to draw the node without\n *     the children.\n * @package\n */\nBlockly.tree.BaseNode.prototype.getRowElement = function() {\n  var el = this.getElement();\n  return el ? /** @type {Element} */ (el.firstChild) : null;\n};\n\n/**\n * @return {Element} The icon element.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getIconElement = function() {\n  var el = this.getRowElement();\n  return el ? /** @type {Element} */ (el.firstChild) : null;\n};\n\n/**\n * @return {Element} The label element.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getLabelElement = function() {\n  var el = this.getRowElement();\n  return el && el.lastChild ?\n      /** @type {Element} */ (el.lastChild.previousSibling) :\n                             null;\n};\n\n/**\n * @return {Element} The div containing the children.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getChildrenElement = function() {\n  var el = this.getElement();\n  return el ? /** @type {Element} */ (el.lastChild) : null;\n};\n\n/**\n * Updates the row styles.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.updateRow = function() {\n  var rowEl = this.getRowElement();\n  if (rowEl) {\n    rowEl.className = this.getRowClassName();\n  }\n};\n\n/**\n * Updates the expand icon of the node.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.updateExpandIcon = function() {\n  var cel = this.getChildrenElement();\n  if (cel) {\n    cel.style.backgroundPosition = this.getBackgroundPosition();\n  }\n};\n\n/**\n * Updates the icon of the node. Assumes that this.getElement() is created.\n * @private\n */\nBlockly.tree.BaseNode.prototype.updateIcon_ = function() {\n  this.getIconElement().className = this.getCalculatedIconClass();\n};\n\n/**\n * Handles a click event.\n * @param {!Event} e The browser event.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.onClick_ = function(e) {\n  e.preventDefault();\n};\n\n/**\n * Handles a key down event.\n * @param {!Event} e The browser event.\n * @return {boolean} The handled value.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.onKeyDown = function(e) {\n  var handled = true;\n  switch (e.keyCode) {\n    case Blockly.utils.KeyCodes.RIGHT:\n      handled = this.selectChild();\n      break;\n\n    case Blockly.utils.KeyCodes.LEFT:\n      handled = this.selectParent();\n      break;\n\n    case Blockly.utils.KeyCodes.DOWN:\n      handled = this.selectNext();\n      break;\n\n    case Blockly.utils.KeyCodes.UP:\n      handled = this.selectPrevious();\n      break;\n\n    case Blockly.utils.KeyCodes.ENTER:\n    case Blockly.utils.KeyCodes.SPACE:\n      this.toggle();\n      handled = true;\n      break;\n\n    default:\n      handled = false;\n  }\n\n  if (handled) {\n    e.preventDefault();\n  }\n\n  return handled;\n};\n\n\n/**\n * Select the next node.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @package\n */\nBlockly.tree.BaseNode.prototype.selectNext = function() {\n  var nextNode = this.getNextShownNode();\n  if (nextNode) {\n    nextNode.select();\n  }\n  return true;\n};\n\n/**\n * Select the previous node.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @package\n */\nBlockly.tree.BaseNode.prototype.selectPrevious = function() {\n  var previousNode = this.getPreviousShownNode();\n  if (previousNode) {\n    previousNode.select();\n  }\n  return true;\n};\n\n/**\n * Select the parent node or collapse the current node.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @package\n */\nBlockly.tree.BaseNode.prototype.selectParent = function() {\n  if (this.hasChildren() && this.expanded_) {\n    this.setExpanded(false);\n  } else {\n    var parent = this.getParent();\n    var tree = this.getTree();\n    // don't go to root if hidden\n    if (parent && (parent != tree)) {\n      parent.select();\n    }\n  }\n  return true;\n};\n\n/**\n * Expand the current node if it's not already expanded, or select the\n * child node.\n * @return {boolean} True if the action has been handled, false otherwise.\n * @package\n */\nBlockly.tree.BaseNode.prototype.selectChild = function() {\n  if (this.hasChildren()) {\n    if (!this.expanded_) {\n      this.setExpanded(true);\n    } else {\n      this.getChildAt(0).select();\n    }\n    return true;\n  }\n  return false;\n};\n\n/**\n * @return {Blockly.tree.BaseNode} The last shown descendant.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getLastShownDescendant = function() {\n  if (!this.expanded_ || !this.hasChildren()) {\n    return this;\n  }\n  // we know there is at least 1 child\n  return this.getChildAt(this.getChildCount() - 1).getLastShownDescendant();\n};\n\n/**\n * @return {Blockly.tree.BaseNode} The next node to show or null if there isn't\n *     a next node to show.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getNextShownNode = function() {\n  if (this.hasChildren() && this.expanded_) {\n    return this.getChildAt(0);\n  }\n  var parent = this;\n  var next;\n  while (parent != this.getTree()) {\n    next = parent.getNextSibling();\n    if (next != null) {\n      return next;\n    }\n    parent = parent.getParent();\n  }\n  return null;\n};\n\n/**\n * @return {Blockly.tree.BaseNode} The previous node to show.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.getPreviousShownNode = function() {\n  var ps = this.getPreviousSibling();\n  if (ps != null) {\n    return ps.getLastShownDescendant();\n  }\n  var parent = this.getParent();\n  var tree = this.getTree();\n  if (parent == tree) {\n    return null;\n  }\n  // The root is the first node.\n  if (this == tree) {\n    return null;\n  }\n  return /** @type {Blockly.tree.BaseNode} */ (parent);\n};\n\n/**\n * Internal method that is used to set the tree control on the node.\n * @param {Blockly.tree.TreeControl} tree The tree control.\n * @protected\n */\nBlockly.tree.BaseNode.prototype.setTreeInternal = function(tree) {\n  if (this.tree != tree) {\n    this.tree = tree;\n    this.forEachChild(function(child) { child.setTreeInternal(tree); });\n  }\n};\n"],"file":"basenode.min.js"}