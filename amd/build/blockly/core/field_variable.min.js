'use strict';goog.provide("Blockly.FieldVariable");goog.require("Blockly.Events");goog.require("Blockly.Events.BlockChange");goog.require("Blockly.FieldDropdown");goog.require("Blockly.fieldRegistry");goog.require("Blockly.Msg");goog.require("Blockly.utils");goog.require("Blockly.utils.object");goog.require("Blockly.utils.Size");goog.require("Blockly.VariableModel");goog.require("Blockly.Variables");goog.require("Blockly.Xml");Blockly.FieldVariable=function(a,b,c,d,e){this.menuGenerator_=Blockly.FieldVariable.dropdownCreate;this.defaultVariableName=a||"";this.size_=new Blockly.utils.Size(0,0);e&&this.configure_(e);b&&this.setValidator(b);if(!e){this.setTypes_(c,d)}};Blockly.utils.object.inherits(Blockly.FieldVariable,Blockly.FieldDropdown);Blockly.FieldVariable.fromJson=function(a){var b=Blockly.utils.replaceMessageReferences(a.variable);return new Blockly.FieldVariable(b,void 0,void 0,void 0,a)};Blockly.FieldVariable.prototype.SERIALIZABLE=!0;Blockly.FieldVariable.prototype.configure_=function(a){Blockly.FieldVariable.superClass_.configure_.call(this,a);this.setTypes_(a.variableTypes,a.defaultType)};Blockly.FieldVariable.prototype.initModel=function(){if(this.variable_){return}var a=Blockly.Variables.getOrCreateVariablePackage(this.sourceBlock_.workspace,null,this.defaultVariableName,this.defaultType_);this.doValueUpdate_(a.getId())};Blockly.FieldVariable.prototype.shouldAddBorderRect_=function(){return Blockly.FieldVariable.superClass_.shouldAddBorderRect_.call(this)&&(!this.getConstants().FIELD_DROPDOWN_NO_BORDER_RECT_SHADOW||"variables_get"!=this.sourceBlock_.type)};Blockly.FieldVariable.prototype.fromXml=function(a){var b=a.getAttribute("id"),c=a.textContent,d=a.getAttribute("variabletype")||a.getAttribute("variableType")||"",e=Blockly.Variables.getOrCreateVariablePackage(this.sourceBlock_.workspace,b,c,d);if(null!=d&&d!==e.type){throw Error("Serialized variable type with id '"+e.getId()+"' had type "+e.type+", and does not match variable field that references it: "+Blockly.Xml.domToText(a)+".")}this.setValue(e.getId())};Blockly.FieldVariable.prototype.toXml=function(a){this.initModel();a.id=this.variable_.getId();a.textContent=this.variable_.name;if(this.variable_.type){a.setAttribute("variabletype",this.variable_.type)}return a};Blockly.FieldVariable.prototype.setSourceBlock=function(a){if(a.isShadow()){throw Error("Variable fields are not allowed to exist on shadow blocks.")}Blockly.FieldVariable.superClass_.setSourceBlock.call(this,a)};Blockly.FieldVariable.prototype.getValue=function(){return this.variable_?this.variable_.getId():null};Blockly.FieldVariable.prototype.getText=function(){return this.variable_?this.variable_.name:""};Blockly.FieldVariable.prototype.getVariable=function(){return this.variable_};Blockly.FieldVariable.prototype.getValidator=function(){if(this.variable_){return this.validator_}return null};Blockly.FieldVariable.prototype.doClassValidation_=function(a){if(null===a){return null}var b=a,c=Blockly.Variables.getVariable(this.sourceBlock_.workspace,b);if(!c){console.warn("Variable id doesn't point to a real variable! ID was "+b);return null}var d=c.type;if(!this.typeIsAllowed_(d)){console.warn("Variable type doesn't match this field!  Type was "+d);return null}return b};Blockly.FieldVariable.prototype.doValueUpdate_=function(a){this.variable_=Blockly.Variables.getVariable(this.sourceBlock_.workspace,a);Blockly.FieldVariable.superClass_.doValueUpdate_.call(this,a)};Blockly.FieldVariable.prototype.typeIsAllowed_=function(a){var b=this.getVariableTypes_();if(!b){return!0}for(var c=0;c<b.length;c++){if(a==b[c]){return!0}}return!1};Blockly.FieldVariable.prototype.getVariableTypes_=function(){var a=this.variableTypes;if(null===a){if(this.sourceBlock_&&this.sourceBlock_.workspace){return this.sourceBlock_.workspace.getVariableTypes()}}a=a||[""];if(0==a.length){var b=this.getText();throw Error("'variableTypes' of field variable "+b+" was an empty list")}return a};Blockly.FieldVariable.prototype.setTypes_=function(a,b){var c=b||"";if(null==a||a==void 0){var d=null}else if(Array.isArray(a)){for(var d=a,e=!1,f=0;f<d.length;f++){if(d[f]==c){e=!0}}if(!e){throw Error("Invalid default type '"+c+"' in the definition of a FieldVariable")}}else{throw Error("'variableTypes' was not an array in the definition of a FieldVariable")}this.defaultType_=c;this.variableTypes=d};Blockly.FieldVariable.prototype.refreshVariableName=function(){this.forceRerender()};Blockly.FieldVariable.dropdownCreate=function(){if(!this.variable_){throw Error("Tried to call dropdownCreate on a variable field with no variable selected.")}var a=this.getText(),b=[];if(this.sourceBlock_&&this.sourceBlock_.workspace){for(var c=this.getVariableTypes_(),d=0;d<c.length;d++){var e=c[d],f=this.sourceBlock_.workspace.getVariablesOfType(e);b=b.concat(f)}}b.sort(Blockly.VariableModel.compareByName);for(var g=[],d=0;d<b.length;d++){g[d]=[b[d].name,b[d].getId()]}g.push([Blockly.Msg.RENAME_VARIABLE,Blockly.RENAME_VARIABLE_ID]);if(Blockly.Msg.DELETE_VARIABLE){g.push([Blockly.Msg.DELETE_VARIABLE.replace("%1",a),Blockly.DELETE_VARIABLE_ID])}return g};Blockly.FieldVariable.prototype.onItemSelected_=function(a,b){var c=b.getValue();if(this.sourceBlock_&&this.sourceBlock_.workspace){if(c==Blockly.RENAME_VARIABLE_ID){Blockly.Variables.renameVariable(this.sourceBlock_.workspace,this.variable_);return}else if(c==Blockly.DELETE_VARIABLE_ID){this.sourceBlock_.workspace.deleteVariableById(this.variable_.getId());return}}this.setValue(c)};Blockly.FieldVariable.prototype.referencesVariables=function(){return!0};Blockly.fieldRegistry.register("field_variable",Blockly.FieldVariable);
//# sourceMappingURL=field_variable.min.js.map
