{"version":3,"sources":["../../../src/blockly/core/icon.js"],"names":["goog","provide","require","Blockly","Icon","block","block_","prototype","collapseHidden","SIZE","bubble_","iconXY_","createIcon","iconGroup_","utils","dom","createSvgElement","isInFlyout","addClass","drawIcon_","getSvgRoot","appendChild","bindEventWithChecks_","iconClick_","updateEditable","dispose","removeNode","setVisible","isVisible","e","workspace","isDragging","isRightButton","applyColour","setColour","style","colourPrimary","setIconLocation","xy","setAnchorLocation","computeIconLocation","blockXY","getRelativeToSurfaceXY","iconXY","getRelativeXY","newXY","Coordinate","x","y","equals","getIconLocation","getCorrectedSize","Size"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2013 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Object representing an icon on a block.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Icon');\n\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.Size');\n\n\n/**\n * Class for an icon.\n * @param {Blockly.BlockSvg} block The block associated with this icon.\n * @constructor\n * @abstract\n */\nBlockly.Icon = function(block) {\n  /**\n   * The block this icon is attached to.\n   * @type {Blockly.BlockSvg}\n   * @protected\n   */\n  this.block_ = block;\n};\n\n/**\n * Does this icon get hidden when the block is collapsed.\n */\nBlockly.Icon.prototype.collapseHidden = true;\n\n/**\n * Height and width of icons.\n */\nBlockly.Icon.prototype.SIZE = 17;\n\n/**\n * Bubble UI (if visible).\n * @type {Blockly.Bubble}\n * @protected\n */\nBlockly.Icon.prototype.bubble_ = null;\n\n/**\n * Absolute coordinate of icon's center.\n * @type {Blockly.utils.Coordinate}\n * @protected\n */\nBlockly.Icon.prototype.iconXY_ = null;\n\n/**\n * Create the icon on the block.\n */\nBlockly.Icon.prototype.createIcon = function() {\n  if (this.iconGroup_) {\n    // Icon already exists.\n    return;\n  }\n  /* Here's the markup that will be generated:\n  <g class=\"blocklyIconGroup\">\n    ...\n  </g>\n  */\n  this.iconGroup_ = Blockly.utils.dom.createSvgElement('g',\n      {'class': 'blocklyIconGroup'}, null);\n  if (this.block_.isInFlyout) {\n    Blockly.utils.dom.addClass(\n        /** @type {!Element} */ (this.iconGroup_), 'blocklyIconGroupReadonly');\n  }\n  this.drawIcon_(this.iconGroup_);\n\n  this.block_.getSvgRoot().appendChild(this.iconGroup_);\n  Blockly.bindEventWithChecks_(\n      this.iconGroup_, 'mouseup', this, this.iconClick_);\n  this.updateEditable();\n};\n\n/**\n * Dispose of this icon.\n */\nBlockly.Icon.prototype.dispose = function() {\n  // Dispose of and unlink the icon.\n  Blockly.utils.dom.removeNode(this.iconGroup_);\n  this.iconGroup_ = null;\n  // Dispose of and unlink the bubble.\n  this.setVisible(false);\n  this.block_ = null;\n};\n\n/**\n * Add or remove the UI indicating if this icon may be clicked or not.\n */\nBlockly.Icon.prototype.updateEditable = function() {\n  // No-op on the base class.\n};\n\n/**\n * Is the associated bubble visible?\n * @return {boolean} True if the bubble is visible.\n */\nBlockly.Icon.prototype.isVisible = function() {\n  return !!this.bubble_;\n};\n\n/**\n * Clicking on the icon toggles if the bubble is visible.\n * @param {!Event} e Mouse click event.\n * @protected\n */\nBlockly.Icon.prototype.iconClick_ = function(e) {\n  if (this.block_.workspace.isDragging()) {\n    // Drag operation is concluding.  Don't open the editor.\n    return;\n  }\n  if (!this.block_.isInFlyout && !Blockly.utils.isRightButton(e)) {\n    this.setVisible(!this.isVisible());\n  }\n};\n\n/**\n * Change the colour of the associated bubble to match its block.\n */\nBlockly.Icon.prototype.applyColour = function() {\n  if (this.isVisible()) {\n    this.bubble_.setColour(this.block_.style.colourPrimary);\n  }\n};\n\n/**\n * Notification that the icon has moved.  Update the arrow accordingly.\n * @param {!Blockly.utils.Coordinate} xy Absolute location in workspace coordinates.\n */\nBlockly.Icon.prototype.setIconLocation = function(xy) {\n  this.iconXY_ = xy;\n  if (this.isVisible()) {\n    this.bubble_.setAnchorLocation(xy);\n  }\n};\n\n/**\n * Notification that the icon has moved, but we don't really know where.\n * Recompute the icon's location from scratch.\n */\nBlockly.Icon.prototype.computeIconLocation = function() {\n  // Find coordinates for the centre of the icon and update the arrow.\n  var blockXY = this.block_.getRelativeToSurfaceXY();\n  var iconXY = Blockly.utils.getRelativeXY(this.iconGroup_);\n  var newXY = new Blockly.utils.Coordinate(\n      blockXY.x + iconXY.x + this.SIZE / 2,\n      blockXY.y + iconXY.y + this.SIZE / 2);\n  if (!Blockly.utils.Coordinate.equals(this.getIconLocation(), newXY)) {\n    this.setIconLocation(newXY);\n  }\n};\n\n/**\n * Returns the center of the block's icon relative to the surface.\n * @return {Blockly.utils.Coordinate} Object with x and y properties in\n *     workspace coordinates.\n */\nBlockly.Icon.prototype.getIconLocation = function() {\n  return this.iconXY_;\n};\n\n/**\n * Get the size of the icon as used for rendering.\n * This differs from the actual size of the icon, because it bulges slightly\n * out of its row rather than increasing the height of its row.\n * @return {!Blockly.utils.Size} Height and width.\n */\n// TODO (#2562): Remove getCorrectedSize.\nBlockly.Icon.prototype.getCorrectedSize = function() {\n  return new Blockly.utils.Size(\n      Blockly.Icon.prototype.SIZE, Blockly.Icon.prototype.SIZE - 2);\n};\n\n/**\n * Draw the icon.\n * @param {!Element} group The icon group.\n * @protected\n */\nBlockly.Icon.prototype.drawIcon_;\n"],"file":"icon.min.js"}