{"version":3,"sources":["../../../../../src/blockly/core/renderers/common/i_path_object.js"],"names":["goog","provide","requireType","Blockly","blockRendering","IPathObject","prototype","svgPath","constants","style","cursorSvg","markerSvg","setPath","applyColour","setStyle","flipRTL","setCursorSvg","setMarkerSvg","updateHighlighted","updateSelected","updateDraggingDelete","updateInsertionMarker","updateMovable","updateReplacementFade"],"mappings":"AAYA,aAEAA,IAAI,CAACC,OAAL,CAAa,oCAAb,EAEAD,IAAI,CAACE,WAAL,CAAiB,yCAAjB,EACAF,IAAI,CAACE,WAAL,CAAiB,eAAjB,EAUAC,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAqC,UAA4B,CAAE,CAAnE,CAMAF,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CC,OAA7C,CAMAJ,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CE,SAA7C,CAMAL,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CG,KAA7C,CAOAN,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CI,SAA7C,CAOAP,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CK,SAA7C,CAOAR,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CM,OAA7C,CAQAT,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CO,WAA7C,CAOAV,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CQ,QAA7C,CAMAX,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CS,OAA7C,CAQAZ,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CU,YAA7C,CAQAb,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CW,YAA7C,CAQAd,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CY,iBAA7C,CAOAf,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6Ca,cAA7C,CAQAhB,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6Cc,oBAA7C,CAQAjB,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6Ce,qBAA7C,CAOAlB,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CgB,aAA7C,CASAnB,OAAO,CAACC,cAAR,CAAuBC,WAAvB,CAAmCC,SAAnC,CAA6CiB,qBAA7C","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The interface for an object that owns a block's rendering SVG\n * elements.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.blockRendering.IPathObject');\n\ngoog.requireType('Blockly.blockRendering.ConstantProvider');\ngoog.requireType('Blockly.Theme');\n\n\n/**\n * An interface for a block's path object.\n * @param {!SVGElement} _root The root SVG element.\n * @param {!Blockly.blockRendering.ConstantProvider} _constants The renderer's\n *     constants.\n * @interface\n */\nBlockly.blockRendering.IPathObject = function(_root, _constants) {};\n\n/**\n * The primary path of the block.\n * @type {!SVGElement}\n */\nBlockly.blockRendering.IPathObject.prototype.svgPath;\n\n/**\n * The renderer's constant provider.\n * @type {!Blockly.blockRendering.ConstantProvider}\n */\nBlockly.blockRendering.IPathObject.prototype.constants;\n\n/**\n * The primary path of the block.\n * @type {!Blockly.Theme.BlockStyle}\n */\nBlockly.blockRendering.IPathObject.prototype.style;\n\n/**\n * Holds the cursors svg element when the cursor is attached to the block.\n * This is null if there is no cursor on the block.\n * @type {SVGElement}\n */\nBlockly.blockRendering.IPathObject.prototype.cursorSvg;\n\n/**\n * Holds the markers svg element when the marker is attached to the block.\n * This is null if there is no marker on the block.\n * @type {SVGElement}\n */\nBlockly.blockRendering.IPathObject.prototype.markerSvg;\n\n/**\n * Set the path generated by the renderer onto the respective SVG element.\n * @param {string} pathString The path.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.setPath;\n\n/**\n * Apply the stored colours to the block's path, taking into account whether\n * the paths belong to a shadow block.\n * @param {!Blockly.Block} block The source block.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.applyColour;\n\n/**\n * Update the style.\n * @param {!Blockly.Theme.BlockStyle} blockStyle The block style to use.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.setStyle;\n\n/**\n * Flip the SVG paths in RTL.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.flipRTL;\n\n/**\n * Add the cursor svg to this block's svg group.\n * @param {SVGElement} cursorSvg The svg root of the cursor to be added to the\n *     block svg group.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.setCursorSvg;\n\n/**\n * Add the marker svg to this block's svg group.\n * @param {SVGElement} markerSvg The svg root of the marker to be added to the\n *     block svg group.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.setMarkerSvg;\n\n/**\n * Set whether the block shows a highlight or not.  Block highlighting is\n * often used to visually mark blocks currently being executed.\n * @param {boolean} highlighted True if highlighted.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.updateHighlighted;\n\n/**\n * Add or remove styling showing that a block is selected.\n * @param {boolean} enable True if selection is enabled, false otherwise.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.updateSelected;\n\n/**\n * Add or remove styling showing that a block is dragged over a delete area.\n * @param {boolean} enable True if the block is being dragged over a delete\n *     area, false otherwise.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.updateDraggingDelete;\n\n/**\n * Add or remove styling showing that a block is an insertion marker.\n * @param {boolean} enable True if the block is an insertion marker, false\n *     otherwise.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.updateInsertionMarker;\n\n/**\n * Add or remove styling showing that a block is movable.\n * @param {boolean} enable True if the block is movable, false otherwise.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.updateMovable;\n\n/**\n * Add or remove styling that shows that if the dragging block is dropped, this\n * block will be replaced.  If a shadow block, it will disappear.  Otherwise it\n * will bump.\n * @param {boolean} enable True if styling should be added.\n * @package\n */\nBlockly.blockRendering.IPathObject.prototype.updateReplacementFade;\n"],"file":"i_path_object.min.js"}