{"version":3,"sources":["../../../../../src/blockly/core/renderers/common/drawer.js"],"names":["goog","provide","require","Blockly","blockRendering","Drawer","block","info","block_","info_","topLeft_","getRelativeToSurfaceXY","outlinePath_","inlinePath_","constants_","getRenderer","getConstants","prototype","draw","hideHiddenIcons_","drawOutline_","drawInternals_","pathObject","setPath","RTL","flipRTL","useDebugger","renderingDebugger","drawDebug","recordSizeOnBlock_","height","width","widthWithChildren","i","iconInfo","hiddenIcons","icon","iconGroup_","setAttribute","drawTop_","r","row","rows","length","hasJaggedEdge","drawJaggedEdge_","hasStatement","drawStatementInput_","hasExternalInput","drawValueInput_","drawRightSideRow_","drawBottom_","drawLeft_","topRow","elements","positionPreviousConnection_","utils","svgPaths","moveBy","xPos","startY","elem","Types","isLeftRoundedCorner","OUTSIDE_CORNERS","topLeft","isRightRoundedCorner","topRight","isPreviousConnection","shape","pathLeft","isHat","START_HAT","path","isSpacer","lineOnAxis","remainder","JAGGED_TEETH","input","getLastInput","positionExternalValueConnection_","pathDown","connectionHeight","x","notchOffset","innerTopLeftCorner","pathRight","INSIDE_CORNERS","pathTop","innerHeight","pathBottom","positionStatementInputConnection_","yPos","bottomRow","elems","positionNextConnection_","rightCornerYOffset","outlinePath","isNextConnection","isLeftSquareCorner","bottomLeft","bottomRight","rightHeight","baseline","outputConnection","positionOutputConnection_","tabBottom","connectionOffsetY","pathUp","j","isInlineInput","drawInlineInput_","isIcon","isField","layoutField_","fieldInfo","svgGroup","field","getSvgRoot","centerline","scale","flipRtl","computeIconLocation","isInsertionMarker","connectionTop","connectionBottom","connectionRight","connectionWidth","moveTo","positionInlineInputConnection_","connectionModel","connX","connectionOffsetX","setOffsetInBlock","statementEdge","connection","connInfo","startX"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for graphically rendering a block as SVG.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.blockRendering.Drawer');\n\ngoog.require('Blockly.blockRendering.BottomRow');\ngoog.require('Blockly.blockRendering.InputRow');\ngoog.require('Blockly.blockRendering.Measurable');\ngoog.require('Blockly.blockRendering.RenderInfo');\ngoog.require('Blockly.blockRendering.Row');\ngoog.require('Blockly.blockRendering.SpacerRow');\ngoog.require('Blockly.blockRendering.TopRow');\ngoog.require('Blockly.blockRendering.Types');\ngoog.require('Blockly.utils.svgPaths');\n\n\n/**\n * An object that draws a block based on the given rendering information.\n * @param {!Blockly.BlockSvg} block The block to render.\n * @param {!Blockly.blockRendering.RenderInfo} info An object containing all\n *   information needed to render this block.\n * @package\n * @constructor\n */\nBlockly.blockRendering.Drawer = function(block, info) {\n  this.block_ = block;\n  this.info_ = info;\n  this.topLeft_ = block.getRelativeToSurfaceXY();\n  this.outlinePath_ = '';\n  this.inlinePath_ = '';\n\n  /**\n   * The renderer's constant provider.\n   * @type {!Blockly.blockRendering.ConstantProvider}\n   * @protected\n   */\n  this.constants_ = info.getRenderer().getConstants();\n};\n\n/**\n * Draw the block to the workspace. Here \"drawing\" means setting SVG path\n * elements and moving fields, icons, and connections on the screen.\n *\n * The pieces of the paths are pushed into arrays of \"steps\", which are then\n * joined with spaces and set directly on the block.  This guarantees that\n * the steps are separated by spaces for improved readability, but isn't\n * required.\n * @package\n */\nBlockly.blockRendering.Drawer.prototype.draw = function() {\n  this.hideHiddenIcons_();\n  this.drawOutline_();\n  this.drawInternals_();\n\n  this.block_.pathObject.setPath(this.outlinePath_ + '\\n' + this.inlinePath_);\n  if (this.info_.RTL) {\n    this.block_.pathObject.flipRTL();\n  }\n  if (Blockly.blockRendering.useDebugger) {\n    this.block_.renderingDebugger.drawDebug(this.block_, this.info_);\n  }\n  this.recordSizeOnBlock_();\n};\n\n/**\n * Save sizing information back to the block\n * Most of the rendering information can be thrown away at the end of the\n * render. Anything that needs to be kept around should be set in this function.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.recordSizeOnBlock_ = function() {\n  // This is used when the block is reporting its size to anyone else.\n  // The dark path adds to the size of the block in both X and Y.\n  this.block_.height = this.info_.height;\n  this.block_.width = this.info_.widthWithChildren;\n};\n\n/**\n * Hide icons that were marked as hidden.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.hideHiddenIcons_ = function() {\n  for (var i = 0, iconInfo; (iconInfo = this.info_.hiddenIcons[i]); i++) {\n    iconInfo.icon.iconGroup_.setAttribute('display', 'none');\n  }\n};\n\n/**\n * Create the outline of the block.  This is a single continuous path.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawOutline_ = function() {\n  this.drawTop_();\n  for (var r = 1; r < this.info_.rows.length - 1; r++) {\n    var row = this.info_.rows[r];\n    if (row.hasJaggedEdge) {\n      this.drawJaggedEdge_(row);\n    } else if (row.hasStatement) {\n      this.drawStatementInput_(row);\n    } else if (row.hasExternalInput) {\n      this.drawValueInput_(row);\n    } else {\n      this.drawRightSideRow_(row);\n    }\n  }\n  this.drawBottom_();\n  this.drawLeft_();\n};\n\n\n/**\n * Add steps for the top corner of the block, taking into account\n * details such as hats and rounded corners.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawTop_ = function() {\n  var topRow = this.info_.topRow;\n  var elements = topRow.elements;\n\n  this.positionPreviousConnection_();\n  this.outlinePath_ +=\n      Blockly.utils.svgPaths.moveBy(topRow.xPos, this.info_.startY);\n  for (var i = 0, elem; (elem = elements[i]); i++) {\n    if (Blockly.blockRendering.Types.isLeftRoundedCorner(elem)) {\n      this.outlinePath_ +=\n          this.constants_.OUTSIDE_CORNERS.topLeft;\n    } else if (Blockly.blockRendering.Types.isRightRoundedCorner(elem)) {\n      this.outlinePath_ +=\n          this.constants_.OUTSIDE_CORNERS.topRight;\n    } else if (Blockly.blockRendering.Types.isPreviousConnection(elem)) {\n      this.outlinePath_ += elem.shape.pathLeft;\n    } else if (Blockly.blockRendering.Types.isHat(elem)) {\n      this.outlinePath_ += this.constants_.START_HAT.path;\n    } else if (Blockly.blockRendering.Types.isSpacer(elem)) {\n      this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('h', elem.width);\n    }\n    // No branch for a square corner, because it's a no-op.\n  }\n  this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('v', topRow.height);\n};\n\n/**\n * Add steps for the jagged edge of a row on a collapsed block.\n * @param {!Blockly.blockRendering.Row} row The row to draw the side of.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawJaggedEdge_ = function(row) {\n  var remainder =\n      row.height - this.constants_.JAGGED_TEETH.height;\n  this.outlinePath_ += this.constants_.JAGGED_TEETH.path +\n      Blockly.utils.svgPaths.lineOnAxis('v', remainder);\n};\n\n/**\n * Add steps for an external value input, rendered as a notch in the side\n * of the block.\n * @param {!Blockly.blockRendering.Row} row The row that this input\n *     belongs to.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawValueInput_ = function(row) {\n  var input = row.getLastInput();\n  this.positionExternalValueConnection_(row);\n\n  var pathDown = (typeof input.shape.pathDown == \"function\") ?\n      input.shape.pathDown(input.height) :\n      input.shape.pathDown;\n\n  this.outlinePath_ +=\n      Blockly.utils.svgPaths.lineOnAxis('H', input.xPos + input.width) +\n      pathDown +\n      Blockly.utils.svgPaths.lineOnAxis('v', row.height - input.connectionHeight);\n};\n\n\n/**\n * Add steps for a statement input.\n * @param {!Blockly.blockRendering.Row} row The row that this input\n *     belongs to.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawStatementInput_ = function(row) {\n  var input = row.getLastInput();\n  // Where to start drawing the notch, which is on the right side in LTR.\n  var x = input.xPos + input.notchOffset + input.shape.width;\n\n  var innerTopLeftCorner =\n      input.shape.pathRight +\n      Blockly.utils.svgPaths.lineOnAxis('h',\n          -(input.notchOffset - this.constants_.INSIDE_CORNERS.width)) +\n      this.constants_.INSIDE_CORNERS.pathTop;\n\n  var innerHeight =\n      row.height - (2 * this.constants_.INSIDE_CORNERS.height);\n\n  this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('H', x) +\n      innerTopLeftCorner +\n      Blockly.utils.svgPaths.lineOnAxis('v', innerHeight) +\n      this.constants_.INSIDE_CORNERS.pathBottom +\n      Blockly.utils.svgPaths.lineOnAxis('H', row.xPos + row.width);\n\n  this.positionStatementInputConnection_(row);\n};\n\n/**\n * Add steps for the right side of a row that does not have value or\n * statement input connections.\n * @param {!Blockly.blockRendering.Row} row The row to draw the\n *     side of.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawRightSideRow_ = function(row) {\n  this.outlinePath_ +=\n      Blockly.utils.svgPaths.lineOnAxis('V', row.yPos + row.height);\n};\n\n\n/**\n * Add steps for the bottom edge of a block, possibly including a notch\n * for the next connection\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawBottom_ = function() {\n  var bottomRow = this.info_.bottomRow;\n  var elems = bottomRow.elements;\n  this.positionNextConnection_();\n\n  var rightCornerYOffset = 0;\n  var outlinePath = '';\n  for (var i = elems.length - 1, elem; (elem = elems[i]); i--) {\n    if (Blockly.blockRendering.Types.isNextConnection(elem)) {\n      outlinePath += elem.shape.pathRight;\n    } else if (Blockly.blockRendering.Types.isLeftSquareCorner(elem)) {\n      outlinePath += Blockly.utils.svgPaths.lineOnAxis('H', bottomRow.xPos);\n    } else if (Blockly.blockRendering.Types.isLeftRoundedCorner(elem)) {\n      outlinePath += this.constants_.OUTSIDE_CORNERS.bottomLeft;\n    } else if (Blockly.blockRendering.Types.isRightRoundedCorner(elem)) {\n      outlinePath += this.constants_.OUTSIDE_CORNERS.bottomRight;\n      rightCornerYOffset = this.constants_.OUTSIDE_CORNERS.rightHeight;\n    } else if (Blockly.blockRendering.Types.isSpacer(elem)) {\n      outlinePath += Blockly.utils.svgPaths.lineOnAxis('h', elem.width * -1);\n    }\n  }\n\n  this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('V',\n      bottomRow.baseline - rightCornerYOffset);\n  this.outlinePath_ += outlinePath;\n};\n\n/**\n * Add steps for the left side of the block, which may include an output\n * connection\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawLeft_ = function() {\n  var outputConnection = this.info_.outputConnection;\n  this.positionOutputConnection_();\n\n  if (outputConnection) {\n    var tabBottom = outputConnection.connectionOffsetY +\n        outputConnection.height;\n    var pathUp = (typeof outputConnection.shape.pathUp == \"function\") ?\n        outputConnection.shape.pathUp(outputConnection.height) :\n        outputConnection.shape.pathUp;\n\n    // Draw a line up to the bottom of the tab.\n    this.outlinePath_ +=\n        Blockly.utils.svgPaths.lineOnAxis('V', tabBottom) +\n        pathUp;\n  }\n  // Close off the path.  This draws a vertical line up to the start of the\n  // block's path, which may be either a rounded or a sharp corner.\n  this.outlinePath_ += 'z';\n};\n\n/**\n * Draw the internals of the block: inline inputs, fields, and icons.  These do\n * not depend on the outer path for placement.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawInternals_ = function() {\n  for (var i = 0, row; (row = this.info_.rows[i]); i++) {\n    for (var j = 0, elem; (elem = row.elements[j]); j++) {\n      if (Blockly.blockRendering.Types.isInlineInput(elem)) {\n        this.drawInlineInput_(\n            /** @type {!Blockly.blockRendering.InlineInput} */ (elem));\n      } else if (Blockly.blockRendering.Types.isIcon(elem) ||\n          Blockly.blockRendering.Types.isField(elem)) {\n        this.layoutField_(\n            /** @type {!Blockly.blockRendering.Field|!Blockly.blockRendering.Icon} */\n            (elem));\n      }\n    }\n  }\n};\n\n/**\n * Push a field or icon's new position to its SVG root.\n * @param {!Blockly.blockRendering.Icon|!Blockly.blockRendering.Field} fieldInfo\n *     The rendering information for the field or icon.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.layoutField_ = function(fieldInfo) {\n  if (Blockly.blockRendering.Types.isField(fieldInfo)) {\n    var svgGroup = fieldInfo.field.getSvgRoot();\n  } else if (Blockly.blockRendering.Types.isIcon(fieldInfo)) {\n    var svgGroup = fieldInfo.icon.iconGroup_;\n  }\n\n  var yPos = fieldInfo.centerline - fieldInfo.height / 2;\n  var xPos = fieldInfo.xPos;\n  var scale = '';\n  if (this.info_.RTL) {\n    xPos = -(xPos + fieldInfo.width);\n    if (fieldInfo.flipRtl) {\n      xPos += fieldInfo.width;\n      scale = 'scale(-1 1)';\n    }\n  }\n  if (Blockly.blockRendering.Types.isIcon(fieldInfo)) {\n    svgGroup.setAttribute('display', 'block');\n    svgGroup.setAttribute('transform', 'translate(' + xPos + ',' + yPos + ')');\n    fieldInfo.icon.computeIconLocation();\n  } else {\n    svgGroup.setAttribute(\n        'transform', 'translate(' + xPos + ',' + yPos + ')' + scale);\n  }\n\n  if (this.info_.isInsertionMarker) {\n    // Fields and icons are invisible on insertion marker.  They still have to\n    // be rendered so that the block can be sized correctly.\n    svgGroup.setAttribute('display', 'none');\n  }\n};\n\n/**\n * Add steps for an inline input.\n * @param {!Blockly.blockRendering.InlineInput} input The information about the\n * input to render.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.drawInlineInput_ = function(input) {\n  var width = input.width;\n  var height = input.height;\n  var yPos = input.centerline - height / 2;\n\n  var connectionTop = input.connectionOffsetY;\n  var connectionBottom = input.connectionHeight + connectionTop;\n  var connectionRight = input.xPos + input.connectionWidth;\n\n  this.inlinePath_ += Blockly.utils.svgPaths.moveTo(connectionRight, yPos) +\n      Blockly.utils.svgPaths.lineOnAxis('v', connectionTop) +\n      input.shape.pathDown +\n      Blockly.utils.svgPaths.lineOnAxis('v', height - connectionBottom) +\n      Blockly.utils.svgPaths.lineOnAxis('h', width - input.connectionWidth) +\n      Blockly.utils.svgPaths.lineOnAxis('v', -height) +\n      'z';\n\n  this.positionInlineInputConnection_(input);\n};\n\n/**\n * Position the connection on an inline value input, taking into account\n * RTL and the small gap between the parent block and child block which lets the\n * parent block's dark path show through.\n * @param {Blockly.blockRendering.InlineInput} input The information about\n * the input that the connection is on.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.positionInlineInputConnection_ = function(input) {\n  var yPos = input.centerline - input.height / 2;\n  // Move the connection.\n  if (input.connectionModel) {\n    // xPos already contains info about startX\n    var connX = input.xPos + input.connectionWidth + input.connectionOffsetX;\n    if (this.info_.RTL) {\n      connX *= -1;\n    }\n    input.connectionModel.setOffsetInBlock(connX,\n        yPos + input.connectionOffsetY);\n  }\n};\n\n/**\n * Position the connection on a statement input, taking into account\n * RTL and the small gap between the parent block and child block which lets the\n * parent block's dark path show through.\n * @param {!Blockly.blockRendering.Row} row The row that the connection is on.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.positionStatementInputConnection_ = function(row) {\n  var input = row.getLastInput();\n  if (input.connectionModel) {\n    var connX = row.xPos + row.statementEdge + input.notchOffset;\n    if (this.info_.RTL) {\n      connX *= -1;\n    }\n    input.connectionModel.setOffsetInBlock(connX, row.yPos);\n  }\n};\n\n/**\n * Position the connection on an external value input, taking into account\n * RTL and the small gap between the parent block and child block which lets the\n * parent block's dark path show through.\n * @param {!Blockly.blockRendering.Row} row The row that the connection is on.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.positionExternalValueConnection_ = function(row) {\n  var input = row.getLastInput();\n  if (input.connectionModel) {\n    var connX = row.xPos + row.width;\n    if (this.info_.RTL) {\n      connX *= -1;\n    }\n    input.connectionModel.setOffsetInBlock(connX, row.yPos);\n  }\n};\n\n/**\n * Position the previous connection on a block.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.positionPreviousConnection_ = function() {\n  var topRow = this.info_.topRow;\n  if (topRow.connection) {\n    var x = topRow.xPos + topRow.notchOffset;\n    var connX = (this.info_.RTL ? -x : x);\n    topRow.connection.connectionModel.setOffsetInBlock(connX, 0);\n  }\n};\n\n/**\n * Position the next connection on a block.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.positionNextConnection_ = function() {\n  var bottomRow = this.info_.bottomRow;\n\n  if (bottomRow.connection) {\n    var connInfo = bottomRow.connection;\n    var x = connInfo.xPos; // Already contains info about startX\n    var connX = (this.info_.RTL ? -x : x);\n    connInfo.connectionModel.setOffsetInBlock(connX, bottomRow.baseline);\n  }\n};\n\n/**\n * Position the output connection on a block.\n * @protected\n */\nBlockly.blockRendering.Drawer.prototype.positionOutputConnection_ = function() {\n  if (this.info_.outputConnection) {\n    var x = this.info_.startX + this.info_.outputConnection.connectionOffsetX;\n    var connX = this.info_.RTL ? -x : x;\n    this.block_.outputConnection.setOffsetInBlock(connX,\n        this.info_.outputConnection.connectionOffsetY);\n  }\n};\n"],"file":"drawer.min.js"}