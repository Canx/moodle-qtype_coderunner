{"version":3,"sources":["../../../../../src/blockly/core/renderers/common/marker_svg.js"],"names":["goog","provide","require","Blockly","blockRendering","MarkerSvg","workspace","constants","marker","workspace_","marker_","parent_","constants_","currentMarkerSvg","defaultColour","isCursor","CURSOR_COLOUR","MARKER_COLOUR","colour_","colour","CURSOR_CLASS","MARKER_CLASS","HEIGHT_MULTIPLIER","prototype","getSvgRoot","svgGroup_","getMarker","type","createDom","className","utils","dom","createSvgElement","createDomInternal_","setParent_","newParent","setMarkerSvg","setCursorSvg","draw","oldNode","curNode","hide","getRenderer","getConstants","applyColour_","showAtLocation_","fireMarkerEvent_","animate","childNodes","beginElement","curNodeAsConnection","getLocation","getType","ASTNode","types","BLOCK","showWithBlock_","OUTPUT","showWithOutput_","INPUT_VALUE","showWithInput_","NEXT_STATEMENT","showWithNext_","PREVIOUS","showWithPrevious_","FIELD","showWithField_","WORKSPACE","showWithCoordinates_","STACK","showWithStack_","showWithBlockPrevOutput_","block","getSourceBlock","width","height","markerHeight","markerOffset","CURSOR_BLOCK_PADDING","previousConnection","connectionShape","shapeFor","positionPrevious_","outputConnection","positionOutput_","positionBlock_","showCurrent_","wsCoordinate","getWsCoordinate","x","y","RTL","CURSOR_WS_WIDTH","positionLine_","field","getSize","positionRect_","connection","sourceBlock","positionInput_","targetBlock","getOffsetInBlock","getHeightWidth","heightWidth","CURSOR_STACK_PADDING","xPadding","yPadding","style","display","markerPath","svgPaths","moveBy","lineOnAxis","markerBlock_","setAttribute","flipRtl_","path","moveTo","pathDown","markerInput_","markerSvgLine_","TAB_OFFSET_FROM_TOP","NOTCH_OFFSET_LEFT","pathLeft","markerSvgRect_","markerSvg","curBlock","eventType","event","Events","Ui","workspaceId","id","fire","getBlinkProperties_","markerSvg_","WS_CURSOR_HEIGHT","CURSOR_STROKE_WIDTH","blinkProperties","values","firstChild","dispose","removeNode"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for graphically rendering a marker as SVG.\n * @author samelh@microsoft.com (Sam El-Husseini)\n */\n'use strict';\n\n\ngoog.provide('Blockly.blockRendering.MarkerSvg');\n\ngoog.require('Blockly.ASTNode');\n\n\n/**\n * Class for a marker.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace the marker belongs to.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The constants for\n *     the renderer.\n * @param {!Blockly.Marker} marker The marker to draw.\n * @constructor\n */\nBlockly.blockRendering.MarkerSvg = function(workspace, constants, marker) {\n  /**\n   * The workspace the marker belongs to.\n   * @type {!Blockly.WorkspaceSvg}\n   * @private\n   */\n  this.workspace_ = workspace;\n\n  /**\n   * The marker to draw.\n   * @type {!Blockly.Marker}\n   * @private\n   */\n  this.marker_ = marker;\n\n  /**\n   * The workspace, field, or block that the marker SVG element should be\n   * attached to.\n   * @type {Blockly.IASTNodeLocationSvg}\n   * @private\n   */\n  this.parent_ = null;\n\n  /**\n   * The constants necessary to draw the marker.\n   * @type {Blockly.blockRendering.ConstantProvider}\n   * @protected\n   */\n  this.constants_ = constants;\n\n  /**\n   * The current SVG element for the marker.\n   * @type {Element}\n   */\n  this.currentMarkerSvg = null;\n\n  var defaultColour = this.isCursor() ? this.constants_.CURSOR_COLOUR :\n      this.constants_.MARKER_COLOUR;\n\n  /**\n   * The colour of the marker.\n   * @type {string}\n   */\n  this.colour_ = marker.colour || defaultColour;\n};\n\n/**\n * The name of the CSS class for a cursor.\n * @const {string}\n */\nBlockly.blockRendering.MarkerSvg.CURSOR_CLASS = 'blocklyCursor';\n\n/**\n * The name of the CSS class for a marker.\n * @const {string}\n */\nBlockly.blockRendering.MarkerSvg.MARKER_CLASS = 'blocklyMarker';\n\n/**\n * What we multiply the height by to get the height of the marker.\n * Only used for the block and block connections.\n * @const {number}\n */\nBlockly.blockRendering.MarkerSvg.HEIGHT_MULTIPLIER = 3 / 4;\n\n/**\n * Return the root node of the SVG or null if none exists.\n * @return {SVGElement} The root SVG node.\n */\nBlockly.blockRendering.MarkerSvg.prototype.getSvgRoot = function() {\n  return this.svgGroup_;\n};\n\n/**\n * Get the marker.\n * @return {!Blockly.Marker} The marker to draw for.\n */\nBlockly.blockRendering.MarkerSvg.prototype.getMarker = function() {\n  return this.marker_;\n};\n\n/**\n * True if the marker should be drawn as a cursor, false otherwise.\n * A cursor is drawn as a flashing line. A marker is drawn as a solid line.\n * @return {boolean} True if the marker is a cursor, false otherwise.\n */\nBlockly.blockRendering.MarkerSvg.prototype.isCursor = function() {\n  return this.marker_.type == 'cursor';\n};\n\n/**\n * Create the DOM element for the marker.\n * @return {!SVGElement} The marker controls SVG group.\n * @package\n */\nBlockly.blockRendering.MarkerSvg.prototype.createDom = function() {\n  var className = this.isCursor() ?\n      Blockly.blockRendering.MarkerSvg.CURSOR_CLASS :\n      Blockly.blockRendering.MarkerSvg.MARKER_CLASS;\n\n  this.svgGroup_ =\n      Blockly.utils.dom.createSvgElement('g', {\n        'class': className\n      }, null);\n\n  this.createDomInternal_();\n  return this.svgGroup_;\n};\n\n/**\n * Attaches the SVG root of the marker to the SVG group of the parent.\n * @param {!Blockly.IASTNodeLocationSvg} newParent The workspace, field, or\n *     block that the marker SVG element should be attached to.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.setParent_ = function(newParent) {\n  if (!this.isCursor()) {\n    if (this.parent_) {\n      this.parent_.setMarkerSvg(null);\n    }\n    newParent.setMarkerSvg(this.getSvgRoot());\n  } else {\n    if (this.parent_) {\n      this.parent_.setCursorSvg(null);\n    }\n    newParent.setCursorSvg(this.getSvgRoot());\n  }\n  this.parent_ = newParent;\n};\n\n/**\n * Update the marker.\n * @param {Blockly.ASTNode} oldNode The previous node the marker was on or null.\n * @param {Blockly.ASTNode} curNode The node that we want to draw the marker for.\n */\nBlockly.blockRendering.MarkerSvg.prototype.draw = function(oldNode, curNode) {\n  if (!curNode) {\n    this.hide();\n    return;\n  }\n\n  this.constants_ = this.workspace_.getRenderer().getConstants();\n\n  var defaultColour = this.isCursor() ? this.constants_.CURSOR_COLOUR :\n    this.constants_.MARKER_COLOUR;\n  this.colour_ = this.marker_.colour || defaultColour;\n  this.applyColour_(curNode);\n\n  this.showAtLocation_(curNode);\n\n  this.fireMarkerEvent_(oldNode, curNode);\n\n  // Ensures the marker will be visible immediately after the move.\n  var animate = this.currentMarkerSvg.childNodes[0];\n  if (animate !== undefined) {\n    animate.beginElement && animate.beginElement();\n  }\n};\n\n\n/**\n * Update the marker's visible state based on the type of curNode..\n * @param {!Blockly.ASTNode} curNode The node that we want to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showAtLocation_ = function(curNode) {\n  var curNodeAsConnection =\n    /** @type {!Blockly.Connection} */ (curNode.getLocation());\n  if (curNode.getType() == Blockly.ASTNode.types.BLOCK) {\n    this.showWithBlock_(curNode);\n  } else if (curNode.getType() == Blockly.ASTNode.types.OUTPUT) {\n    this.showWithOutput_(curNode);\n  } else if (curNodeAsConnection.type == Blockly.INPUT_VALUE) {\n    this.showWithInput_(curNode);\n  } else if (curNodeAsConnection.type == Blockly.NEXT_STATEMENT) {\n    this.showWithNext_(curNode);\n  } else if (curNode.getType() == Blockly.ASTNode.types.PREVIOUS) {\n    this.showWithPrevious_(curNode);\n  } else if (curNode.getType() == Blockly.ASTNode.types.FIELD) {\n    this.showWithField_(curNode);\n  } else if (curNode.getType() == Blockly.ASTNode.types.WORKSPACE) {\n    this.showWithCoordinates_(curNode);\n  } else if (curNode.getType() == Blockly.ASTNode.types.STACK) {\n    this.showWithStack_(curNode);\n  }\n};\n\n/**************************\n * Display\n **************************/\n\n/**\n * Show the marker as a combination of the previous connection and block,\n * the output connection and block, or just the block.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @private\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithBlockPrevOutput_ = function(\n    curNode) {\n  var block = /** @type {!Blockly.BlockSvg} */ (curNode.getSourceBlock());\n  var width = block.width;\n  var height = block.height;\n  var markerHeight = height * Blockly.blockRendering.MarkerSvg.HEIGHT_MULTIPLIER;\n  var markerOffset = this.constants_.CURSOR_BLOCK_PADDING;\n\n  if (block.previousConnection) {\n    var connectionShape = this.constants_.shapeFor(block.previousConnection);\n    this.positionPrevious_(width, markerOffset, markerHeight, connectionShape);\n  } else if (block.outputConnection) {\n    var connectionShape = this.constants_.shapeFor(block.outputConnection);\n    this.positionOutput_(width, height, connectionShape);\n  } else {\n    this.positionBlock_(width, markerOffset, markerHeight);\n  }\n  this.setParent_(block);\n  this.showCurrent_();\n};\n\n/**\n * Position and display the marker for a block.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithBlock_ = function(curNode) {\n  this.showWithBlockPrevOutput_(curNode);\n};\n\n/**\n * Position and display the marker for a previous connection.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithPrevious_ = function(\n    curNode) {\n  this.showWithBlockPrevOutput_(curNode);\n};\n\n/**\n * Position and display the marker for an output connection.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithOutput_ = function(curNode) {\n  this.showWithBlockPrevOutput_(curNode);\n};\n\n/**\n * Position and display the marker for a workspace coordinate.\n * This is a horizontal line.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithCoordinates_ = function(\n    curNode) {\n  var wsCoordinate = curNode.getWsCoordinate();\n  var x = wsCoordinate.x;\n  var y = wsCoordinate.y;\n\n  if (this.workspace_.RTL) {\n    x -= this.constants_.CURSOR_WS_WIDTH;\n  }\n\n  this.positionLine_(x, y, this.constants_.CURSOR_WS_WIDTH);\n  this.setParent_(this.workspace_);\n  this.showCurrent_();\n};\n\n/**\n * Position and display the marker for a field.\n * This is a box around the field.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithField_ = function(curNode) {\n  var field = /** @type {Blockly.Field} */ (curNode.getLocation());\n  var width = field.getSize().width;\n  var height = field.getSize().height;\n\n  this.positionRect_(0, 0, width, height);\n  this.setParent_(field);\n  this.showCurrent_();\n};\n\n/**\n * Position and display the marker for an input.\n * This is a puzzle piece.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithInput_ = function(curNode) {\n  var connection = /** @type {Blockly.RenderedConnection} */\n      (curNode.getLocation());\n  var sourceBlock = /** @type {!Blockly.BlockSvg} */ (connection.getSourceBlock());\n\n  this.positionInput_(connection);\n  this.setParent_(sourceBlock);\n  this.showCurrent_();\n};\n\n\n/**\n * Position and display the marker for a next connection.\n * This is a horizontal line.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithNext_ = function(curNode) {\n  var connection =\n    /** @type {!Blockly.RenderedConnection} */ (curNode.getLocation());\n  var targetBlock =\n    /** @type {Blockly.BlockSvg} */ (connection.getSourceBlock());\n  var x = 0;\n  var y = connection.getOffsetInBlock().y;\n  var width = targetBlock.getHeightWidth().width;\n  if (this.workspace_.RTL) {\n    x = -width;\n  }\n  this.positionLine_(x, y, width);\n  this.setParent_(targetBlock);\n  this.showCurrent_();\n};\n\n/**\n * Position and display the marker for a stack.\n * This is a box with extra padding around the entire stack of blocks.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showWithStack_ = function(curNode) {\n  var block = /** @type {Blockly.BlockSvg} */ (curNode.getLocation());\n\n  // Gets the height and width of entire stack.\n  var heightWidth = block.getHeightWidth();\n\n  // Add padding so that being on a stack looks different than being on a block.\n  var width = heightWidth.width + this.constants_.CURSOR_STACK_PADDING;\n  var height = heightWidth.height + this.constants_.CURSOR_STACK_PADDING;\n\n  // Shift the rectangle slightly to upper left so padding is equal on all sides.\n  var xPadding = -this.constants_.CURSOR_STACK_PADDING / 2;\n  var yPadding = -this.constants_.CURSOR_STACK_PADDING / 2;\n\n  var x = xPadding;\n  var y = yPadding;\n\n  if (this.workspace_.RTL) {\n    x = -(width + xPadding);\n  }\n  this.positionRect_(x, y, width, height);\n  this.setParent_(block);\n  this.showCurrent_();\n};\n\n/**\n * Show the current marker.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.showCurrent_ = function() {\n  this.hide();\n  this.currentMarkerSvg.style.display = '';\n};\n\n/**************************\n * Position\n **************************/\n\n/**\n * Position the marker for a block.\n * Displays an outline of the top half of a rectangle around a block.\n * @param {number} width The width of the block.\n * @param {number} markerOffset The extra padding for around the block.\n * @param {number} markerHeight The height of the marker.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.positionBlock_ = function(\n    width, markerOffset, markerHeight) {\n  var markerPath = Blockly.utils.svgPaths.moveBy(-markerOffset, markerHeight) +\n      Blockly.utils.svgPaths.lineOnAxis('V', -markerOffset) +\n      Blockly.utils.svgPaths.lineOnAxis('H', width + markerOffset * 2) +\n      Blockly.utils.svgPaths.lineOnAxis('V', markerHeight);\n  this.markerBlock_.setAttribute('d', markerPath);\n  if (this.workspace_.RTL) {\n    this.flipRtl_(this.markerBlock_);\n  }\n  this.currentMarkerSvg = this.markerBlock_;\n};\n\n/**\n * Position the marker for an input connection.\n * Displays a filled in puzzle piece.\n * @param {!Blockly.RenderedConnection} connection The connection to position\n *     marker around.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.positionInput_ = function(\n    connection) {\n  var x = connection.getOffsetInBlock().x;\n  var y = connection.getOffsetInBlock().y;\n\n  var path = Blockly.utils.svgPaths.moveTo(0, 0) +\n      this.constants_.shapeFor(connection).pathDown;\n\n  this.markerInput_.setAttribute('d', path);\n  this.markerInput_.setAttribute('transform',\n      'translate(' + x + ',' + y + ')' +\n      (this.workspace_.RTL ? ' scale(-1 1)' : ''));\n  this.currentMarkerSvg = this.markerInput_;\n};\n\n/**\n * Move and show the marker at the specified coordinate in workspace units.\n * Displays a horizontal line.\n * @param {number} x The new x, in workspace units.\n * @param {number} y The new y, in workspace units.\n * @param {number} width The new width, in workspace units.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.positionLine_ = function(\n    x, y, width) {\n  this.markerSvgLine_.setAttribute('x', x);\n  this.markerSvgLine_.setAttribute('y', y);\n  this.markerSvgLine_.setAttribute('width', width);\n  this.currentMarkerSvg = this.markerSvgLine_;\n};\n\n/**\n * Position the marker for an output connection.\n * Displays a puzzle outline and the top and bottom path.\n * @param {number} width The width of the block.\n * @param {number} height The height of the block.\n * @param {!Object} connectionShape The shape object for the connection.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.positionOutput_ = function(\n    width, height, connectionShape) {\n  var markerPath = Blockly.utils.svgPaths.moveBy(width, 0) +\n      Blockly.utils.svgPaths.lineOnAxis(\n          'h', -(width - connectionShape.width)) +\n      Blockly.utils.svgPaths.lineOnAxis(\n          'v', this.constants_.TAB_OFFSET_FROM_TOP) +\n      connectionShape.pathDown +\n      Blockly.utils.svgPaths.lineOnAxis('V', height) +\n      Blockly.utils.svgPaths.lineOnAxis('H', width);\n  this.markerBlock_.setAttribute('d', markerPath);\n  if (this.workspace_.RTL) {\n    this.flipRtl_(this.markerBlock_);\n  }\n  this.currentMarkerSvg = this.markerBlock_;\n};\n\n/**\n * Position the marker for a previous connection.\n * Displays a half rectangle with a notch in the top to represent the previous\n * connection.\n * @param {number} width The width of the block.\n * @param {number} markerOffset The offset of the marker from around the block.\n * @param {number} markerHeight The height of the marker.\n * @param {!Object} connectionShape The shape object for the connection.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.positionPrevious_ = function(\n    width, markerOffset, markerHeight, connectionShape) {\n  var markerPath = Blockly.utils.svgPaths.moveBy(-markerOffset, markerHeight) +\n      Blockly.utils.svgPaths.lineOnAxis('V', -markerOffset) +\n      Blockly.utils.svgPaths.lineOnAxis(\n          'H', this.constants_.NOTCH_OFFSET_LEFT) +\n      connectionShape.pathLeft +\n      Blockly.utils.svgPaths.lineOnAxis(\n          'H', width + markerOffset * 2) +\n      Blockly.utils.svgPaths.lineOnAxis('V', markerHeight);\n  this.markerBlock_.setAttribute('d', markerPath);\n  if (this.workspace_.RTL) {\n    this.flipRtl_(this.markerBlock_);\n  }\n  this.currentMarkerSvg = this.markerBlock_;\n};\n\n/**\n * Move and show the marker at the specified coordinate in workspace units.\n * Displays a filled in rectangle.\n * @param {number} x The new x, in workspace units.\n * @param {number} y The new y, in workspace units.\n * @param {number} width The new width, in workspace units.\n * @param {number} height The new height, in workspace units.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.positionRect_ = function(\n    x, y, width, height) {\n  this.markerSvgRect_.setAttribute('x', x);\n  this.markerSvgRect_.setAttribute('y', y);\n  this.markerSvgRect_.setAttribute('width', width);\n  this.markerSvgRect_.setAttribute('height', height);\n  this.currentMarkerSvg = this.markerSvgRect_;\n};\n\n/**\n * Flip the SVG paths in RTL.\n * @param {!SVGElement} markerSvg The marker that we want to flip.\n * @private\n */\nBlockly.blockRendering.MarkerSvg.prototype.flipRtl_ = function(markerSvg) {\n  markerSvg.setAttribute('transform', 'scale(-1 1)');\n};\n\n/**\n * Hide the marker.\n */\nBlockly.blockRendering.MarkerSvg.prototype.hide = function() {\n  this.markerSvgLine_.style.display = 'none';\n  this.markerSvgRect_.style.display = 'none';\n  this.markerInput_.style.display = 'none';\n  this.markerBlock_.style.display = 'none';\n};\n\n\n/**\n * Fire event for the marker or marker.\n * @param {Blockly.ASTNode} oldNode The old node the marker used to be on.\n * @param {!Blockly.ASTNode} curNode The new node the marker is currently on.\n * @private\n */\nBlockly.blockRendering.MarkerSvg.prototype.fireMarkerEvent_ = function(\n    oldNode, curNode) {\n  var curBlock = curNode.getSourceBlock();\n  var eventType = this.isCursor() ? 'cursorMove' : 'markerMove';\n  var event = new Blockly.Events.Ui(curBlock, eventType, oldNode, curNode);\n  if (curNode.getType() == Blockly.ASTNode.types.WORKSPACE) {\n    event.workspaceId =\n      (/** @type {!Blockly.Workspace} */ (curNode.getLocation())).id;\n  }\n  Blockly.Events.fire(event);\n};\n\n/**\n * Get the properties to make a marker blink.\n * @return {!Object} The object holding attributes to make the marker blink.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.getBlinkProperties_ = function() {\n  return {\n    'attributeType': 'XML',\n    'attributeName': 'fill',\n    'dur': '1s',\n    'values': this.colour_ + ';transparent;transparent;',\n    'repeatCount': 'indefinite'\n  };\n};\n\n\n/**\n * Create the marker SVG.\n * @return {Element} The SVG node created.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.createDomInternal_ = function() {\n  /* This markup will be generated and added to the .svgGroup_:\n  <g>\n    <rect width=\"100\" height=\"5\">\n      <animate attributeType=\"XML\" attributeName=\"fill\" dur=\"1s\"\n        values=\"transparent;transparent;#fff;transparent\" repeatCount=\"indefinite\" />\n    </rect>\n  </g>\n  */\n\n  this.markerSvg_ = Blockly.utils.dom.createSvgElement('g',\n      {\n        'width': this.constants_.CURSOR_WS_WIDTH,\n        'height': this.constants_.WS_CURSOR_HEIGHT\n      }, this.svgGroup_);\n\n  // A horizontal line used to represent a workspace coordinate or next\n  // connection.\n  this.markerSvgLine_ = Blockly.utils.dom.createSvgElement('rect',\n      {\n        'width': this.constants_.CURSOR_WS_WIDTH,\n        'height': this.constants_.WS_CURSOR_HEIGHT,\n        'style': 'display: none'\n      },\n      this.markerSvg_);\n\n  // A filled in rectangle used to represent a stack.\n  this.markerSvgRect_ = Blockly.utils.dom.createSvgElement('rect',\n      {\n        'class': 'blocklyVerticalMarker',\n        'rx': 10, 'ry': 10,\n        'style': 'display: none'\n      },\n      this.markerSvg_);\n\n  // A filled in puzzle piece used to represent an input value.\n  this.markerInput_ = Blockly.utils.dom.createSvgElement('path',\n      {\n        'transform': '',\n        'style': 'display: none'\n      },\n      this.markerSvg_);\n\n  // A path used to represent a previous connection and a block, an output\n  // connection and a block, or a block.\n  this.markerBlock_ = Blockly.utils.dom.createSvgElement('path',\n      {\n        'transform': '',\n        'style': 'display: none',\n        'fill': 'none',\n        'stroke-width': this.constants_.CURSOR_STROKE_WIDTH\n      },\n      this.markerSvg_);\n\n  // Markers and stack markers don't blink.\n  if (this.isCursor()) {\n    var blinkProperties = this.getBlinkProperties_();\n    Blockly.utils.dom.createSvgElement('animate', blinkProperties,\n        this.markerSvgLine_);\n    Blockly.utils.dom.createSvgElement('animate', blinkProperties,\n        this.markerInput_);\n    blinkProperties['attributeName'] = 'stroke';\n    Blockly.utils.dom.createSvgElement('animate', blinkProperties,\n        this.markerBlock_);\n  }\n\n  return this.markerSvg_;\n};\n\n/**\n * Apply the marker's colour.\n * @param {!Blockly.ASTNode} _curNode The node that we want to draw the marker\n *    for.\n * @protected\n */\nBlockly.blockRendering.MarkerSvg.prototype.applyColour_ = function(_curNode) {\n  this.markerSvgLine_.setAttribute('fill', this.colour_);\n  this.markerSvgRect_.setAttribute('stroke', this.colour_);\n  this.markerInput_.setAttribute('fill', this.colour_);\n  this.markerBlock_.setAttribute('stroke', this.colour_);\n\n  if (this.isCursor()) {\n    var values = this.colour_ + ';transparent;transparent;';\n    this.markerSvgLine_.firstChild.setAttribute('values', values);\n    this.markerInput_.firstChild.setAttribute('values', values);\n    this.markerBlock_.firstChild.setAttribute('values', values);\n  }\n};\n\n/**\n * Dispose of this marker.\n */\nBlockly.blockRendering.MarkerSvg.prototype.dispose = function() {\n  if (this.svgGroup_) {\n    Blockly.utils.dom.removeNode(this.svgGroup_);\n  }\n};\n"],"file":"marker_svg.min.js"}