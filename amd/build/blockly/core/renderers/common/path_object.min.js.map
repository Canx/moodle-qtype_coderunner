{"version":3,"sources":["../../../../../src/blockly/core/renderers/common/path_object.js"],"names":["goog","provide","require","Blockly","blockRendering","PathObject","root","style","constants","svgRoot","svgPath","utils","dom","createSvgElement","cursorSvg","markerSvg","prototype","setPath","pathString","setAttribute","flipRTL","setCursorSvg","appendChild","setMarkerSvg","insertBefore","applyColour","block","colourTertiary","colourPrimary","updateShadow_","isShadow","updateDisabled_","isEnabled","getInheritedDisabled","setStyle","blockStyle","setClass_","className","add","addClass","removeClass","updateHighlighted","enable","embossFilterId","shadow","colourSecondary","disabled","disabledPatternId","updateSelected","updateDraggingDelete","updateInsertionMarker","updateMovable","updateReplacementFade","updateShapeForInputHighlight"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An object that owns a block's rendering SVG elements.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.blockRendering.PathObject');\n\ngoog.require('Blockly.blockRendering.ConstantProvider');\ngoog.require('Blockly.blockRendering.IPathObject');\ngoog.require('Blockly.Theme');\ngoog.require('Blockly.utils.dom');\n\n\n/**\n * An object that handles creating and setting each of the SVG elements\n * used by the renderer.\n * @param {!SVGElement} root The root SVG element.\n * @param {!Blockly.Theme.BlockStyle} style The style object to use for\n *     colouring.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The renderer's\n *     constants.\n * @constructor\n * @implements {Blockly.blockRendering.IPathObject}\n * @package\n */\nBlockly.blockRendering.PathObject = function(root, style, constants) {\n  /**\n   * The renderer's constant provider.\n   * @type {!Blockly.blockRendering.ConstantProvider}\n   * @package\n   */\n  this.constants = constants;\n\n  this.svgRoot = root;\n\n  /**\n   * The primary path of the block.\n   * @type {!SVGElement}\n   * @package\n   */\n  this.svgPath = Blockly.utils.dom.createSvgElement('path',\n      {'class': 'blocklyPath'}, this.svgRoot);\n\n  /**\n   * The style object to use when colouring block paths.\n   * @type {!Blockly.Theme.BlockStyle}\n   * @package\n   */\n  this.style = style;\n\n  /**\n   * Holds the cursors svg element when the cursor is attached to the block.\n   * This is null if there is no cursor on the block.\n   * @type {SVGElement}\n   * @package\n   */\n  this.cursorSvg = null;\n\n  /**\n   * Holds the markers svg element when the marker is attached to the block.\n   * This is null if there is no marker on the block.\n   * @type {SVGElement}\n   * @package\n   */\n  this.markerSvg = null;\n};\n\n/**\n * Set the path generated by the renderer onto the respective SVG element.\n * @param {string} pathString The path.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.setPath = function(pathString) {\n  this.svgPath.setAttribute('d', pathString);\n};\n\n/**\n * Flip the SVG paths in RTL.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.flipRTL = function() {\n  // Mirror the block's path.\n  this.svgPath.setAttribute('transform', 'scale(-1 1)');\n};\n\n/**\n * Add the cursor svg to this block's svg group.\n * @param {SVGElement} cursorSvg The svg root of the cursor to be added to the\n *     block svg group.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.setCursorSvg = function(cursorSvg) {\n  if (!cursorSvg) {\n    this.cursorSvg = null;\n    return;\n  }\n\n  this.svgRoot.appendChild(cursorSvg);\n  this.cursorSvg = cursorSvg;\n};\n\n/**\n * Add the marker svg to this block's svg group.\n * @param {SVGElement} markerSvg The svg root of the marker to be added to the\n *     block svg group.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.setMarkerSvg = function(markerSvg) {\n  if (!markerSvg) {\n    this.markerSvg = null;\n    return;\n  }\n\n  if (this.cursorSvg) {\n    this.svgRoot.insertBefore(markerSvg, this.cursorSvg);\n  } else {\n    this.svgRoot.appendChild(markerSvg);\n  }\n  this.markerSvg = markerSvg;\n};\n\n/**\n * Apply the stored colours to the block's path, taking into account whether\n * the paths belong to a shadow block.\n * @param {!Blockly.Block} block The source block.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.applyColour = function(block) {\n  this.svgPath.setAttribute('stroke', this.style.colourTertiary);\n  this.svgPath.setAttribute('fill', this.style.colourPrimary);\n\n  this.updateShadow_(block.isShadow());\n  this.updateDisabled_(!block.isEnabled() || block.getInheritedDisabled());\n};\n\n/**\n * Set the style.\n * @param {!Blockly.Theme.BlockStyle} blockStyle The block style to use.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.setStyle = function(blockStyle) {\n  this.style = blockStyle;\n};\n\n/**\n * Add or remove the given CSS class on the path object's root SVG element.\n * @param {string} className The name of the class to add or remove\n * @param {boolean} add True if the class should be added.  False if it should\n *     be removed.\n * @protected\n */\nBlockly.blockRendering.PathObject.prototype.setClass_ = function(\n    className, add) {\n  if (add) {\n    Blockly.utils.dom.addClass(/** @type {!Element} */ (this.svgRoot),\n        className);\n  } else {\n    Blockly.utils.dom.removeClass(/** @type {!Element} */ (this.svgRoot),\n        className);\n  }\n};\n\n/**\n * Set whether the block shows a highlight or not.  Block highlighting is\n * often used to visually mark blocks currently being executed.\n * @param {boolean} enable True if highlighted.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateHighlighted = function(\n    enable) {\n  if (enable) {\n    this.svgPath.setAttribute('filter',\n        'url(#' + this.constants.embossFilterId + ')');\n  } else {\n    this.svgPath.setAttribute('filter', 'none');\n  }\n};\n\n/**\n * Updates the look of the block to reflect a shadow state.\n * @param {boolean} shadow True if the block is a shadow block.\n * @protected\n */\nBlockly.blockRendering.PathObject.prototype.updateShadow_ = function(shadow) {\n  if (shadow) {\n    this.svgPath.setAttribute('stroke', 'none');\n    this.svgPath.setAttribute('fill', this.style.colourSecondary);\n  }\n};\n\n/**\n * Updates the look of the block to reflect a disabled state.\n * @param {boolean} disabled True if disabled.\n * @protected\n */\nBlockly.blockRendering.PathObject.prototype.updateDisabled_ = function(\n    disabled) {\n  this.setClass_('blocklyDisabled', disabled);\n  if (disabled) {\n    this.svgPath.setAttribute('fill',\n        'url(#' + this.constants.disabledPatternId + ')');\n  }\n};\n\n/**\n * Add or remove styling showing that a block is selected.\n * @param {boolean} enable True if selection is enabled, false otherwise.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateSelected = function(enable) {\n  this.setClass_('blocklySelected', enable);\n};\n\n/**\n * Add or remove styling showing that a block is dragged over a delete area.\n * @param {boolean} enable True if the block is being dragged over a delete\n *     area, false otherwise.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateDraggingDelete = function(\n    enable) {\n  this.setClass_('blocklyDraggingDelete', enable);\n};\n\n/**\n * Add or remove styling showing that a block is an insertion marker.\n * @param {boolean} enable True if the block is an insertion marker, false\n *     otherwise.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateInsertionMarker = function(\n    enable) {\n  this.setClass_('blocklyInsertionMarker', enable);\n};\n\n/**\n * Add or remove styling showing that a block is movable.\n * @param {boolean} enable True if the block is movable, false otherwise.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateMovable = function(enable) {\n  this.setClass_('blocklyDraggable', enable);\n};\n\n/**\n * Add or remove styling that shows that if the dragging block is dropped, this\n * block will be replaced.  If a shadow block, it will disappear.  Otherwise it\n * will bump.\n * @param {boolean} enable True if styling should be added.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateReplacementFade =\n    function(enable) {\n    /* eslint-disable indent */\n  this.setClass_('blocklyReplaceable', enable);\n}; /* eslint-enable indent */\n\n/**\n * Add or remove styling that shows that if the dragging block is dropped, this\n * block will be connected to the input.\n * @param {Blockly.Connection} _conn The connection on the input to highlight.\n * @param {boolean} _enable True if styling should be added.\n * @package\n */\nBlockly.blockRendering.PathObject.prototype.updateShapeForInputHighlight =\n    function(_conn, _enable) {\n    /* eslint-disable indent */\n  // NOP\n}; /* eslint-enable indent */\n"],"file":"path_object.min.js"}