{"version":3,"sources":["../../../../../src/blockly/core/renderers/common/debugger.js"],"names":["goog","provide","require","Blockly","blockRendering","Debug","constants","debugElements_","svgRoot_","constants_","config","rowSpacers","elemSpacers","rows","elems","connections","blockBounds","connectedBlockBounds","render","prototype","clearElems","i","elem","utils","dom","removeNode","drawSpacerRow","row","cursorY","isRtl","height","Math","abs","isNegativeSpacing","push","createSvgElement","xPos","width","drawSpacerElem","rowHeight","yPos","centerline","drawRenderedElem","Types","isField","field","FieldLabel","baseline","FIELD_TEXT_BASELINE","isInput","drawConnection","connectionModel","conn","colour","size","fill","type","INPUT_VALUE","OUTPUT_VALUE","NEXT_STATEMENT","PREVIOUS_STATEMENT","offsetInBlock_","x","y","drawRenderedRow","isTopOrBottomRow","widthWithConnectedBlocks","randomColour_","drawRowWithElements","l","elements","length","console","warn","isSpacer","drawBoundingBox","info","RTL","widthWithChildren","drawDebug","block","getSvgRoot","floor","random","toString","isBetweenRowSpacer","previousConnection","nextConnection","outputConnection","rightSide","drawRender","pathObject","svgPath","setAttribute","debugFilterId","setTimeout"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for graphically rendering a block as SVG.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.blockRendering.Debug');\n\ngoog.require('Blockly.blockRendering.BottomRow');\ngoog.require('Blockly.blockRendering.InputRow');\ngoog.require('Blockly.blockRendering.Measurable');\ngoog.require('Blockly.blockRendering.RenderInfo');\ngoog.require('Blockly.blockRendering.Row');\ngoog.require('Blockly.blockRendering.SpacerRow');\ngoog.require('Blockly.blockRendering.TopRow');\ngoog.require('Blockly.blockRendering.Types');\n\n\n/**\n * An object that renders rectangles and dots for debugging rendering code.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The renderer's\n *     constants.\n * @package\n * @constructor\n */\nBlockly.blockRendering.Debug = function(constants) {\n  /**\n   * An array of SVG elements that have been created by this object.\n   * @type {Array.<!SVGElement>}\n   * @private\n   */\n  this.debugElements_ = [];\n\n  /**\n   * The SVG root of the block that is being rendered.  Debug elements will\n   * be attached to this root.\n   * @type {SVGElement}\n   * @private\n   */\n  this.svgRoot_ = null;\n\n  /**\n   * The renderer's constant provider.\n   * @type {!Blockly.blockRendering.ConstantProvider}\n   * @private\n   */\n  this.constants_ = constants;\n};\n\n/**\n * Configuration object containing booleans to enable and disable debug\n * rendering of specific rendering components.\n * @type {!Object.<string, boolean>}\n */\nBlockly.blockRendering.Debug.config = {\n  rowSpacers: true,\n  elemSpacers: true,\n  rows: true,\n  elems: true,\n  connections: true,\n  blockBounds: true,\n  connectedBlockBounds: true,\n  render: true\n};\n\n/**\n * Remove all elements the this object created on the last pass.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.clearElems = function() {\n  for (var i = 0, elem; (elem = this.debugElements_[i]); i++) {\n    Blockly.utils.dom.removeNode(elem);\n  }\n\n  this.debugElements_ = [];\n};\n\n/**\n * Draw a debug rectangle for a spacer (empty) row.\n * @param {!Blockly.blockRendering.Row} row The row to render.\n * @param {number} cursorY The y position of the top of the row.\n * @param {boolean} isRtl Whether the block is rendered RTL.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawSpacerRow = function(row, cursorY, isRtl) {\n  if (!Blockly.blockRendering.Debug.config.rowSpacers) {\n    return;\n  }\n\n  var height = Math.abs(row.height);\n  var isNegativeSpacing = row.height < 0;\n  if (isNegativeSpacing) {\n    cursorY -= height;\n  }\n\n  this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n      {\n        'class': 'rowSpacerRect blockRenderDebug',\n        'x': isRtl ? -(row.xPos + row.width) : row.xPos,\n        'y': cursorY,\n        'width': row.width,\n        'height': height,\n        'stroke': isNegativeSpacing ? 'black' : 'blue',\n        'fill': 'blue',\n        'fill-opacity': '0.5',\n        'stroke-width': '1px'\n      },\n      this.svgRoot_));\n};\n\n/**\n * Draw a debug rectangle for a horizontal spacer.\n * @param {!Blockly.blockRendering.InRowSpacer} elem The spacer to render.\n * @param {number} rowHeight The height of the container row.\n * @param {boolean} isRtl Whether the block is rendered RTL.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawSpacerElem = function(elem, rowHeight, isRtl) {\n  if (!Blockly.blockRendering.Debug.config.elemSpacers) {\n    return;\n  }\n\n  var width = Math.abs(elem.width);\n  var isNegativeSpacing = elem.width < 0;\n  var xPos = isNegativeSpacing ? elem.xPos - width : elem.xPos;\n  if (isRtl) {\n    xPos = -(xPos + width);\n  }\n  var yPos = elem.centerline - elem.height / 2;\n  this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n      {\n        'class': 'elemSpacerRect blockRenderDebug',\n        'x': xPos,\n        'y': yPos,\n        'width': width,\n        'height': elem.height,\n        'stroke': 'pink',\n        'fill': isNegativeSpacing ? 'black' : 'pink',\n        'fill-opacity': '0.5',\n        'stroke-width': '1px'\n      },\n      this.svgRoot_));\n};\n\n/**\n * Draw a debug rectangle for an in-row element.\n * @param {!Blockly.blockRendering.Measurable} elem The element to render.\n * @param {boolean} isRtl Whether the block is rendered RTL.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawRenderedElem = function(elem, isRtl) {\n  if (Blockly.blockRendering.Debug.config.elems) {\n    var xPos = elem.xPos;\n    if (isRtl) {\n      xPos = -(xPos + elem.width);\n    }\n    var yPos = elem.centerline - elem.height / 2;\n    this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n        {\n          'class': 'rowRenderingRect blockRenderDebug',\n          'x': xPos,\n          'y': yPos,\n          'width': elem.width,\n          'height': elem.height,\n          'stroke': 'black',\n          'fill': 'none',\n          'stroke-width': '1px'\n        },\n        this.svgRoot_));\n\n    if (Blockly.blockRendering.Types.isField(elem) &&\n        elem.field instanceof Blockly.FieldLabel) {\n      var baseline = this.constants_.FIELD_TEXT_BASELINE;\n      this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n          {\n            'class': 'rowRenderingRect blockRenderDebug',\n            'x': xPos,\n            'y': yPos + baseline,\n            'width': elem.width,\n            'height': '0.1px',\n            'stroke': 'red',\n            'fill': 'none',\n            'stroke-width': '0.5px'\n          },\n          this.svgRoot_));\n    }\n  }\n\n\n  if (Blockly.blockRendering.Types.isInput(elem) &&\n      Blockly.blockRendering.Debug.config.connections) {\n    this.drawConnection(elem.connectionModel);\n  }\n};\n\n/**\n * Draw a circle at the location of the given connection.  Inputs and outputs\n * share the same colours, as do previous and next.  When positioned correctly\n * a connected pair will look like a bullseye.\n * @param {Blockly.RenderedConnection} conn The connection to circle.\n * @suppress {visibility} Suppress visibility of conn.offsetInBlock_ since this\n *     is a debug module.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawConnection = function(conn) {\n  if (!Blockly.blockRendering.Debug.config.connections) {\n    return;\n  }\n\n  var colour;\n  var size;\n  var fill;\n  if (conn.type == Blockly.INPUT_VALUE) {\n    size = 4;\n    colour = 'magenta';\n    fill = 'none';\n  } else if (conn.type == Blockly.OUTPUT_VALUE) {\n    size = 2;\n    colour = 'magenta';\n    fill = colour;\n  } else if (conn.type == Blockly.NEXT_STATEMENT) {\n    size = 4;\n    colour = 'goldenrod';\n    fill = 'none';\n  } else if (conn.type == Blockly.PREVIOUS_STATEMENT) {\n    size = 2;\n    colour = 'goldenrod';\n    fill = colour;\n  }\n  this.debugElements_.push(Blockly.utils.dom.createSvgElement('circle',\n      {\n        'class': 'blockRenderDebug',\n        'cx': conn.offsetInBlock_.x,\n        'cy': conn.offsetInBlock_.y,\n        'r': size,\n        'fill': fill,\n        'stroke': colour,\n      },\n      this.svgRoot_));\n};\n\n/**\n * Draw a debug rectangle for a non-empty row.\n * @param {!Blockly.blockRendering.Row} row The non-empty row to render.\n * @param {number} cursorY The y position of the top of the row.\n * @param {boolean} isRtl Whether the block is rendered RTL.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawRenderedRow = function(row, cursorY, isRtl) {\n  if (!Blockly.blockRendering.Debug.config.rows) {\n    return;\n  }\n  this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n      {\n        'class': 'elemRenderingRect blockRenderDebug',\n        'x': isRtl ? -(row.xPos + row.width) : row.xPos,\n        'y': row.yPos,\n        'width': row.width,\n        'height': row.height,\n        'stroke': 'red',\n        'fill': 'none',\n        'stroke-width': '1px'\n      },\n      this.svgRoot_));\n\n  if (Blockly.blockRendering.Types.isTopOrBottomRow(row)) {\n    return;\n  }\n\n  if (Blockly.blockRendering.Debug.config.connectedBlockBounds) {\n    this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n        {\n          'class': 'connectedBlockWidth blockRenderDebug',\n          'x': isRtl ? -(row.xPos + row.widthWithConnectedBlocks) : row.xPos,\n          'y': row.yPos,\n          'width': row.widthWithConnectedBlocks,\n          'height': row.height,\n          'stroke': this.randomColour_,\n          'fill': 'none',\n          'stroke-width': '1px',\n          'stroke-dasharray': '3,3'\n        },\n        this.svgRoot_));\n  }\n};\n\n/**\n * Draw debug rectangles for a non-empty row and all of its subcomponents.\n * @param {!Blockly.blockRendering.Row} row The non-empty row to render.\n * @param {number} cursorY The y position of the top of the row.\n * @param {boolean} isRtl Whether the block is rendered RTL.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawRowWithElements = function(row, cursorY, isRtl) {\n  for (var i = 0, l = row.elements.length; i < l; i++) {\n    var elem = row.elements[i];\n    if (!elem) {\n      console.warn('A row has an undefined or null element.', row, elem);\n      continue;\n    }\n    if (Blockly.blockRendering.Types.isSpacer(elem)) {\n      this.drawSpacerElem(\n          /** @type {!Blockly.blockRendering.InRowSpacer} */ (elem),\n          row.height, isRtl);\n    } else {\n      this.drawRenderedElem(elem, isRtl);\n    }\n  }\n  this.drawRenderedRow(row, cursorY, isRtl);\n};\n\n/**\n * Draw a debug rectangle around the entire block.\n * @param {!Blockly.blockRendering.RenderInfo} info Rendering information about\n *     the block to debug.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawBoundingBox = function(info) {\n  if (!Blockly.blockRendering.Debug.config.blockBounds) {\n    return;\n  }\n  // Bounding box without children.\n  var xPos = info.RTL ? -info.width : 0;\n  var yPos = 0;\n  this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n      {\n        'class': 'blockBoundingBox blockRenderDebug',\n        'x': xPos,\n        'y': yPos,\n        'width': info.width,\n        'height': info.height,\n        'stroke': 'black',\n        'fill': 'none',\n        'stroke-width': '1px',\n        'stroke-dasharray': '5,5'\n      },\n      this.svgRoot_));\n\n  if (Blockly.blockRendering.Debug.config.connectedBlockBounds) {\n    // Bounding box with children.\n    xPos = info.RTL ? -info.widthWithChildren : 0;\n    this.debugElements_.push(Blockly.utils.dom.createSvgElement('rect',\n        {\n          'class': 'blockRenderDebug',\n          'x': xPos,\n          'y': yPos,\n          'width': info.widthWithChildren,\n          'height': info.height,\n          'stroke': '#DF57BC',\n          'fill': 'none',\n          'stroke-width': '1px',\n          'stroke-dasharray': '3,3'\n        },\n        this.svgRoot_));\n  }\n};\n\n/**\n * Do all of the work to draw debug information for the whole block.\n * @param {!Blockly.BlockSvg} block The block to draw debug information for.\n * @param {!Blockly.blockRendering.RenderInfo} info Rendering information about\n *     the block to debug.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawDebug = function(block, info) {\n  this.clearElems();\n  this.svgRoot_ = block.getSvgRoot();\n\n  this.randomColour_ = '#' + Math.floor(Math.random() * 16777215).toString(16);\n\n  var cursorY = 0;\n  for (var i = 0, row; (row = info.rows[i]); i++) {\n    if (Blockly.blockRendering.Types.isBetweenRowSpacer(row)) {\n      this.drawSpacerRow(row, cursorY, info.RTL);\n    } else {\n      this.drawRowWithElements(row, cursorY, info.RTL);\n    }\n    cursorY += row.height;\n  }\n\n  if (block.previousConnection) {\n    this.drawConnection(block.previousConnection);\n  }\n  if (block.nextConnection) {\n    this.drawConnection(block.nextConnection);\n  }\n  if (block.outputConnection) {\n    this.drawConnection(block.outputConnection);\n  }\n  if (info.rightSide) {\n    this.drawRenderedElem(info.rightSide, info.RTL);\n  }\n\n  this.drawBoundingBox(info);\n\n  this.drawRender(block.pathObject.svgPath);\n};\n\n\n/**\n * Show a debug filter to highlight that a block has been rendered.\n * @param {!SVGElement} svgPath The block's svg path.\n * @package\n */\nBlockly.blockRendering.Debug.prototype.drawRender = function(svgPath) {\n  if (!Blockly.blockRendering.Debug.config.render) {\n    return;\n  }\n  svgPath.setAttribute('filter',\n      'url(#' + this.constants_.debugFilterId + ')');\n  setTimeout(function() {\n    svgPath.setAttribute('filter', '');\n  }, 100);\n};\n"],"file":"debugger.min.js"}