{"version":3,"sources":["../../../../../src/blockly/core/renderers/measurables/row_elements.js"],"names":["goog","provide","require","Blockly","blockRendering","Icon","constants","icon","superClass_","constructor","call","isVisible","type","Types","ICON","size","getCorrectedSize","height","width","utils","object","inherits","Measurable","JaggedEdge","JAGGED_EDGE","constants_","JAGGED_TEETH","Field","field","parentInput","isEditable","EDITABLE","flipRtl","getFlipRtl","FIELD","getSize","Hat","HAT","START_HAT","ascenderHeight","SquareCorner","opt_position","LEFT_SQUARE_CORNER","RIGHT_SQUARE_CORNER","CORNER","NO_PADDING","RoundCorner","LEFT_ROUND_CORNER","RIGHT_ROUND_CORNER","CORNER_RADIUS","InRowSpacer","SPACER","IN_ROW_SPACER","SPACER_DEFAULT_HEIGHT"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Objects representing elements in a row of a rendered\n * block.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n\ngoog.provide('Blockly.blockRendering.Field');\ngoog.provide('Blockly.blockRendering.Hat');\ngoog.provide('Blockly.blockRendering.Icon');\ngoog.provide('Blockly.blockRendering.InRowSpacer');\ngoog.provide('Blockly.blockRendering.JaggedEdge');\ngoog.provide('Blockly.blockRendering.RoundCorner');\ngoog.provide('Blockly.blockRendering.SquareCorner');\n\ngoog.require('Blockly.blockRendering.Measurable');\ngoog.require('Blockly.blockRendering.Types');\ngoog.require('Blockly.utils.object');\n\n\n/**\n * An object containing information about the space an icon takes up during\n * rendering\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @param {!Blockly.Icon} icon The icon to measure and store information for.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.Icon = function(constants, icon) {\n  Blockly.blockRendering.Icon.superClass_.constructor.call(this, constants);\n  this.icon = icon;\n  this.isVisible = icon.isVisible();\n  this.type |= Blockly.blockRendering.Types.ICON;\n\n  var size = icon.getCorrectedSize();\n  this.height = size.height;\n  this.width = size.width;\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.Icon,\n    Blockly.blockRendering.Measurable);\n\n/**\n * An object containing information about the jagged edge of a collapsed block\n * takes up during rendering\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.JaggedEdge = function(constants) {\n  Blockly.blockRendering.JaggedEdge.superClass_.constructor.call(\n      this, constants);\n  this.type |= Blockly.blockRendering.Types.JAGGED_EDGE;\n  this.height = this.constants_.JAGGED_TEETH.height;\n  this.width = this.constants_.JAGGED_TEETH.width;\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.JaggedEdge,\n    Blockly.blockRendering.Measurable);\n\n\n/**\n * An object containing information about the space a field takes up during\n * rendering\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @param {!Blockly.Field} field The field to measure and store information for.\n * @param {!Blockly.Input} parentInput The parent input for the field.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.Field = function(constants, field, parentInput) {\n  Blockly.blockRendering.Field.superClass_.constructor.call(this, constants);\n  this.field = field;\n  this.isEditable = field.EDITABLE;\n  this.flipRtl = field.getFlipRtl();\n  this.type |= Blockly.blockRendering.Types.FIELD;\n\n  var size = this.field.getSize();\n  this.height = size.height;\n  this.width = size.width;\n  this.parentInput = parentInput;\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.Field,\n    Blockly.blockRendering.Measurable);\n\n/**\n * An object containing information about the space a hat takes up during\n * rendering.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.Hat = function(constants) {\n  Blockly.blockRendering.Hat.superClass_.constructor.call(this, constants);\n  this.type |= Blockly.blockRendering.Types.HAT;\n  this.height = this.constants_.START_HAT.height;\n  this.width = this.constants_.START_HAT.width;\n  this.ascenderHeight = this.height;\n\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.Hat,\n    Blockly.blockRendering.Measurable);\n\n/**\n * An object containing information about the space a square corner takes up\n * during rendering.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @param {string=} opt_position The position of this corner.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.SquareCorner = function(constants, opt_position) {\n  Blockly.blockRendering.SquareCorner.superClass_.constructor.call(this,\n      constants);\n  this.type = ((!opt_position || opt_position == 'left') ?\n      Blockly.blockRendering.Types.LEFT_SQUARE_CORNER :\n      Blockly.blockRendering.Types.RIGHT_SQUARE_CORNER) |\n          Blockly.blockRendering.Types.CORNER;\n  this.height = this.constants_.NO_PADDING;\n  this.width = this.constants_.NO_PADDING;\n\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.SquareCorner,\n    Blockly.blockRendering.Measurable);\n\n/**\n * An object containing information about the space a rounded corner takes up\n * during rendering.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @param {string=} opt_position The position of this corner.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.RoundCorner = function(constants, opt_position) {\n  Blockly.blockRendering.RoundCorner.superClass_.constructor.call(this,\n      constants);\n  this.type = ((!opt_position || opt_position == 'left') ?\n      Blockly.blockRendering.Types.LEFT_ROUND_CORNER :\n      Blockly.blockRendering.Types.RIGHT_ROUND_CORNER) |\n          Blockly.blockRendering.Types.CORNER;\n  this.width = this.constants_.CORNER_RADIUS;\n  // The rounded corner extends into the next row by 4 so we only take the\n  // height that is aligned with this row.\n  this.height = this.constants_.CORNER_RADIUS / 2;\n\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.RoundCorner,\n    Blockly.blockRendering.Measurable);\n\n/**\n * An object containing information about a spacer between two elements on a\n * row.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @param {number} width The width of the spacer.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Measurable}\n */\nBlockly.blockRendering.InRowSpacer = function(constants, width) {\n  Blockly.blockRendering.InRowSpacer.superClass_.constructor.call(this,\n      constants);\n  this.type |= Blockly.blockRendering.Types.SPACER |\n      Blockly.blockRendering.Types.IN_ROW_SPACER;\n  this.width = width;\n  this.height = this.constants_.SPACER_DEFAULT_HEIGHT;\n};\nBlockly.utils.object.inherits(Blockly.blockRendering.InRowSpacer,\n    Blockly.blockRendering.Measurable);\n\n"],"file":"row_elements.min.js"}