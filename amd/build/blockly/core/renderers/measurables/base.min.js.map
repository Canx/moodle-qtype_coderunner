{"version":3,"sources":["../../../../../src/blockly/core/renderers/measurables/base.js"],"names":["goog","provide","require","Blockly","blockRendering","Measurable","constants","width","height","type","Types","NONE","xPos","centerline","constants_","notchOffset","NOTCH_OFFSET_LEFT"],"mappings":"AAWA,aAEAA,IAAI,CAACC,OAAL,CAAa,mCAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,8BAAb,EAYAC,OAAO,CAACC,cAAR,CAAuBC,UAAvB,CAAoC,SAASC,CAAT,CAAoB,CACtD,KAAKC,KAAL,CAAa,CAAb,CACA,KAAKC,MAAL,CAAc,CAAd,CACA,KAAKC,IAAL,CAAYN,OAAO,CAACC,cAAR,CAAuBM,KAAvB,CAA6BC,IAAzC,CAEA,KAAKC,IAAL,CAAY,CAAZ,CACA,KAAKC,UAAL,CAAkB,CAAlB,CAOA,KAAKC,UAAL,CAAkBR,CAAlB,CAEA,KAAKS,WAAL,CAAmB,KAAKD,UAAL,CAAgBE,iBACpC,CAhBD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for graphically rendering a block as SVG.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n\n'use strict';\n\ngoog.provide('Blockly.blockRendering.Measurable');\n\ngoog.require('Blockly.blockRendering.Types');\n\n\n/**\n * The base class to represent a part of a block that takes up space during\n * rendering.  The constructor for each non-spacer Measurable records the size\n * of the block element (e.g. field, statement input).\n * @param {!Blockly.blockRendering.ConstantProvider} constants The rendering\n *   constants provider.\n * @package\n * @constructor\n */\nBlockly.blockRendering.Measurable = function(constants) {\n  this.width = 0;\n  this.height = 0;\n  this.type = Blockly.blockRendering.Types.NONE;\n\n  this.xPos = 0;\n  this.centerline = 0;\n\n  /**\n   * The renderer's constant provider.\n   * @type {!Blockly.blockRendering.ConstantProvider}\n   * @protected\n   */\n  this.constants_ = constants;\n\n  this.notchOffset = this.constants_.NOTCH_OFFSET_LEFT;\n};\n"],"file":"base.min.js"}