{"version":3,"sources":["../../../../../src/blockly/core/renderers/zelos/drawer.js"],"names":["goog","provide","require","requireType","Blockly","zelos","Drawer","block","info","superClass_","constructor","call","utils","object","inherits","blockRendering","prototype","draw","pathObject","block_","beginDrawing","hideHiddenIcons_","drawOutline_","drawInternals_","setPath","outlinePath_","inlinePath_","info_","RTL","flipRTL","useDebugger","renderingDebugger","drawDebug","recordSizeOnBlock_","outputConnection","outputShapeType","shape","type","endDrawing","isDynamicShape","hasStatementInput","bottomRow","hasNextConnection","drawFlatTop_","drawRightDynamicConnection_","drawFlatBottom_","drawLeftDynamicConnection_","drawLeft_","drawRightSideRow_","row","height","precedesStatement","followsStatement","cornerHeight","constants_","INSIDE_CORNERS","rightHeight","remainingHeight","pathBottomRight","svgPaths","lineOnAxis","yPos","pathTopRight","pathRightDown","positionOutputConnection_","pathUp","topRow","positionPreviousConnection_","moveBy","xPos","startY","width","positionNextConnection_","baseline","drawInlineInput_","input","positionInlineInputConnection_","inputName","name","connectedBlock","isInsertionMarker","connectionWidth","centerline","connectionRight","outlinePath","moveTo","setOutlinePath","drawStatementInput_","getLastInput","x","notchOffset","innerTopLeftCorner","pathRight","pathTop","innerHeight","innerBottomLeftCorner","pathBottom","connectedBottomNextConnection","pathLeft","positionStatementInputConnection_"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Zelos renderer.\n * @author samelh@google.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.zelos.Drawer');\n\ngoog.require('Blockly.blockRendering.ConstantProvider');\ngoog.require('Blockly.blockRendering.Drawer');\ngoog.require('Blockly.blockRendering.Types');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.zelos.RenderInfo');\n\ngoog.requireType('Blockly.zelos.PathObject');\n\n\n/**\n * An object that draws a block based on the given rendering information.\n * @param {!Blockly.BlockSvg} block The block to render.\n * @param {!Blockly.zelos.RenderInfo} info An object containing all\n *   information needed to render this block.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Drawer}\n */\nBlockly.zelos.Drawer = function(block, info) {\n  Blockly.zelos.Drawer.superClass_.constructor.call(this, block, info);\n};\nBlockly.utils.object.inherits(Blockly.zelos.Drawer,\n    Blockly.blockRendering.Drawer);\n\n\n/**\n * @override\n */\nBlockly.zelos.Drawer.prototype.draw = function() {\n  var pathObject =\n    /** @type {!Blockly.zelos.PathObject} */ (this.block_.pathObject);\n  pathObject.beginDrawing();\n  this.hideHiddenIcons_();\n  this.drawOutline_();\n  this.drawInternals_();\n\n  pathObject.setPath(this.outlinePath_ + '\\n' + this.inlinePath_);\n  if (this.info_.RTL) {\n    pathObject.flipRTL();\n  }\n  if (Blockly.blockRendering.useDebugger) {\n    this.block_.renderingDebugger.drawDebug(this.block_, this.info_);\n  }\n  this.recordSizeOnBlock_();\n  if (this.info_.outputConnection) {\n    // Store the output connection shape type for parent blocks to use during\n    // rendering.\n    pathObject.outputShapeType = this.info_.outputConnection.shape.type;\n  }\n  pathObject.endDrawing();\n};\n\n/**\n * @override\n */\nBlockly.zelos.Drawer.prototype.drawOutline_ = function() {\n  if (this.info_.outputConnection &&\n      this.info_.outputConnection.isDynamicShape &&\n      !this.info_.hasStatementInput &&\n      !this.info_.bottomRow.hasNextConnection) {\n    this.drawFlatTop_();\n    this.drawRightDynamicConnection_();\n    this.drawFlatBottom_();\n    this.drawLeftDynamicConnection_();\n  } else {\n    Blockly.zelos.Drawer.superClass_.drawOutline_.call(this);\n  }\n};\n\n/**\n * @override\n */\nBlockly.zelos.Drawer.prototype.drawLeft_ = function() {\n  if (this.info_.outputConnection &&\n      this.info_.outputConnection.isDynamicShape) {\n    this.drawLeftDynamicConnection_();\n  } else {\n    Blockly.zelos.Drawer.superClass_.drawLeft_.call(this);\n  }\n};\n\n/**\n * Add steps for the right side of a row that does not have value or\n * statement input connections.\n * @param {!Blockly.blockRendering.Row} row The row to draw the\n *     side of.\n * @protected\n */\nBlockly.zelos.Drawer.prototype.drawRightSideRow_ = function(row) {\n  if (row.height <= 0) {\n    return;\n  }\n  if (row.precedesStatement || row.followsStatement) {\n    var cornerHeight = this.constants_.INSIDE_CORNERS.rightHeight;\n    var remainingHeight = row.height -\n        (row.precedesStatement ? cornerHeight : 0);\n    this.outlinePath_ +=\n        (row.followsStatement ?\n            this.constants_.INSIDE_CORNERS.pathBottomRight : '') +\n        (remainingHeight > 0 ?\n            Blockly.utils.svgPaths\n                .lineOnAxis('V', row.yPos + remainingHeight) : '') +\n        (row.precedesStatement ?\n            this.constants_.INSIDE_CORNERS.pathTopRight : '');\n  } else {\n    this.outlinePath_ +=\n        Blockly.utils.svgPaths.lineOnAxis('V', row.yPos + row.height);\n  }\n};\n\n/**\n * Add steps to draw the right side of an output with a dynamic connection.\n * @protected\n */\nBlockly.zelos.Drawer.prototype.drawRightDynamicConnection_ = function() {\n  this.outlinePath_ += this.info_.outputConnection.shape.pathRightDown(\n      this.info_.outputConnection.height);\n};\n\n/**\n * Add steps to draw the left side of an output with a dynamic connection.\n * @protected\n */\nBlockly.zelos.Drawer.prototype.drawLeftDynamicConnection_ = function() {\n  this.positionOutputConnection_();\n\n  this.outlinePath_ += this.info_.outputConnection.shape.pathUp(\n      this.info_.outputConnection.height);\n\n  // Close off the path.  This draws a vertical line up to the start of the\n  // block's path, which may be either a rounded or a sharp corner.\n  this.outlinePath_ += 'z';\n};\n\n/**\n * Add steps to draw a flat top row.\n * @protected\n */\nBlockly.zelos.Drawer.prototype.drawFlatTop_ = function() {\n  var topRow = this.info_.topRow;\n  this.positionPreviousConnection_();\n\n  this.outlinePath_ +=\n      Blockly.utils.svgPaths.moveBy(topRow.xPos, this.info_.startY);\n\n  this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('h', topRow.width);\n};\n\n/**\n * Add steps to draw a flat bottom row.\n * @protected\n */\nBlockly.zelos.Drawer.prototype.drawFlatBottom_ = function() {\n  var bottomRow = this.info_.bottomRow;\n  this.positionNextConnection_();\n\n  this.outlinePath_ +=\n    Blockly.utils.svgPaths.lineOnAxis('V', bottomRow.baseline);\n\n  this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('h', -bottomRow.width);\n};\n\n/**\n * @override\n */\nBlockly.zelos.Drawer.prototype.drawInlineInput_ = function(input) {\n  this.positionInlineInputConnection_(input);\n\n  var inputName = input.input.name;\n  if (input.connectedBlock || this.info_.isInsertionMarker) {\n    return;\n  }\n\n  var width = input.width - (input.connectionWidth * 2);\n  var height = input.height;\n  var yPos = input.centerline - height / 2;\n\n  var connectionRight = input.xPos + input.connectionWidth;\n\n  var outlinePath = Blockly.utils.svgPaths.moveTo(connectionRight, yPos) +\n      Blockly.utils.svgPaths.lineOnAxis('h', width) +\n      input.shape.pathRightDown(input.height) +\n      Blockly.utils.svgPaths.lineOnAxis('h', -width) +\n      input.shape.pathUp(input.height) +\n      'z';\n  this.block_.pathObject.setOutlinePath(inputName, outlinePath);\n};\n\n/**\n * @override\n */\nBlockly.zelos.Drawer.prototype.drawStatementInput_ = function(row) {\n  var input = row.getLastInput();\n  // Where to start drawing the notch, which is on the right side in LTR.\n  var x = input.xPos + input.notchOffset + input.shape.width;\n\n  var innerTopLeftCorner =\n      input.shape.pathRight +\n      Blockly.utils.svgPaths.lineOnAxis('h',\n          -(input.notchOffset - this.constants_.INSIDE_CORNERS.width)) +\n      this.constants_.INSIDE_CORNERS.pathTop;\n\n  var innerHeight =\n      row.height - (2 * this.constants_.INSIDE_CORNERS.height);\n\n  var innerBottomLeftCorner =\n    this.constants_.INSIDE_CORNERS.pathBottom +\n    Blockly.utils.svgPaths.lineOnAxis('h',\n        (input.notchOffset - this.constants_.INSIDE_CORNERS.width)) +\n    (input.connectedBottomNextConnection ? '' : input.shape.pathLeft);\n\n  this.outlinePath_ += Blockly.utils.svgPaths.lineOnAxis('H', x) +\n      innerTopLeftCorner +\n      Blockly.utils.svgPaths.lineOnAxis('v', innerHeight) +\n      innerBottomLeftCorner +\n      Blockly.utils.svgPaths.lineOnAxis('H', row.xPos + row.width);\n\n  this.positionStatementInputConnection_(row);\n};\n"],"file":"drawer.min.js"}