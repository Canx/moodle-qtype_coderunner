{"version":3,"sources":["../../../../../src/blockly/core/renderers/zelos/marker_svg.js"],"names":["goog","provide","require","Blockly","zelos","MarkerSvg","workspace","constants","marker","superClass_","constructor","call","utils","object","inherits","blockRendering","prototype","showWithInputOutput_","curNode","block","getSourceBlock","connection","getLocation","offsetInBlock","getOffsetInBlock","positionCircle_","x","y","setParent_","showCurrent_","showWithOutput_","showWithInput_","showWithBlock_","heightWidth","getHeightWidth","positionRect_","width","height","markerCircle_","setAttribute","currentMarkerSvg","hide","style","display","createDomInternal_","dom","createSvgElement","constants_","CURSOR_RADIUS","CURSOR_STROKE_WIDTH","markerSvg_","isCursor","blinkProperties","getBlinkProperties_","applyColour_","colour_","values","firstChild"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Methods for graphically rendering a marker as SVG.\n * @author samelh@microsoft.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.zelos.MarkerSvg');\n\ngoog.require('Blockly.blockRendering.MarkerSvg');\n\n\n/**\n * Class to draw a marker.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace the marker belongs to.\n * @param {!Blockly.blockRendering.ConstantProvider} constants The constants for\n *     the renderer.\n * @param {!Blockly.Marker} marker The marker to draw.\n * @constructor\n * @extends {Blockly.blockRendering.MarkerSvg}\n */\nBlockly.zelos.MarkerSvg = function(workspace, constants, marker) {\n  Blockly.zelos.MarkerSvg.superClass_.constructor.call(\n      this, workspace, constants, marker);\n};\nBlockly.utils.object.inherits(Blockly.zelos.MarkerSvg,\n    Blockly.blockRendering.MarkerSvg);\n\n/**\n * Position and display the marker for an input or an output connection.\n * @param {!Blockly.ASTNode} curNode The node to draw the marker for.\n * @private\n */\nBlockly.zelos.MarkerSvg.prototype.showWithInputOutput_ = function(curNode) {\n  var block = /** @type {!Blockly.BlockSvg} */ (curNode.getSourceBlock());\n  var connection = /** @type {!Blockly.Connection} */ (curNode.getLocation());\n  var offsetInBlock = connection.getOffsetInBlock();\n\n  this.positionCircle_(offsetInBlock.x, offsetInBlock.y);\n  this.setParent_(block);\n  this.showCurrent_();\n};\n\n/**\n * @override\n */\nBlockly.zelos.MarkerSvg.prototype.showWithOutput_ = function(curNode) {\n  this.showWithInputOutput_(curNode);\n};\n\n/**\n * @override\n */\nBlockly.zelos.MarkerSvg.prototype.showWithInput_ = function(curNode) {\n  this.showWithInputOutput_(curNode);\n};\n\n/**\n * Draw a rectangle around the block.\n * @param {!Blockly.ASTNode} curNode The current node of the marker.\n */\nBlockly.zelos.MarkerSvg.prototype.showWithBlock_ = function(curNode) {\n  var block = /** @type {!Blockly.BlockSvg} */ (curNode.getLocation());\n\n  // Gets the height and width of entire stack.\n  var heightWidth = block.getHeightWidth();\n\n  // Add padding so that being on a stack looks different than being on a block.\n  this.positionRect_(0, 0, heightWidth.width, heightWidth.height);\n  this.setParent_(block);\n  this.showCurrent_();\n};\n\n/**\n * Position the circle we use for input and output connections.\n * @param {number} x The x position of the circle.\n * @param {number} y The y position of the circle.\n * @private\n */\nBlockly.zelos.MarkerSvg.prototype.positionCircle_ = function(x, y) {\n  this.markerCircle_.setAttribute('cx', x);\n  this.markerCircle_.setAttribute('cy', y);\n  this.currentMarkerSvg = this.markerCircle_;\n};\n\n/**\n * @override\n */\nBlockly.zelos.MarkerSvg.prototype.hide = function() {\n  Blockly.zelos.MarkerSvg.superClass_.hide.call(this);\n  this.markerCircle_.style.display = 'none';\n};\n\n/**\n * @override\n */\nBlockly.zelos.MarkerSvg.prototype.createDomInternal_ = function() {\n  /* This markup will be generated and added to the .svgGroup_:\n  <g>\n    <rect width=\"100\" height=\"5\">\n      <animate attributeType=\"XML\" attributeName=\"fill\" dur=\"1s\"\n        values=\"transparent;transparent;#fff;transparent\" repeatCount=\"indefinite\" />\n    </rect>\n  </g>\n  */\n\n  Blockly.zelos.MarkerSvg.superClass_.createDomInternal_.call(this);\n\n  this.markerCircle_ = Blockly.utils.dom.createSvgElement('circle', {\n    'r': this.constants_.CURSOR_RADIUS,\n    'style': 'display: none',\n    'stroke-width': this.constants_.CURSOR_STROKE_WIDTH\n  },\n  this.markerSvg_);\n\n  // Markers and stack cursors don't blink.\n  if (this.isCursor()) {\n    var blinkProperties = this.getBlinkProperties_();\n    Blockly.utils.dom.createSvgElement('animate', blinkProperties,\n        this.markerCircle_);\n  }\n\n  return this.markerSvg_;\n};\n\n/**\n * @override\n */\nBlockly.zelos.MarkerSvg.prototype.applyColour_ = function(curNode) {\n  Blockly.zelos.MarkerSvg.superClass_.applyColour_.call(this, curNode);\n\n  this.markerCircle_.setAttribute('fill', this.colour_);\n  this.markerCircle_.setAttribute('stroke', this.colour_);\n\n  if (this.isCursor()) {\n    var values = this.colour_ + ';transparent;transparent;';\n    this.markerCircle_.firstChild.setAttribute('values', values);\n  }\n};\n"],"file":"marker_svg.min.js"}