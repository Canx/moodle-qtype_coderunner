{"version":3,"sources":["../../../../../src/blockly/core/renderers/zelos/renderer.js"],"names":["goog","provide","require","Blockly","zelos","Renderer","name","superClass_","constructor","call","utils","object","inherits","blockRendering","prototype","makeConstants_","ConstantProvider","makeRenderInfo_","block","RenderInfo","makeDrawer_","info","Drawer","makeMarkerDrawer","workspace","marker","MarkerSvg","getConstants","makePathObject","root","style","PathObject","shouldHighlightConnection","conn","type","INPUT_VALUE","OUTPUT_VALUE","getConnectionPreviewMethod","closest","local","topBlock","isConnected","InsertionMarkerManager","PREVIEW_TYPE","INPUT_OUTLINE","REPLACEMENT_FADE","register"],"mappings":"AAUA,aAEAA,IAAI,CAACC,OAAL,CAAa,wBAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,wBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,iCAAb,EACAF,IAAI,CAACE,OAAL,CAAa,gCAAb,EACAF,IAAI,CAACE,OAAL,CAAa,sBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,gCAAb,EACAF,IAAI,CAACE,OAAL,CAAa,sBAAb,EACAF,IAAI,CAACE,OAAL,CAAa,0BAAb,EACAF,IAAI,CAACE,OAAL,CAAa,0BAAb,EACAF,IAAI,CAACE,OAAL,CAAa,yBAAb,EAUAC,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAyB,SAASC,CAAT,CAAe,CACtCH,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBE,WAAvB,CAAmCC,WAAnC,CAA+CC,IAA/C,CAAoD,IAApD,CAA0DH,CAA1D,CACD,CAFD,CAGAH,OAAO,CAACO,KAAR,CAAcC,MAAd,CAAqBC,QAArB,CAA8BT,OAAO,CAACC,KAAR,CAAcC,QAA5C,CACIF,OAAO,CAACU,cAAR,CAAuBR,QAD3B,EASAF,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCC,cAAjC,CAAkD,UAAW,CAC3D,MAAO,IAAIZ,CAAAA,OAAO,CAACC,KAAR,CAAcY,gBAC1B,CAFD,CAWAb,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCG,eAAjC,CAAmD,SAASC,CAAT,CAAgB,CACjE,MAAO,IAAIf,CAAAA,OAAO,CAACC,KAAR,CAAce,UAAlB,CAA6B,IAA7B,CAAmCD,CAAnC,CACR,CAFD,CAaAf,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCM,WAAjC,CAA+C,SAASF,CAAT,CAAgBG,CAAhB,CAAsB,CACnE,MAAO,IAAIlB,CAAAA,OAAO,CAACC,KAAR,CAAckB,MAAlB,CAAyBJ,CAAzB,CACuCG,CADvC,CAER,CAHD,CAcAlB,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCS,gBAAjC,CAAoD,SAChDC,CADgD,CACrCC,CADqC,CAC7B,CACrB,MAAO,IAAItB,CAAAA,OAAO,CAACC,KAAR,CAAcsB,SAAlB,CAA4BF,CAA5B,CAAuC,KAAKG,YAAL,EAAvC,CAA4DF,CAA5D,CACR,CAHD,CAcAtB,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCc,cAAjC,CAAkD,SAASC,CAAT,CAAeC,CAAf,CAAsB,CACtE,MAAO,IAAI3B,CAAAA,OAAO,CAACC,KAAR,CAAc2B,UAAlB,CAA6BF,CAA7B,CAAmCC,CAAnC,CAC6C,KAAKH,YAAL,EAD7C,CAER,CAHD,CAQAxB,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCkB,yBAAjC,CAA6D,SAASC,CAAT,CAAe,CAC1E,MAAOA,CAAAA,CAAI,CAACC,IAAL,EAAa/B,OAAO,CAACgC,WAArB,EAAoCF,CAAI,CAACC,IAAL,GAAc/B,OAAO,CAACiC,YAClE,CAFD,CAOAjC,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBS,SAAvB,CAAiCuB,0BAAjC,CACI,SAASC,CAAT,CAAkBC,CAAlB,CAAyBC,CAAzB,CAAmC,CACjC,GAAID,CAAK,CAACL,IAAN,EAAc/B,OAAO,CAACiC,YAA1B,CAAwC,CACtC,GAAI,CAACE,CAAO,CAACG,WAAR,EAAL,CAA4B,CAC1B,MAAOtC,CAAAA,OAAO,CAACuC,sBAAR,CAA+BC,YAA/B,CAA4CC,aACpD,CAMD,MAAOzC,CAAAA,OAAO,CAACuC,sBAAR,CAA+BC,YAA/B,CAA4CE,gBACpD,CAED,MAAO1C,CAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBE,WAAvB,CACF8B,0BADE,CACyBC,CADzB,CACkCC,CADlC,CACyCC,CADzC,CAER,CAhBL,CAkBArC,OAAO,CAACU,cAAR,CAAuBiC,QAAvB,CAAgC,OAAhC,CAAyC3C,OAAO,CAACC,KAAR,CAAcC,QAAvD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Zelos renderer.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.zelos.Renderer');\n\ngoog.require('Blockly.blockRendering');\ngoog.require('Blockly.blockRendering.Renderer');\ngoog.require('Blockly.InsertionMarkerManager');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.zelos.ConstantProvider');\ngoog.require('Blockly.zelos.Drawer');\ngoog.require('Blockly.zelos.PathObject');\ngoog.require('Blockly.zelos.RenderInfo');\ngoog.require('Blockly.zelos.MarkerSvg');\n\n\n/**\n * The zelos renderer.\n * @param {string} name The renderer name.\n * @package\n * @constructor\n * @extends {Blockly.blockRendering.Renderer}\n */\nBlockly.zelos.Renderer = function(name) {\n  Blockly.zelos.Renderer.superClass_.constructor.call(this, name);\n};\nBlockly.utils.object.inherits(Blockly.zelos.Renderer,\n    Blockly.blockRendering.Renderer);\n\n/**\n * Create a new instance of the renderer's constant provider.\n * @return {!Blockly.zelos.ConstantProvider} The constant provider.\n * @protected\n * @override\n */\nBlockly.zelos.Renderer.prototype.makeConstants_ = function() {\n  return new Blockly.zelos.ConstantProvider();\n};\n\n/**\n * Create a new instance of the renderer's render info object.\n * @param {!Blockly.BlockSvg} block The block to measure.\n * @return {!Blockly.zelos.RenderInfo} The render info object.\n * @protected\n * @override\n */\nBlockly.zelos.Renderer.prototype.makeRenderInfo_ = function(block) {\n  return new Blockly.zelos.RenderInfo(this, block);\n};\n\n/**\n * Create a new instance of the renderer's drawer.\n * @param {!Blockly.BlockSvg} block The block to render.\n * @param {!Blockly.blockRendering.RenderInfo} info An object containing all\n *   information needed to render this block.\n * @return {!Blockly.zelos.Drawer} The drawer.\n * @protected\n * @override\n */\nBlockly.zelos.Renderer.prototype.makeDrawer_ = function(block, info) {\n  return new Blockly.zelos.Drawer(block,\n      /** @type {!Blockly.zelos.RenderInfo} */ (info));\n};\n\n/**\n * Create a new instance of the renderer's cursor drawer.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace the cursor belongs to.\n * @param {!Blockly.Marker} marker The marker.\n * @return {!Blockly.blockRendering.MarkerSvg} The object in charge of drawing\n *     the marker.\n * @package\n * @override\n */\nBlockly.zelos.Renderer.prototype.makeMarkerDrawer = function(\n    workspace, marker) {\n  return new Blockly.zelos.MarkerSvg(workspace, this.getConstants(), marker);\n};\n\n/**\n * Create a new instance of a renderer path object.\n * @param {!SVGElement} root The root SVG element.\n * @param {!Blockly.Theme.BlockStyle} style The style object to use for\n *     colouring.\n * @return {!Blockly.zelos.PathObject} The renderer path object.\n * @package\n * @override\n */\nBlockly.zelos.Renderer.prototype.makePathObject = function(root, style) {\n  return new Blockly.zelos.PathObject(root, style,\n      /** @type {!Blockly.zelos.ConstantProvider} */ (this.getConstants()));\n};\n\n/**\n * @override\n */\nBlockly.zelos.Renderer.prototype.shouldHighlightConnection = function(conn) {\n  return conn.type != Blockly.INPUT_VALUE && conn.type !== Blockly.OUTPUT_VALUE;\n};\n\n/**\n * @override\n */\nBlockly.zelos.Renderer.prototype.getConnectionPreviewMethod =\n    function(closest, local, topBlock) {\n      if (local.type == Blockly.OUTPUT_VALUE) {\n        if (!closest.isConnected()) {\n          return Blockly.InsertionMarkerManager.PREVIEW_TYPE.INPUT_OUTLINE;\n        }\n        // TODO: Returning this is a total hack, because we don't want to show\n        //   a replacement fade, we want to show an outline affect.\n        //   Sadly zelos does not support showing an outline around filled\n        //   inputs, so we have to pretend like the connected block is getting\n        //   replaced.\n        return Blockly.InsertionMarkerManager.PREVIEW_TYPE.REPLACEMENT_FADE;\n      }\n\n      return Blockly.zelos.Renderer.superClass_\n          .getConnectionPreviewMethod(closest, local, topBlock);\n    };\n\nBlockly.blockRendering.register('zelos', Blockly.zelos.Renderer);\n"],"file":"renderer.min.js"}