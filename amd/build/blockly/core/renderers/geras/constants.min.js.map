{"version":3,"sources":["../../../../../src/blockly/core/renderers/geras/constants.js"],"names":["goog","provide","require","Blockly","geras","ConstantProvider","superClass_","constructor","call","FIELD_TEXT_BASELINE_CENTER","DARK_PATH_OFFSET","MAX_BOTTOM_WIDTH","utils","object","inherits","blockRendering","prototype","getCSS_","selector","concat","INSERTION_MARKER_OPACITY"],"mappings":"AAWA,aAEAA,IAAI,CAACC,OAAL,CAAa,gCAAb,EAEAD,IAAI,CAACE,OAAL,CAAa,yCAAb,EACAF,IAAI,CAACE,OAAL,CAAa,sBAAb,EASAC,OAAO,CAACC,KAAR,CAAcC,gBAAd,CAAiC,UAAW,CAC1CF,OAAO,CAACC,KAAR,CAAcC,gBAAd,CAA+BC,WAA/B,CAA2CC,WAA3C,CAAuDC,IAAvD,CAA4D,IAA5D,EAKA,KAAKC,0BAAL,IAIA,KAAKC,gBAAL,CAAwB,CAAxB,CAOA,KAAKC,gBAAL,CAAwB,EACzB,CAlBD,CAmBAR,OAAO,CAACS,KAAR,CAAcC,MAAd,CAAqBC,QAArB,CAA8BX,OAAO,CAACC,KAAR,CAAcC,gBAA5C,CACIF,OAAO,CAACY,cAAR,CAAuBV,gBAD3B,EAOAF,OAAO,CAACC,KAAR,CAAcC,gBAAd,CAA+BW,SAA/B,CAAyCC,OAAzC,CAAmD,SAASC,CAAT,CAAmB,CACpE,MAAOf,CAAAA,OAAO,CAACC,KAAR,CAAcC,gBAAd,CAA+BC,WAA/B,CAA2CW,OAA3C,CAAmDT,IAAnD,CAAwD,IAAxD,CAA8DU,CAA9D,EACFC,MADE,CACK,CAGND,CAAQ,CAAG,6CAHL,CAINA,CAAQ,CAAG,6CAJL,CAKJ,iBAAmB,KAAKE,wBAAxB,CAAmD,GAL/C,CAMJ,eANI,CAON,GAPM,CADL,CAWR,CAZD","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An object that provides constants for rendering blocks in Geras\n * mode.\n * @author kozbial@google.com (Monica Kozbial)\n */\n'use strict';\n\ngoog.provide('Blockly.geras.ConstantProvider');\n\ngoog.require('Blockly.blockRendering.ConstantProvider');\ngoog.require('Blockly.utils.object');\n\n\n/**\n * An object that provides constants for rendering blocks in Geras mode.\n * @constructor\n * @package\n * @extends {Blockly.blockRendering.ConstantProvider}\n */\nBlockly.geras.ConstantProvider = function() {\n  Blockly.geras.ConstantProvider.superClass_.constructor.call(this);\n\n  /**\n   * @override\n   */\n  this.FIELD_TEXT_BASELINE_CENTER = false;\n\n  // The dark/shadow path in classic rendering is the same as the normal block\n  // path, but translated down one and right one.\n  this.DARK_PATH_OFFSET = 1;\n\n  /**\n   * The maximum width of a bottom row that follows a statement input and has\n   * inputs inline.\n   * @type {number}\n   */\n  this.MAX_BOTTOM_WIDTH = 30;\n};\nBlockly.utils.object.inherits(Blockly.geras.ConstantProvider,\n    Blockly.blockRendering.ConstantProvider);\n\n\n/**\n * @override\n */\nBlockly.geras.ConstantProvider.prototype.getCSS_ = function(selector) {\n  return Blockly.geras.ConstantProvider.superClass_.getCSS_.call(this, selector)\n      .concat([\n        /* eslint-disable indent */\n        // Insertion marker.\n        selector + ' .blocklyInsertionMarker>.blocklyPathLight,',\n        selector + ' .blocklyInsertionMarker>.blocklyPathDark {',\n          'fill-opacity: ' + this.INSERTION_MARKER_OPACITY + ';',\n          'stroke: none;',\n        '}',\n        /* eslint-enable indent */\n      ]);\n};\n"],"file":"constants.min.js"}