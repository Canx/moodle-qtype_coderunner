'use strict';goog.provide("Blockly.Workspace");goog.require("Blockly.Events");goog.require("Blockly.Options");goog.require("Blockly.utils");goog.require("Blockly.utils.math");goog.require("Blockly.VariableMap");goog.requireType("Blockly.IASTNodeLocation");Blockly.Workspace=function(a){this.id=Blockly.utils.genUid();Blockly.Workspace.WorkspaceDB_[this.id]=this;this.options=a||new Blockly.Options({});this.RTL=!!this.options.RTL;this.horizontalLayout=!!this.options.horizontalLayout;this.toolboxPosition=this.options.toolboxPosition;this.topBlocks_=[];this.topComments_=[];this.commentDB_=Object.create(null);this.listeners_=[];this.undoStack_=[];this.redoStack_=[];this.blockDB_=Object.create(null);this.typedBlocksDB_=Object.create(null);this.variableMap_=new Blockly.VariableMap(this);this.potentialVariableMap_=null};Blockly.Workspace.prototype.rendered=!1;Blockly.Workspace.prototype.isClearing=!1;Blockly.Workspace.prototype.MAX_UNDO=1024;Blockly.Workspace.prototype.connectionDBList=null;Blockly.Workspace.prototype.dispose=function(){this.listeners_.length=0;this.clear();delete Blockly.Workspace.WorkspaceDB_[this.id]};Blockly.Workspace.SCAN_ANGLE=3;Blockly.Workspace.prototype.sortObjects_=function(c,a){var b=c.getRelativeToSurfaceXY(),d=a.getRelativeToSurfaceXY();return b.y+Blockly.Workspace.prototype.sortObjects_.offset*b.x-(d.y+Blockly.Workspace.prototype.sortObjects_.offset*d.x)};Blockly.Workspace.prototype.addTopBlock=function(a){this.topBlocks_.push(a)};Blockly.Workspace.prototype.removeTopBlock=function(a){if(!Blockly.utils.arrayRemove(this.topBlocks_,a)){throw Error("Block not present in workspace's list of top-most blocks.")}};Blockly.Workspace.prototype.getTopBlocks=function(a){var b=[].concat(this.topBlocks_);if(a&&1<b.length){this.sortObjects_.offset=Math.sin(Blockly.utils.math.toRadians(Blockly.Workspace.SCAN_ANGLE));if(this.RTL){this.sortObjects_.offset*=-1}b.sort(this.sortObjects_)}return b};Blockly.Workspace.prototype.addTypedBlock=function(a){if(!this.typedBlocksDB_[a.type]){this.typedBlocksDB_[a.type]=[]}this.typedBlocksDB_[a.type].push(a)};Blockly.Workspace.prototype.removeTypedBlock=function(a){this.typedBlocksDB_[a.type].splice(this.typedBlocksDB_[a.type].indexOf(a),1);if(!this.typedBlocksDB_[a.type].length){delete this.typedBlocksDB_[a.type]}};Blockly.Workspace.prototype.getBlocksByType=function(a,b){if(!this.typedBlocksDB_[a]){return[]}var c=this.typedBlocksDB_[a].slice(0);if(b&&1<c.length){this.sortObjects_.offset=Math.sin(Blockly.utils.math.toRadians(Blockly.Workspace.SCAN_ANGLE));if(this.RTL){this.sortObjects_.offset*=-1}c.sort(this.sortObjects_)}return c};Blockly.Workspace.prototype.addTopComment=function(a){this.topComments_.push(a);if(this.commentDB_[a.id]){console.warn("Overriding an existing comment on this workspace, with id \""+a.id+"\"")}this.commentDB_[a.id]=a};Blockly.Workspace.prototype.removeTopComment=function(a){if(!Blockly.utils.arrayRemove(this.topComments_,a)){throw Error("Comment not present in workspace's list of top-most comments.")}delete this.commentDB_[a.id]};Blockly.Workspace.prototype.getTopComments=function(a){var b=[].concat(this.topComments_);if(a&&1<b.length){this.sortObjects_.offset=Math.sin(Blockly.utils.math.toRadians(Blockly.Workspace.SCAN_ANGLE));if(this.RTL){this.sortObjects_.offset*=-1}b.sort(this.sortObjects_)}return b};Blockly.Workspace.prototype.getAllBlocks=function(a){if(a){for(var b=this.getTopBlocks(!0),c=[],d=0;d<b.length;d++){c.push.apply(c,b[d].getDescendants(!0))}}else{for(var c=this.getTopBlocks(!1),d=0;d<c.length;d++){c.push.apply(c,c[d].getChildren(!1))}}var e=c.filter(function(a){return!a.isInsertionMarker()});return e};Blockly.Workspace.prototype.clear=function(){this.isClearing=!0;try{var a=Blockly.Events.getGroup();if(!a){Blockly.Events.setGroup(!0)}while(this.topBlocks_.length){this.topBlocks_[0].dispose(!1)}while(this.topComments_.length){this.topComments_[this.topComments_.length-1].dispose(!1)}if(!a){Blockly.Events.setGroup(!1)}this.variableMap_.clear();if(this.potentialVariableMap_){this.potentialVariableMap_.clear()}}finally{this.isClearing=!1}};Blockly.Workspace.prototype.renameVariableById=function(a,b){this.variableMap_.renameVariableById(a,b)};Blockly.Workspace.prototype.createVariable=function(a,b,c){return this.variableMap_.createVariable(a,b,c)};Blockly.Workspace.prototype.getVariableUsesById=function(a){return this.variableMap_.getVariableUsesById(a)};Blockly.Workspace.prototype.deleteVariableById=function(a){this.variableMap_.deleteVariableById(a)};Blockly.Workspace.prototype.variableIndexOf=function(){console.warn("Deprecated call to Blockly.Workspace.prototype.variableIndexOf");return-1};Blockly.Workspace.prototype.getVariable=function(a,b){return this.variableMap_.getVariable(a,b)};Blockly.Workspace.prototype.getVariableById=function(a){return this.variableMap_.getVariableById(a)};Blockly.Workspace.prototype.getVariablesOfType=function(a){return this.variableMap_.getVariablesOfType(a)};Blockly.Workspace.prototype.getVariableTypes=function(){return this.variableMap_.getVariableTypes(this)};Blockly.Workspace.prototype.getAllVariables=function(){return this.variableMap_.getAllVariables()};Blockly.Workspace.prototype.getAllVariableNames=function(){return this.variableMap_.getAllVariableNames()};Blockly.Workspace.prototype.getWidth=function(){return 0};Blockly.Workspace.prototype.newBlock=function(a,b){return new Blockly.Block(this,a,b)};Blockly.Workspace.prototype.remainingCapacity=function(){if(isNaN(this.options.maxBlocks)){return 1/0}return this.options.maxBlocks-this.getAllBlocks(!1).length};Blockly.Workspace.prototype.remainingCapacityOfType=function(a){if(!this.options.maxInstances){return 1/0}var b=this.options.maxInstances[a]!==void 0?this.options.maxInstances[a]:1/0;return b-this.getBlocksByType(a,!1).length};Blockly.Workspace.prototype.isCapacityAvailable=function(a){if(!this.hasBlockLimits()){return!0}var b=0;for(var c in a){if(a[c]>this.remainingCapacityOfType(c)){return!1}b+=a[c]}if(b>this.remainingCapacity()){return!1}return!0};Blockly.Workspace.prototype.hasBlockLimits=function(){return this.options.maxBlocks!=1/0||!!this.options.maxInstances};Blockly.Workspace.prototype.undo=function(a){var b=a?this.redoStack_:this.undoStack_,c=a?this.undoStack_:this.redoStack_,d=b.pop();if(!d){return}var e=[d];while(b.length&&d.group&&d.group==b[b.length-1].group){e.push(b.pop())}for(var f=0,g;g=e[f];f++){c.push(g)}e=Blockly.Events.filter(e,a);Blockly.Events.recordUndo=!1;try{for(var f=0,g;g=e[f];f++){g.run(a)}}finally{Blockly.Events.recordUndo=!0}};Blockly.Workspace.prototype.clearUndo=function(){this.undoStack_.length=0;this.redoStack_.length=0;Blockly.Events.clearPendingUndo()};Blockly.Workspace.prototype.addChangeListener=function(a){this.listeners_.push(a);return a};Blockly.Workspace.prototype.removeChangeListener=function(a){Blockly.utils.arrayRemove(this.listeners_,a)};Blockly.Workspace.prototype.fireChangeListener=function(a){if(a.recordUndo){this.undoStack_.push(a);this.redoStack_.length=0;while(this.undoStack_.length>this.MAX_UNDO&&0<=this.MAX_UNDO){this.undoStack_.shift()}}for(var b=0,c;c=this.listeners_[b];b++){c(a)}};Blockly.Workspace.prototype.getBlockById=function(a){return this.blockDB_[a]||null};Blockly.Workspace.prototype.setBlockById=function(a,b){this.blockDB_[a]=b};Blockly.Workspace.prototype.removeBlockById=function(a){delete this.blockDB_[a]};Blockly.Workspace.prototype.getCommentById=function(a){return this.commentDB_[a]||null};Blockly.Workspace.prototype.allInputsFilled=function(a){for(var b=this.getTopBlocks(!1),c=0,d;d=b[c];c++){if(!d.allInputsFilled(a)){return!1}}return!0};Blockly.Workspace.prototype.getPotentialVariableMap=function(){return this.potentialVariableMap_};Blockly.Workspace.prototype.createPotentialVariableMap=function(){this.potentialVariableMap_=new Blockly.VariableMap(this)};Blockly.Workspace.prototype.getVariableMap=function(){return this.variableMap_};Blockly.Workspace.prototype.setVariableMap=function(a){this.variableMap_=a};Blockly.Workspace.WorkspaceDB_=Object.create(null);Blockly.Workspace.getById=function(a){return Blockly.Workspace.WorkspaceDB_[a]||null};Blockly.Workspace.getAll=function(){var a=[];for(var b in Blockly.Workspace.WorkspaceDB_){a.push(Blockly.Workspace.WorkspaceDB_[b])}return a};
//# sourceMappingURL=workspace.min.js.map
