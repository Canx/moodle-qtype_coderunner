{"version":3,"sources":["../../../src/blockly/core/utils.js"],"names":["goog","provide","require","Blockly","utils","noEvent","e","preventDefault","stopPropagation","isTargetInput","target","type","isContentEditable","getRelativeXY","element","xy","Coordinate","x","getAttribute","parseInt","y","transform","r","match","XY_REGEX_","style","indexOf","styleComponents","XY_STYLE_REGEX_","getInjectionDivXY_","classes","parentNode","isRightButton","ctrlKey","userAgent","MAC","button","mouseToSvg","svg","matrix","svgPoint","createSVGPoint","clientX","clientY","getScreenCTM","inverse","matrixTransform","getScrollDeltaPixels","deltaMode","deltaX","deltaY","LINE_MODE_MULTIPLIER","PAGE_MODE_MULTIPLIER","tokenizeInterpolation","message","tokenizeInterpolation_","replaceMessageReferences","interpolatedResult","length","checkMessageReferences","validSoFar","msgTable","Msg","m","i","msgKey","toUpperCase","slice","console","log","parseInterpolationTokens","tokens","chars","split","push","state","buffer","number","c","text","join","splice","rawKey","test","keyUpper","bklyKey","string","startsWith","substring","rawValue","Array","prototype","apply","mergedTokens","genUid","soupLength","soup_","id","charAt","Math","random","is3dSupported","cached_","global","getComputedStyle","el","document","createElement","has3d","transforms","body","insertBefore","t","computedStyle","removeChild","getPropertyValue","runAfterPageLoad","fn","Error","readyState","readyStateCheckInterval","setInterval","clearInterval","getViewportBBox","scrollOffset","getViewportPageOffset","Rect","documentElement","clientHeight","clientWidth","arrayRemove","arr","obj","getDocumentScroll","win","window","IE","pageYOffset","scrollTop","scrollLeft","pageXOffset","getBlockTypeCounts","block","opt_stripFollowing","typeCountsMap","Object","create","descendants","getDescendants","nextBlock","getNextBlock","index","checkBlock","screenToWsCoordinates","ws","screenCoordinates","screenX","screenY","injectionDiv","getInjectionDiv","boundingRect","getBoundingClientRect","clientOffsetPixels","left","top","mainOffsetPixels","getOriginOffsetInPixels","finalOffsetPixels","difference","finalOffsetMainWs","scale","parseBlockColour","colour","dereferenced","hue","isNaN","hex","hsvToHex","HSV_SATURATION","HSV_VALUE","parse","errorMsg"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utility methods.\n * These methods are not specific to Blockly, and could be factored out into\n * a JavaScript framework such as Closure.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\n/**\n * @name Blockly.utils\n * @namespace\n */\ngoog.provide('Blockly.utils');\n\ngoog.require('Blockly.Msg');\ngoog.require('Blockly.constants');\ngoog.require('Blockly.utils.colour');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.global');\ngoog.require('Blockly.utils.Rect');\ngoog.require('Blockly.utils.string');\ngoog.require('Blockly.utils.style');\ngoog.require('Blockly.utils.userAgent');\n\n\n/**\n * Don't do anything for this event, just halt propagation.\n * @param {!Event} e An event.\n */\nBlockly.utils.noEvent = function(e) {\n  // This event has been handled.  No need to bubble up to the document.\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n/**\n * Is this event targeting a text input widget?\n * @param {!Event} e An event.\n * @return {boolean} True if text input.\n */\nBlockly.utils.isTargetInput = function(e) {\n  return e.target.type == 'textarea' || e.target.type == 'text' ||\n         e.target.type == 'number' || e.target.type == 'email' ||\n         e.target.type == 'password' || e.target.type == 'search' ||\n         e.target.type == 'tel' || e.target.type == 'url' ||\n         e.target.isContentEditable;\n};\n\n/**\n * Return the coordinates of the top-left corner of this element relative to\n * its parent.  Only for SVG elements and children (e.g. rect, g, path).\n * @param {!Element} element SVG element to find the coordinates of.\n * @return {!Blockly.utils.Coordinate} Object with .x and .y properties.\n */\nBlockly.utils.getRelativeXY = function(element) {\n  var xy = new Blockly.utils.Coordinate(0, 0);\n  // First, check for x and y attributes.\n  var x = element.getAttribute('x');\n  if (x) {\n    xy.x = parseInt(x, 10);\n  }\n  var y = element.getAttribute('y');\n  if (y) {\n    xy.y = parseInt(y, 10);\n  }\n  // Second, check for transform=\"translate(...)\" attribute.\n  var transform = element.getAttribute('transform');\n  var r = transform && transform.match(Blockly.utils.getRelativeXY.XY_REGEX_);\n  if (r) {\n    xy.x += Number(r[1]);\n    if (r[3]) {\n      xy.y += Number(r[3]);\n    }\n  }\n\n  // Then check for style = transform: translate(...) or translate3d(...)\n  var style = element.getAttribute('style');\n  if (style && style.indexOf('translate') > -1) {\n    var styleComponents =\n        style.match(Blockly.utils.getRelativeXY.XY_STYLE_REGEX_);\n    if (styleComponents) {\n      xy.x += Number(styleComponents[1]);\n      if (styleComponents[3]) {\n        xy.y += Number(styleComponents[3]);\n      }\n    }\n  }\n  return xy;\n};\n\n/**\n * Return the coordinates of the top-left corner of this element relative to\n * the div Blockly was injected into.\n * @param {!Element} element SVG element to find the coordinates of. If this is\n *     not a child of the div Blockly was injected into, the behaviour is\n *     undefined.\n * @return {!Blockly.utils.Coordinate} Object with .x and .y properties.\n */\nBlockly.utils.getInjectionDivXY_ = function(element) {\n  var x = 0;\n  var y = 0;\n  while (element) {\n    var xy = Blockly.utils.getRelativeXY(element);\n    x = x + xy.x;\n    y = y + xy.y;\n    var classes = element.getAttribute('class') || '';\n    if ((' ' + classes + ' ').indexOf(' injectionDiv ') != -1) {\n      break;\n    }\n    element = /** @type {!Element} */ (element.parentNode);\n  }\n  return new Blockly.utils.Coordinate(x, y);\n};\n\n/**\n * Static regex to pull the x,y values out of an SVG translate() directive.\n * Note that Firefox and IE (9,10) return 'translate(12)' instead of\n * 'translate(12, 0)'.\n * Note that IE (9,10) returns 'translate(16 8)' instead of 'translate(16, 8)'.\n * Note that IE has been reported to return scientific notation (0.123456e-42).\n * @type {!RegExp}\n * @private\n */\nBlockly.utils.getRelativeXY.XY_REGEX_ =\n    /translate\\(\\s*([-+\\d.e]+)([ ,]\\s*([-+\\d.e]+)\\s*)?/;\n\n/**\n * Static regex to pull the x,y values out of a translate() or translate3d()\n * style property.\n * Accounts for same exceptions as XY_REGEX_.\n * @type {!RegExp}\n * @private\n */\nBlockly.utils.getRelativeXY.XY_STYLE_REGEX_ =\n    /transform:\\s*translate(?:3d)?\\(\\s*([-+\\d.e]+)\\s*px([ ,]\\s*([-+\\d.e]+)\\s*px)?/;\n\n/**\n * Is this event a right-click?\n * @param {!Event} e Mouse event.\n * @return {boolean} True if right-click.\n */\nBlockly.utils.isRightButton = function(e) {\n  if (e.ctrlKey && Blockly.utils.userAgent.MAC) {\n    // Control-clicking on Mac OS X is treated as a right-click.\n    // WebKit on Mac OS X fails to change button to 2 (but Gecko does).\n    return true;\n  }\n  return e.button == 2;\n};\n\n/**\n * Return the converted coordinates of the given mouse event.\n * The origin (0,0) is the top-left corner of the Blockly SVG.\n * @param {!Event} e Mouse event.\n * @param {!Element} svg SVG element.\n * @param {SVGMatrix} matrix Inverted screen CTM to use.\n * @return {!SVGPoint} Object with .x and .y properties.\n */\nBlockly.utils.mouseToSvg = function(e, svg, matrix) {\n  var svgPoint = svg.createSVGPoint();\n  svgPoint.x = e.clientX;\n  svgPoint.y = e.clientY;\n\n  if (!matrix) {\n    matrix = svg.getScreenCTM().inverse();\n  }\n  return svgPoint.matrixTransform(matrix);\n};\n\n/**\n * Get the scroll delta of a mouse event in pixel units.\n * @param {!Event} e Mouse event.\n * @return {{x: number, y: number}} Scroll delta object with .x and .y\n *    properties.\n */\nBlockly.utils.getScrollDeltaPixels = function(e) {\n  switch (e.deltaMode) {\n    case 0x00:  // Pixel mode.\n    default:\n      return {\n        x: e.deltaX,\n        y: e.deltaY\n      };\n    case 0x01:  // Line mode.\n      return {\n        x: e.deltaX * Blockly.LINE_MODE_MULTIPLIER,\n        y: e.deltaY * Blockly.LINE_MODE_MULTIPLIER\n      };\n    case 0x02:  // Page mode.\n      return {\n        x: e.deltaX * Blockly.PAGE_MODE_MULTIPLIER,\n        y: e.deltaY * Blockly.PAGE_MODE_MULTIPLIER\n      };\n  }\n};\n\n/**\n * Parse a string with any number of interpolation tokens (%1, %2, ...).\n * It will also replace string table references (e.g., %{bky_my_msg} and\n * %{BKY_MY_MSG} will both be replaced with the value in\n * Blockly.Msg['MY_MSG']). Percentage sign characters '%' may be self-escaped\n * (e.g., '%%').\n * @param {string} message Text which might contain string table references and\n *     interpolation tokens.\n * @return {!Array.<string|number>} Array of strings and numbers.\n */\nBlockly.utils.tokenizeInterpolation = function(message) {\n  return Blockly.utils.tokenizeInterpolation_(message, true);\n};\n\n/**\n * Replaces string table references in a message, if the message is a string.\n * For example, \"%{bky_my_msg}\" and \"%{BKY_MY_MSG}\" will both be replaced with\n * the value in Blockly.Msg['MY_MSG'].\n * @param {string|?} message Message, which may be a string that contains\n *     string table references.\n * @return {string} String with message references replaced.\n */\nBlockly.utils.replaceMessageReferences = function(message) {\n  if (typeof message != 'string') {\n    return message;\n  }\n  var interpolatedResult = Blockly.utils.tokenizeInterpolation_(message, false);\n  // When parseInterpolationTokens == false, interpolatedResult should be at\n  // most length 1.\n  return interpolatedResult.length ? String(interpolatedResult[0]) : '';\n};\n\n/**\n * Validates that any %{MSG_KEY} references in the message refer to keys of\n * the Blockly.Msg string table.\n * @param {string} message Text which might contain string table references.\n * @return {boolean} True if all message references have matching values.\n *     Otherwise, false.\n */\nBlockly.utils.checkMessageReferences = function(message) {\n  var validSoFar = true;\n\n  var msgTable = Blockly.Msg;\n\n  // TODO (#1169): Implement support for other string tables,\n  // prefixes other than BKY_.\n  var m = message.match(/%{BKY_[A-Z]\\w*}/ig);\n  for (var i = 0; i < m.length; i++) {\n    var msgKey = m[i].toUpperCase();\n    if (msgTable[msgKey.slice(6, -1)] == undefined) {\n      console.log('WARNING: No message string for ' + m[i] + ' in ' + message);\n      validSoFar = false;  // Continue to report other errors.\n    }\n  }\n\n  return validSoFar;\n};\n\n/**\n * Internal implementation of the message reference and interpolation token\n * parsing used by tokenizeInterpolation() and replaceMessageReferences().\n * @param {string} message Text which might contain string table references and\n *     interpolation tokens.\n * @param {boolean} parseInterpolationTokens Option to parse numeric\n *     interpolation tokens (%1, %2, ...) when true.\n * @return {!Array.<string|number>} Array of strings and numbers.\n * @private\n */\nBlockly.utils.tokenizeInterpolation_ = function(message,\n    parseInterpolationTokens) {\n  var tokens = [];\n  var chars = message.split('');\n  chars.push('');  // End marker.\n  // Parse the message with a finite state machine.\n  // 0 - Base case.\n  // 1 - % found.\n  // 2 - Digit found.\n  // 3 - Message ref found.\n  var state = 0;\n  var buffer = [];\n  var number = null;\n  for (var i = 0; i < chars.length; i++) {\n    var c = chars[i];\n    if (state == 0) {\n      if (c == '%') {\n        var text = buffer.join('');\n        if (text) {\n          tokens.push(text);\n        }\n        buffer.length = 0;\n        state = 1;  // Start escape.\n      } else {\n        buffer.push(c);  // Regular char.\n      }\n    } else if (state == 1) {\n      if (c == '%') {\n        buffer.push(c);  // Escaped %: %%\n        state = 0;\n      } else if (parseInterpolationTokens && '0' <= c && c <= '9') {\n        state = 2;\n        number = c;\n        var text = buffer.join('');\n        if (text) {\n          tokens.push(text);\n        }\n        buffer.length = 0;\n      } else if (c == '{') {\n        state = 3;\n      } else {\n        buffer.push('%', c);  // Not recognized. Return as literal.\n        state = 0;\n      }\n    } else if (state == 2) {\n      if ('0' <= c && c <= '9') {\n        number += c;  // Multi-digit number.\n      } else {\n        tokens.push(parseInt(number, 10));\n        i--;  // Parse this char again.\n        state = 0;\n      }\n    } else if (state == 3) {  // String table reference\n      if (c == '') {\n        // Premature end before closing '}'\n        buffer.splice(0, 0, '%{');  // Re-insert leading delimiter\n        i--;  // Parse this char again.\n        state = 0;  // and parse as string literal.\n      } else if (c != '}') {\n        buffer.push(c);\n      } else {\n        var rawKey = buffer.join('');\n        if (/[A-Z]\\w*/i.test(rawKey)) {  // Strict matching\n          // Found a valid string key. Attempt case insensitive match.\n          var keyUpper = rawKey.toUpperCase();\n\n          // BKY_ is the prefix used to namespace the strings used in Blockly\n          // core files and the predefined blocks in ../blocks/.\n          // These strings are defined in ../msgs/ files.\n          var bklyKey = Blockly.utils.string.startsWith(keyUpper, 'BKY_') ?\n              keyUpper.substring(4) : null;\n          if (bklyKey && bklyKey in Blockly.Msg) {\n            var rawValue = Blockly.Msg[bklyKey];\n            if (typeof rawValue == 'string') {\n              // Attempt to dereference substrings, too, appending to the end.\n              Array.prototype.push.apply(tokens,\n                  Blockly.utils.tokenizeInterpolation_(\n                      rawValue, parseInterpolationTokens));\n            } else if (parseInterpolationTokens) {\n              // When parsing interpolation tokens, numbers are special\n              // placeholders (%1, %2, etc). Make sure all other values are\n              // strings.\n              tokens.push(String(rawValue));\n            } else {\n              tokens.push(rawValue);\n            }\n          } else {\n            // No entry found in the string table. Pass reference as string.\n            tokens.push('%{' + rawKey + '}');\n          }\n          buffer.length = 0;  // Clear the array\n          state = 0;\n        } else {\n          tokens.push('%{' + rawKey + '}');\n          buffer.length = 0;\n          state = 0;  // and parse as string literal.\n        }\n      }\n    }\n  }\n  var text = buffer.join('');\n  if (text) {\n    tokens.push(text);\n  }\n\n  // Merge adjacent text tokens into a single string.\n  var mergedTokens = [];\n  buffer.length = 0;\n  for (var i = 0; i < tokens.length; ++i) {\n    if (typeof tokens[i] == 'string') {\n      buffer.push(tokens[i]);\n    } else {\n      text = buffer.join('');\n      if (text) {\n        mergedTokens.push(text);\n      }\n      buffer.length = 0;\n      mergedTokens.push(tokens[i]);\n    }\n  }\n  text = buffer.join('');\n  if (text) {\n    mergedTokens.push(text);\n  }\n  buffer.length = 0;\n\n  return mergedTokens;\n};\n\n/**\n * Generate a unique ID.  This should be globally unique.\n * 87 characters ^ 20 length > 128 bits (better than a UUID).\n * @return {string} A globally unique ID string.\n */\nBlockly.utils.genUid = function() {\n  var length = 20;\n  var soupLength = Blockly.utils.genUid.soup_.length;\n  var id = [];\n  for (var i = 0; i < length; i++) {\n    id[i] = Blockly.utils.genUid.soup_.charAt(Math.random() * soupLength);\n  }\n  return id.join('');\n};\n\n/**\n * Legal characters for the unique ID.  Should be all on a US keyboard.\n * No characters that conflict with XML or JSON.  Requests to remove additional\n * 'problematic' characters from this soup will be denied.  That's your failure\n * to properly escape in your own environment.  Issues #251, #625, #682, #1304.\n * @private\n */\nBlockly.utils.genUid.soup_ = '!#$%()*+,-./:;=?@[]^_`{|}~' +\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n/**\n * Check if 3D transforms are supported by adding an element\n * and attempting to set the property.\n * @return {boolean} True if 3D transforms are supported.\n */\nBlockly.utils.is3dSupported = function() {\n  if (Blockly.utils.is3dSupported.cached_ !== undefined) {\n    return Blockly.utils.is3dSupported.cached_;\n  }\n  // CC-BY-SA Lorenzo Polidori\n  // stackoverflow.com/questions/5661671/detecting-transform-translate3d-support\n  if (!Blockly.utils.global.getComputedStyle) {\n    return false;\n  }\n\n  var el = document.createElement('p');\n  var has3d = 'none';\n  var transforms = {\n    'webkitTransform': '-webkit-transform',\n    'OTransform': '-o-transform',\n    'msTransform': '-ms-transform',\n    'MozTransform': '-moz-transform',\n    'transform': 'transform'\n  };\n\n  // Add it to the body to get the computed style.\n  document.body.insertBefore(el, null);\n\n  for (var t in transforms) {\n    if (el.style[t] !== undefined) {\n      el.style[t] = 'translate3d(1px,1px,1px)';\n      var computedStyle = Blockly.utils.global.getComputedStyle(el);\n      if (!computedStyle) {\n        // getComputedStyle in Firefox returns null when Blockly is loaded\n        // inside an iframe with display: none.  Returning false and not\n        // caching is3dSupported means we try again later.  This is most likely\n        // when users are interacting with blocks which should mean Blockly is\n        // visible again.\n        // See https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        document.body.removeChild(el);\n        return false;\n      }\n      has3d = computedStyle.getPropertyValue(transforms[t]);\n    }\n  }\n  document.body.removeChild(el);\n  Blockly.utils.is3dSupported.cached_ = has3d !== 'none';\n  return Blockly.utils.is3dSupported.cached_;\n};\n\n/**\n * Calls a function after the page has loaded, possibly immediately.\n * @param {function()} fn Function to run.\n * @throws Error Will throw if no global document can be found (e.g., Node.js).\n */\nBlockly.utils.runAfterPageLoad = function(fn) {\n  if (typeof document != 'object') {\n    throw Error('Blockly.utils.runAfterPageLoad() requires browser document.');\n  }\n  if (document.readyState == 'complete') {\n    fn();  // Page has already loaded. Call immediately.\n  } else {\n    // Poll readyState.\n    var readyStateCheckInterval = setInterval(function() {\n      if (document.readyState == 'complete') {\n        clearInterval(readyStateCheckInterval);\n        fn();\n      }\n    }, 10);\n  }\n};\n\n/**\n * Get the position of the current viewport in window coordinates.  This takes\n * scroll into account.\n * @return {!Blockly.utils.Rect} An object containing window width, height, and\n *     scroll position in window coordinates.\n * @package\n */\nBlockly.utils.getViewportBBox = function() {\n  // Pixels, in window coordinates.\n  var scrollOffset = Blockly.utils.style.getViewportPageOffset();\n  return new Blockly.utils.Rect(\n      scrollOffset.y,\n      document.documentElement.clientHeight + scrollOffset.y,\n      scrollOffset.x,\n      document.documentElement.clientWidth + scrollOffset.x\n  );\n};\n\n/**\n * Removes the first occurrence of a particular value from an array.\n * @param {!Array} arr Array from which to remove\n *     value.\n * @param {*} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @package\n */\nBlockly.utils.arrayRemove = function(arr, obj) {\n  var i = arr.indexOf(obj);\n  if (i == -1) {\n    return false;\n  }\n  arr.splice(i, 1);\n  return true;\n};\n\n/**\n * Gets the document scroll distance as a coordinate object.\n * Copied from Closure's goog.dom.getDocumentScroll.\n * @return {!Blockly.utils.Coordinate} Object with values 'x' and 'y'.\n */\nBlockly.utils.getDocumentScroll = function() {\n  var el = document.documentElement;\n  var win = window;\n  if (Blockly.utils.userAgent.IE && win.pageYOffset != el.scrollTop) {\n    // The keyboard on IE10 touch devices shifts the page using the pageYOffset\n    // without modifying scrollTop. For this case, we want the body scroll\n    // offsets.\n    return new Blockly.utils.Coordinate(el.scrollLeft, el.scrollTop);\n  }\n  return new Blockly.utils.Coordinate(\n      win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\n\n/**\n * Get a map of all the block's descendants mapping their type to the number of\n *    children with that type.\n * @param {!Blockly.Block} block The block to map.\n * @param {boolean=} opt_stripFollowing Optionally ignore all following\n *    statements (blocks that are not inside a value or statement input\n *    of the block).\n * @return {!Object} Map of types to type counts for descendants of the bock.\n */\nBlockly.utils.getBlockTypeCounts = function(block, opt_stripFollowing) {\n  var typeCountsMap = Object.create(null);\n  var descendants = block.getDescendants(true);\n  if (opt_stripFollowing) {\n    var nextBlock = block.getNextBlock();\n    if (nextBlock) {\n      var index = descendants.indexOf(nextBlock);\n      descendants.splice(index, descendants.length - index);\n    }\n  }\n  for (var i = 0, checkBlock; (checkBlock = descendants[i]); i++) {\n    if (typeCountsMap[checkBlock.type]) {\n      typeCountsMap[checkBlock.type]++;\n    } else {\n      typeCountsMap[checkBlock.type] = 1;\n    }\n  }\n  return typeCountsMap;\n};\n\n/**\n * Converts screen coordinates to workspace coordinates.\n * @param {Blockly.WorkspaceSvg} ws The workspace to find the coordinates on.\n * @param {Blockly.utils.Coordinate} screenCoordinates The screen coordinates to\n * be converted to workspace coordinates\n * @return {Blockly.utils.Coordinate} The workspace coordinates.\n * @package\n */\nBlockly.utils.screenToWsCoordinates = function(ws, screenCoordinates) {\n  var screenX = screenCoordinates.x;\n  var screenY = screenCoordinates.y;\n\n  var injectionDiv = ws.getInjectionDiv();\n  // Bounding rect coordinates are in client coordinates, meaning that they\n  // are in pixels relative to the upper left corner of the visible browser\n  // window.  These coordinates change when you scroll the browser window.\n  var boundingRect = injectionDiv.getBoundingClientRect();\n\n  // The client coordinates offset by the injection div's upper left corner.\n  var clientOffsetPixels = new Blockly.utils.Coordinate(\n      screenX - boundingRect.left, screenY - boundingRect.top);\n\n  // The offset in pixels between the main workspace's origin and the upper\n  // left corner of the injection div.\n  var mainOffsetPixels = ws.getOriginOffsetInPixels();\n\n  // The position of the new comment in pixels relative to the origin of the\n  // main workspace.\n  var finalOffsetPixels = Blockly.utils.Coordinate.difference(\n      clientOffsetPixels, mainOffsetPixels);\n\n  // The position in main workspace coordinates.\n  var finalOffsetMainWs = finalOffsetPixels.scale(1 / ws.scale);\n  return finalOffsetMainWs;\n};\n\n/**\n * Parse a block colour from a number or string, as provided in a block\n * definition.\n * @param {number|string} colour HSV hue value (0 to 360), #RRGGBB string,\n *     or a message reference string pointing to one of those two values.\n * @return {{hue: ?number, hex: string}} An object containing the colour as\n *     a #RRGGBB string, and the hue if the input was an HSV hue value.\n * @throws {Error} If the colour cannot be parsed.\n */\nBlockly.utils.parseBlockColour = function(colour) {\n  var dereferenced = (typeof colour == 'string') ?\n      Blockly.utils.replaceMessageReferences(colour) : colour;\n\n  var hue = Number(dereferenced);\n  if (!isNaN(hue) && 0 <= hue && hue <= 360) {\n    return {\n      hue: hue,\n      hex: Blockly.utils.colour.hsvToHex(hue, Blockly.HSV_SATURATION,\n          Blockly.HSV_VALUE * 255)\n    };\n  } else {\n    var hex = Blockly.utils.colour.parse(dereferenced);\n    if (hex) {\n      // Only store hue if colour is set as a hue.\n      return {\n        hue: null,\n        hex: hex\n      };\n    } else {\n      var errorMsg = 'Invalid colour: \"' + dereferenced + '\"';\n      if (colour != dereferenced) {\n        errorMsg += ' (from \"' + colour + '\")';\n      }\n      throw Error(errorMsg);\n    }\n  }\n};\n"],"file":"utils.min.js"}