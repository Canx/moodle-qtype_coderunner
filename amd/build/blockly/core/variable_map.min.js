'use strict';goog.provide("Blockly.VariableMap");goog.require("Blockly.Events");goog.require("Blockly.Events.VarDelete");goog.require("Blockly.Events.VarRename");goog.require("Blockly.Msg");goog.require("Blockly.utils");goog.require("Blockly.utils.object");Blockly.VariableMap=function(a){this.variableMap_=Object.create(null);this.workspace=a};Blockly.VariableMap.prototype.clear=function(){this.variableMap_=Object.create(null)};Blockly.VariableMap.prototype.renameVariable=function(a,b){var c=a.type,d=this.getVariable(b,c),e=this.workspace.getAllBlocks(!1);Blockly.Events.setGroup(!0);try{if(!d||d.getId()==a.getId()){this.renameVariableAndUses_(a,b,e)}else{this.renameVariableWithConflict_(a,b,d,e)}}finally{Blockly.Events.setGroup(!1)}};Blockly.VariableMap.prototype.renameVariableById=function(a,b){var c=this.getVariableById(a);if(!c){throw Error("Tried to rename a variable that didn't exist. ID: "+a)}this.renameVariable(c,b)};Blockly.VariableMap.prototype.renameVariableAndUses_=function(a,b,c){Blockly.Events.fire(new Blockly.Events.VarRename(a,b));a.name=b;for(var d=0;d<c.length;d++){c[d].updateVarName(a)}};Blockly.VariableMap.prototype.renameVariableWithConflict_=function(a,b,c,d){var e=a.type,f=c.name;if(b!=f){this.renameVariableAndUses_(c,b,d)}for(var g=0;g<d.length;g++){d[g].renameVarById(a.getId(),c.getId())}Blockly.Events.fire(new Blockly.Events.VarDelete(a));var h=this.getVariablesOfType(e),j=h.indexOf(a);this.variableMap_[e].splice(j,1)};Blockly.VariableMap.prototype.createVariable=function(a,b,c){var d=this.getVariable(a,b);if(d){if(c&&d.getId()!=c){throw Error("Variable \""+a+"\" is already in use and its id is \""+d.getId()+"\" which conflicts with the passed in id, \""+c+"\".")}return d}if(c&&this.getVariableById(c)){throw Error("Variable id, \""+c+"\", is already in use.")}var e=c||Blockly.utils.genUid(),f=b||"";d=new Blockly.VariableModel(this.workspace,a,f,e);var g=this.variableMap_[f]||[];g.push(d);delete this.variableMap_[f];this.variableMap_[f]=g;return d};Blockly.VariableMap.prototype.deleteVariable=function(a){for(var b=this.variableMap_[a.type],c=0,d;d=b[c];c++){if(d.getId()==a.getId()){b.splice(c,1);Blockly.Events.fire(new Blockly.Events.VarDelete(a));return}}};Blockly.VariableMap.prototype.deleteVariableById=function(a){var b=this.getVariableById(a);if(b){for(var c=b.name,d=this.getVariableUsesById(a),e=0,f;f=d[e];e++){if("procedures_defnoreturn"==f.type||"procedures_defreturn"==f.type){var g=f.getFieldValue("NAME"),h=Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE.replace("%1",c).replace("%2",g);Blockly.alert(h);return}}var j=this;if(1<d.length){var k=Blockly.Msg.DELETE_VARIABLE_CONFIRMATION.replace("%1",d.length+"").replace("%2",c);Blockly.confirm(k,function(a){if(a&&b){j.deleteVariableInternal(b,d)}})}else{j.deleteVariableInternal(b,d)}}else{console.warn("Can't delete non-existent variable: "+a)}};Blockly.VariableMap.prototype.deleteVariableInternal=function(a,b){var c=Blockly.Events.getGroup();if(!c){Blockly.Events.setGroup(!0)}try{for(var d=0;d<b.length;d++){b[d].dispose(!0)}this.deleteVariable(a)}finally{if(!c){Blockly.Events.setGroup(!1)}}};Blockly.VariableMap.prototype.getVariable=function(a,b){var c=this.variableMap_[b||""];if(c){for(var d=0,e;e=c[d];d++){if(Blockly.Names.equals(e.name,a)){return e}}}return null};Blockly.VariableMap.prototype.getVariableById=function(a){for(var b=Object.keys(this.variableMap_),c=0,d;c<b.length;c++){d=b[c];for(var e=0,f;f=this.variableMap_[d][e];e++){if(f.getId()==a){return f}}}return null};Blockly.VariableMap.prototype.getVariablesOfType=function(a){a=a||"";var b=this.variableMap_[a];if(b){return b.slice()}return[]};Blockly.VariableMap.prototype.getVariableTypes=function(a){var b={};Blockly.utils.object.mixin(b,this.variableMap_);if(a&&a.getPotentialVariableMap()){Blockly.utils.object.mixin(b,a.getPotentialVariableMap().variableMap_)}for(var c=Object.keys(b),d=!1,e=0;e<c.length;e++){if(""==c[e]){d=!0}}if(!d){c.push("")}return c};Blockly.VariableMap.prototype.getAllVariables=function(){var a=[];for(var b in this.variableMap_){a=a.concat(this.variableMap_[b])}return a};Blockly.VariableMap.prototype.getAllVariableNames=function(){var a=[];for(var b in this.variableMap_){for(var c=this.variableMap_[b],d=0,e;e=c[d];d++){a.push(e.name)}}return a};Blockly.VariableMap.prototype.getVariableUsesById=function(a){for(var b=[],c=this.workspace.getAllBlocks(!1),d=0,e;d<c.length;d++){e=c[d].getVarModels();if(e){for(var f=0;f<e.length;f++){if(e[f].getId()==a){b.push(c[d])}}}}return b};
//# sourceMappingURL=variable_map.min.js.map
