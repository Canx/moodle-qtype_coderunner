{"version":3,"sources":["../../../src/blockly/core/gesture.js"],"names":["goog","provide","require","Blockly","Gesture","e","creatorWorkspace","mouseDownXY_","currentDragDeltaXY_","utils","Coordinate","startBubble_","startField_","startBlock_","targetBlock_","startWorkspace_","creatorWorkspace_","hasExceededDragRadius_","isDraggingWorkspace_","isDraggingBlock_","isDraggingBubble_","mostRecentEvent_","onMoveWrapper_","onUpWrapper_","bubbleDragger_","blockDragger_","workspaceDragger_","flyout_","calledUpdateIsDragging_","hasStarted_","isEnding_","healStack_","DRAG_STACK","prototype","dispose","Touch","clearTouchIdentifier","Tooltip","unblock","clearGesture","unbindEvent_","updateFromEvent_","currentXY","clientX","clientY","changed","updateDragDelta_","updateIsDragging_","longStop_","difference","currentDragDelta","magnitude","limitRadius","FLYOUT_DRAG_RADIUS","DRAG_RADIUS","updateIsDraggingFromFlyout_","isBlockCreatable_","isScrollable","isDragTowardWorkspace","targetWorkspace","updateScreenCalculationsIfScrolled","Events","getGroup","setGroup","createBlock","select","updateIsDraggingBubble_","startDraggingBubble_","updateIsDraggingBlock_","isMovable","startDraggingBlock_","updateIsDraggingWorkspace_","wsMovable","isDraggable","FlyoutDragger","WorkspaceDragger","startDrag","Error","BlockDragger","startBlockDrag","dragBlock","BubbleDragger","startBubbleDrag","dragBubble","doStart","isTargetInput","cancel","blockAnimations","disconnectUiStop","isMutator","resize","hideChaff","markFocused","block","isInFlyout","shiftKey","workspace","keyboardAccessibilityMode","getCursor","setCurNode","ASTNode","createTopNode","isRightButton","handleRightClick","type","toLowerCase","pointerType","longStart","altKey","ctrlKey","metaKey","bindMouseEvents","bindEventWithChecks_","document","handleMove","bind","handleUp","preventDefault","stopPropagation","drag","console","log","endBubbleDrag","endBlockDrag","endDrag","isBubbleClick_","doBubbleClick_","isFieldClick_","doFieldClick_","isBlockClick_","doBlockClick_","isWorkspaceClick_","doWorkspaceClick_","bringBlockToFront_","showContextMenu","handleWsStart","ws","setStartWorkspace_","navigation","setState","STATE_WS","fireWorkspaceClick_","clickEvent","Ui","workspaceId","id","fire","handleFlyoutStart","flyout","setStartFlyout_","getWorkspace","handleBlockStart","setStartBlock","handleBubbleStart","bubble","setStartBubble","setFocus","showEditor","autoClose","isEnabled","newBlock","scheduleSnapAndBump","screenCoord","wsCoord","screenToWsCoordinates","wsNode","createWorkspaceNode","selected","unselect","bringToFront","setStartField","field","getRootBlock","setTargetBlock_","isShadow","getParent","hasStartBubble","hasStartBlock","fieldClickable","isClickable","onlyTouchedWorkspace","isDragging","hasStarted","getInsertionMarkers","inProgress","workspaces","Workspace","getAll","i","currentGesture_"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The class representing an in-progress gesture, usually a drag\n * or a tap.\n * @author fenichel@google.com (Rachel Fenichel)\n */\n'use strict';\n\ngoog.provide('Blockly.Gesture');\n\ngoog.require('Blockly.ASTNode');\ngoog.require('Blockly.blockAnimations');\ngoog.require('Blockly.BlockDragger');\ngoog.require('Blockly.BubbleDragger');\ngoog.require('Blockly.constants');\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.Ui');\ngoog.require('Blockly.FlyoutDragger');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.Tooltip');\ngoog.require('Blockly.Touch');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.WorkspaceDragger');\n\n\n/**\n * Note: In this file \"start\" refers to touchstart, mousedown, and pointerstart\n * events.  \"End\" refers to touchend, mouseup, and pointerend events.\n */\n// TODO: Consider touchcancel/pointercancel.\n\n/**\n * Class for one gesture.\n * @param {!Event} e The event that kicked off this gesture.\n * @param {!Blockly.WorkspaceSvg} creatorWorkspace The workspace that created\n *     this gesture and has a reference to it.\n * @constructor\n */\nBlockly.Gesture = function(e, creatorWorkspace) {\n\n  /**\n   * The position of the mouse when the gesture started.  Units are CSS pixels,\n   * with (0, 0) at the top left of the browser window (mouseEvent clientX/Y).\n   * @type {Blockly.utils.Coordinate}\n   * @private\n   */\n  this.mouseDownXY_ = null;\n\n  /**\n   * How far the mouse has moved during this drag, in pixel units.\n   * (0, 0) is at this.mouseDownXY_.\n   * @type {!Blockly.utils.Coordinate}\n   * @private\n   */\n  this.currentDragDeltaXY_ = new Blockly.utils.Coordinate(0, 0);\n\n  /**\n   * The bubble that the gesture started on, or null if it did not start on a\n   * bubble.\n   * @type {Blockly.Bubble}\n   * @private\n   */\n  this.startBubble_ = null;\n\n  /**\n   * The field that the gesture started on, or null if it did not start on a\n   * field.\n   * @type {Blockly.Field}\n   * @private\n   */\n  this.startField_ = null;\n\n  /**\n   * The block that the gesture started on, or null if it did not start on a\n   * block.\n   * @type {Blockly.BlockSvg}\n   * @private\n   */\n  this.startBlock_ = null;\n\n  /**\n   * The block that this gesture targets.  If the gesture started on a\n   * shadow block, this is the first non-shadow parent of the block.  If the\n   * gesture started in the flyout, this is the root block of the block group\n   * that was clicked or dragged.\n   * @type {Blockly.BlockSvg}\n   * @private\n   */\n  this.targetBlock_ = null;\n\n  /**\n   * The workspace that the gesture started on.  There may be multiple\n   * workspaces on a page; this is more accurate than using\n   * Blockly.getMainWorkspace().\n   * @type {Blockly.WorkspaceSvg}\n   * @protected\n   */\n  this.startWorkspace_ = null;\n\n  /**\n   * The workspace that created this gesture.  This workspace keeps a reference\n   * to the gesture, which will need to be cleared at deletion.\n   * This may be different from the start workspace.  For instance, a flyout is\n   * a workspace, but its parent workspace manages gestures for it.\n   * @type {!Blockly.WorkspaceSvg}\n   * @private\n   */\n  this.creatorWorkspace_ = creatorWorkspace;\n\n  /**\n   * Whether the pointer has at any point moved out of the drag radius.\n   * A gesture that exceeds the drag radius is a drag even if it ends exactly\n   * at its start point.\n   * @type {boolean}\n   * @private\n   */\n  this.hasExceededDragRadius_ = false;\n\n  /**\n   * Whether the workspace is currently being dragged.\n   * @type {boolean}\n   * @private\n   */\n  this.isDraggingWorkspace_ = false;\n\n  /**\n   * Whether the block is currently being dragged.\n   * @type {boolean}\n   * @private\n   */\n  this.isDraggingBlock_ = false;\n\n  /**\n   * Whether the bubble is currently being dragged.\n   * @type {boolean}\n   * @private\n   */\n  this.isDraggingBubble_ = false;\n\n  /**\n   * The event that most recently updated this gesture.\n   * @type {!Event}\n   * @private\n   */\n  this.mostRecentEvent_ = e;\n\n  /**\n   * A handle to use to unbind a mouse move listener at the end of a drag.\n   * Opaque data returned from Blockly.bindEventWithChecks_.\n   * @type {?Blockly.EventData}\n   * @protected\n   */\n  this.onMoveWrapper_ = null;\n\n  /**\n   * A handle to use to unbind a mouse up listener at the end of a drag.\n   * Opaque data returned from Blockly.bindEventWithChecks_.\n   * @type {?Blockly.EventData}\n   * @protected\n   */\n  this.onUpWrapper_ = null;\n\n  /**\n   * The object tracking a bubble drag, or null if none is in progress.\n   * @type {Blockly.BubbleDragger}\n   * @private\n   */\n  this.bubbleDragger_ = null;\n\n  /**\n   * The object tracking a block drag, or null if none is in progress.\n   * @type {Blockly.BlockDragger}\n   * @private\n   */\n  this.blockDragger_ = null;\n\n  /**\n   * The object tracking a workspace or flyout workspace drag, or null if none\n   * is in progress.\n   * @type {Blockly.WorkspaceDragger}\n   * @private\n   */\n  this.workspaceDragger_ = null;\n\n  /**\n   * The flyout a gesture started in, if any.\n   * @type {Blockly.Flyout}\n   * @private\n   */\n  this.flyout_ = null;\n\n  /**\n   * Boolean for sanity-checking that some code is only called once.\n   * @type {boolean}\n   * @private\n   */\n  this.calledUpdateIsDragging_ = false;\n\n  /**\n   * Boolean for sanity-checking that some code is only called once.\n   * @type {boolean}\n   * @private\n   */\n  this.hasStarted_ = false;\n\n  /**\n   * Boolean used internally to break a cycle in disposal.\n   * @type {boolean}\n   * @protected\n   */\n  this.isEnding_ = false;\n\n  /**\n   * Boolean used to indicate whether or not to heal the stack after\n   * disconnecting a block.\n   * @type {boolean}\n   * @private\n   */\n  this.healStack_ = !Blockly.DRAG_STACK;\n};\n\n/**\n * Sever all links from this object.\n * @package\n */\nBlockly.Gesture.prototype.dispose = function() {\n  Blockly.Touch.clearTouchIdentifier();\n  Blockly.Tooltip.unblock();\n  // Clear the owner's reference to this gesture.\n  this.creatorWorkspace_.clearGesture();\n\n  if (this.onMoveWrapper_) {\n    Blockly.unbindEvent_(this.onMoveWrapper_);\n  }\n  if (this.onUpWrapper_) {\n    Blockly.unbindEvent_(this.onUpWrapper_);\n  }\n\n  if (this.blockDragger_) {\n    this.blockDragger_.dispose();\n  }\n  if (this.workspaceDragger_) {\n    this.workspaceDragger_.dispose();\n  }\n  if (this.bubbleDragger_) {\n    this.bubbleDragger_.dispose();\n  }\n};\n\n/**\n * Update internal state based on an event.\n * @param {!Event} e The most recent mouse or touch event.\n * @private\n */\nBlockly.Gesture.prototype.updateFromEvent_ = function(e) {\n  var currentXY = new Blockly.utils.Coordinate(e.clientX, e.clientY);\n  var changed = this.updateDragDelta_(currentXY);\n  // Exceeded the drag radius for the first time.\n  if (changed) {\n    this.updateIsDragging_();\n    Blockly.longStop_();\n  }\n  this.mostRecentEvent_ = e;\n};\n\n/**\n * DO MATH to set currentDragDeltaXY_ based on the most recent mouse position.\n * @param {!Blockly.utils.Coordinate} currentXY The most recent mouse/pointer\n *     position, in pixel units, with (0, 0) at the window's top left corner.\n * @return {boolean} True if the drag just exceeded the drag radius for the\n *     first time.\n * @private\n */\nBlockly.Gesture.prototype.updateDragDelta_ = function(currentXY) {\n  this.currentDragDeltaXY_ = Blockly.utils.Coordinate.difference(currentXY,\n      /** @type {!Blockly.utils.Coordinate} */ (this.mouseDownXY_));\n\n  if (!this.hasExceededDragRadius_) {\n    var currentDragDelta = Blockly.utils.Coordinate.magnitude(\n        this.currentDragDeltaXY_);\n\n    // The flyout has a different drag radius from the rest of Blockly.\n    var limitRadius = this.flyout_ ? Blockly.FLYOUT_DRAG_RADIUS :\n        Blockly.DRAG_RADIUS;\n\n    this.hasExceededDragRadius_ = currentDragDelta > limitRadius;\n    return this.hasExceededDragRadius_;\n  }\n  return false;\n};\n\n/**\n * Update this gesture to record whether a block is being dragged from the\n * flyout.\n * This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * If a block should be dragged from the flyout this function creates the new\n * block on the main workspace and updates targetBlock_ and startWorkspace_.\n * @return {boolean} True if a block is being dragged from the flyout.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDraggingFromFlyout_ = function() {\n  if (!this.targetBlock_) {\n    return false;\n  }\n  if (!this.flyout_.isBlockCreatable_(this.targetBlock_)) {\n    return false;\n  }\n  if (!this.flyout_.isScrollable() ||\n      this.flyout_.isDragTowardWorkspace(this.currentDragDeltaXY_)) {\n    this.startWorkspace_ = this.flyout_.targetWorkspace;\n    this.startWorkspace_.updateScreenCalculationsIfScrolled();\n    // Start the event group now, so that the same event group is used for block\n    // creation and block dragging.\n    if (!Blockly.Events.getGroup()) {\n      Blockly.Events.setGroup(true);\n    }\n    // The start block is no longer relevant, because this is a drag.\n    this.startBlock_ = null;\n    this.targetBlock_ = this.flyout_.createBlock(this.targetBlock_);\n    this.targetBlock_.select();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Update this gesture to record whether a bubble is being dragged.\n * This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * If a bubble should be dragged this function creates the necessary\n * BubbleDragger and starts the drag.\n * @return {boolean} True if a bubble is being dragged.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDraggingBubble_ = function() {\n  if (!this.startBubble_) {\n    return false;\n  }\n\n  this.isDraggingBubble_ = true;\n  this.startDraggingBubble_();\n  return true;\n};\n\n/**\n * Update this gesture to record whether a block is being dragged.\n * This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * If a block should be dragged, either from the flyout or in the workspace,\n * this function creates the necessary BlockDragger and starts the drag.\n * @return {boolean} True if a block is being dragged.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDraggingBlock_ = function() {\n  if (!this.targetBlock_) {\n    return false;\n  }\n\n  if (this.flyout_) {\n    this.isDraggingBlock_ = this.updateIsDraggingFromFlyout_();\n  } else if (this.targetBlock_.isMovable()) {\n    this.isDraggingBlock_ = true;\n  }\n\n  if (this.isDraggingBlock_) {\n    this.startDraggingBlock_();\n    return true;\n  }\n  return false;\n};\n\n/**\n * Update this gesture to record whether a workspace is being dragged.\n * This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * If a workspace is being dragged this function creates the necessary\n * WorkspaceDragger or FlyoutDragger and starts the drag.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDraggingWorkspace_ = function() {\n  var wsMovable = this.flyout_ ? this.flyout_.isScrollable() :\n      this.startWorkspace_ && this.startWorkspace_.isDraggable();\n\n  if (!wsMovable) {\n    return;\n  }\n\n  if (this.flyout_) {\n    this.workspaceDragger_ = new Blockly.FlyoutDragger(this.flyout_);\n  } else {\n    this.workspaceDragger_ = new Blockly.WorkspaceDragger(\n        /** @type {!Blockly.WorkspaceSvg} */ (this.startWorkspace_));\n  }\n\n  this.isDraggingWorkspace_ = true;\n  this.workspaceDragger_.startDrag();\n};\n\n/**\n * Update this gesture to record whether anything is being dragged.\n * This function should be called on a mouse/touch move event the first time the\n * drag radius is exceeded.  It should be called no more than once per gesture.\n * @private\n */\nBlockly.Gesture.prototype.updateIsDragging_ = function() {\n  // Sanity check.\n  if (this.calledUpdateIsDragging_) {\n    throw Error('updateIsDragging_ should only be called once per gesture.');\n  }\n  this.calledUpdateIsDragging_ = true;\n\n  // First check if it was a bubble drag.  Bubbles always sit on top of blocks.\n  if (this.updateIsDraggingBubble_()) {\n    return;\n  }\n  // Then check if it was a block drag.\n  if (this.updateIsDraggingBlock_()) {\n    return;\n  }\n  // Then check if it's a workspace drag.\n  this.updateIsDraggingWorkspace_();\n};\n\n/**\n * Create a block dragger and start dragging the selected block.\n * @private\n */\nBlockly.Gesture.prototype.startDraggingBlock_ = function() {\n  this.blockDragger_ = new Blockly.BlockDragger(\n      /** @type {!Blockly.BlockSvg} */ (this.targetBlock_),\n      /** @type {!Blockly.WorkspaceSvg} */ (this.startWorkspace_));\n  this.blockDragger_.startBlockDrag(this.currentDragDeltaXY_, this.healStack_);\n  this.blockDragger_.dragBlock(this.mostRecentEvent_,\n      this.currentDragDeltaXY_);\n};\n\n/**\n * Create a bubble dragger and start dragging the selected bubble.\n * @private\n */\n// TODO (fenichel): Possibly combine this and startDraggingBlock_.\nBlockly.Gesture.prototype.startDraggingBubble_ = function() {\n  this.bubbleDragger_ = new Blockly.BubbleDragger(\n      /** @type {!Blockly.Bubble} */ (this.startBubble_),\n      /** @type {!Blockly.WorkspaceSvg} */ (this.startWorkspace_));\n  this.bubbleDragger_.startBubbleDrag();\n  this.bubbleDragger_.dragBubble(this.mostRecentEvent_,\n      this.currentDragDeltaXY_);\n};\n/**\n * Start a gesture: update the workspace to indicate that a gesture is in\n * progress and bind mousemove and mouseup handlers.\n * @param {!Event} e A mouse down or touch start event.\n * @package\n */\nBlockly.Gesture.prototype.doStart = function(e) {\n  if (Blockly.utils.isTargetInput(e)) {\n    this.cancel();\n    return;\n  }\n  this.hasStarted_ = true;\n\n  Blockly.blockAnimations.disconnectUiStop();\n  this.startWorkspace_.updateScreenCalculationsIfScrolled();\n  if (this.startWorkspace_.isMutator) {\n    // Mutator's coordinate system could be out of date because the bubble was\n    // dragged, the block was moved, the parent workspace zoomed, etc.\n    this.startWorkspace_.resize();\n  }\n\n  // Hide chaff also hides the flyout, so don't do it if the click is in a\n  // flyout.\n  Blockly.hideChaff(!!this.flyout_);\n\n  this.startWorkspace_.markFocused();\n  this.mostRecentEvent_ = e;\n\n  Blockly.Tooltip.block();\n\n  if (this.targetBlock_) {\n    if (!this.targetBlock_.isInFlyout &&\n        e.shiftKey &&\n        this.targetBlock_.workspace.keyboardAccessibilityMode) {\n      this.creatorWorkspace_.getCursor().setCurNode(\n          Blockly.ASTNode.createTopNode(this.targetBlock_));\n    } else {\n      this.targetBlock_.select();\n    }\n  }\n\n  if (Blockly.utils.isRightButton(e)) {\n    this.handleRightClick(e);\n    return;\n  }\n\n  if ((e.type.toLowerCase() == 'touchstart' ||\n      e.type.toLowerCase() == 'pointerdown') &&\n       e.pointerType != 'mouse') {\n    Blockly.longStart(e, this);\n  }\n\n  this.mouseDownXY_ = new Blockly.utils.Coordinate(e.clientX, e.clientY);\n  this.healStack_ = e.altKey || e.ctrlKey || e.metaKey;\n\n  this.bindMouseEvents(e);\n};\n\n/**\n * Bind gesture events.\n * @param {!Event} e A mouse down or touch start event.\n * @package\n */\nBlockly.Gesture.prototype.bindMouseEvents = function(e) {\n  this.onMoveWrapper_ = Blockly.bindEventWithChecks_(\n      document, 'mousemove', null, this.handleMove.bind(this));\n  this.onUpWrapper_ = Blockly.bindEventWithChecks_(\n      document, 'mouseup', null, this.handleUp.bind(this));\n\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n/**\n * Handle a mouse move or touch move event.\n * @param {!Event} e A mouse move or touch move event.\n * @package\n */\nBlockly.Gesture.prototype.handleMove = function(e) {\n  this.updateFromEvent_(e);\n  if (this.isDraggingWorkspace_) {\n    this.workspaceDragger_.drag(this.currentDragDeltaXY_);\n  } else if (this.isDraggingBlock_) {\n    this.blockDragger_.dragBlock(this.mostRecentEvent_,\n        this.currentDragDeltaXY_);\n  } else if (this.isDraggingBubble_) {\n    this.bubbleDragger_.dragBubble(this.mostRecentEvent_,\n        this.currentDragDeltaXY_);\n  }\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n/**\n * Handle a mouse up or touch end event.\n * @param {!Event} e A mouse up or touch end event.\n * @package\n */\nBlockly.Gesture.prototype.handleUp = function(e) {\n  this.updateFromEvent_(e);\n  Blockly.longStop_();\n\n  if (this.isEnding_) {\n    console.log('Trying to end a gesture recursively.');\n    return;\n  }\n  this.isEnding_ = true;\n  // The ordering of these checks is important: drags have higher priority than\n  // clicks.  Fields have higher priority than blocks; blocks have higher\n  // priority than workspaces.\n  // The ordering within drags does not matter, because the three types of\n  // dragging are exclusive.\n  if (this.isDraggingBubble_) {\n    this.bubbleDragger_.endBubbleDrag(e, this.currentDragDeltaXY_);\n  } else if (this.isDraggingBlock_) {\n    this.blockDragger_.endBlockDrag(e, this.currentDragDeltaXY_);\n  } else if (this.isDraggingWorkspace_) {\n    this.workspaceDragger_.endDrag(this.currentDragDeltaXY_);\n  } else if (this.isBubbleClick_()) {\n    // Bubbles are in front of all fields and blocks.\n    this.doBubbleClick_();\n  } else if (this.isFieldClick_()) {\n    this.doFieldClick_();\n  } else if (this.isBlockClick_()) {\n    this.doBlockClick_();\n  } else if (this.isWorkspaceClick_()) {\n    this.doWorkspaceClick_(e);\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  this.dispose();\n};\n\n/**\n * Cancel an in-progress gesture.  If a workspace or block drag is in progress,\n * end the drag at the most recent location.\n * @package\n */\nBlockly.Gesture.prototype.cancel = function() {\n  // Disposing of a block cancels in-progress drags, but dragging to a delete\n  // area disposes of a block and leads to recursive disposal. Break that cycle.\n  if (this.isEnding_) {\n    return;\n  }\n  Blockly.longStop_();\n  if (this.isDraggingBubble_) {\n    this.bubbleDragger_.endBubbleDrag(this.mostRecentEvent_,\n        this.currentDragDeltaXY_);\n  } else if (this.isDraggingBlock_) {\n    this.blockDragger_.endBlockDrag(this.mostRecentEvent_,\n        this.currentDragDeltaXY_);\n  } else if (this.isDraggingWorkspace_) {\n    this.workspaceDragger_.endDrag(this.currentDragDeltaXY_);\n  }\n  this.dispose();\n};\n\n/**\n * Handle a real or faked right-click event by showing a context menu.\n * @param {!Event} e A mouse move or touch move event.\n * @package\n */\nBlockly.Gesture.prototype.handleRightClick = function(e) {\n  if (this.targetBlock_) {\n    this.bringBlockToFront_();\n    Blockly.hideChaff(!!this.flyout_);\n    this.targetBlock_.showContextMenu(e);\n  } else if (this.startBubble_) {\n    this.startBubble_.showContextMenu(e);\n  } else if (this.startWorkspace_ && !this.flyout_) {\n    Blockly.hideChaff();\n    this.startWorkspace_.showContextMenu(e);\n  }\n\n  // TODO: Handle right-click on a bubble.\n  e.preventDefault();\n  e.stopPropagation();\n\n  this.dispose();\n};\n\n/**\n * Handle a mousedown/touchstart event on a workspace.\n * @param {!Event} e A mouse down or touch start event.\n * @param {!Blockly.WorkspaceSvg} ws The workspace the event hit.\n * @package\n */\nBlockly.Gesture.prototype.handleWsStart = function(e, ws) {\n  if (this.hasStarted_) {\n    throw Error('Tried to call gesture.handleWsStart, ' +\n        'but the gesture had already been started.');\n  }\n  this.setStartWorkspace_(ws);\n  this.mostRecentEvent_ = e;\n  this.doStart(e);\n  if (this.startWorkspace_.keyboardAccessibilityMode) {\n    Blockly.navigation.setState(Blockly.navigation.STATE_WS);\n  }\n};\n\n/**\n * Fires a workspace click event.\n * @param {!Blockly.WorkspaceSvg} ws The workspace that a user clicks on.\n * @private\n */\nBlockly.Gesture.prototype.fireWorkspaceClick_ = function(ws) {\n  var clickEvent = new Blockly.Events.Ui(null, 'workspaceClick', null, null);\n  clickEvent.workspaceId = ws.id;\n  Blockly.Events.fire(clickEvent);\n};\n\n/**\n * Handle a mousedown/touchstart event on a flyout.\n * @param {!Event} e A mouse down or touch start event.\n * @param {!Blockly.Flyout} flyout The flyout the event hit.\n * @package\n */\nBlockly.Gesture.prototype.handleFlyoutStart = function(e, flyout) {\n  if (this.hasStarted_) {\n    throw Error('Tried to call gesture.handleFlyoutStart, ' +\n        'but the gesture had already been started.');\n  }\n  this.setStartFlyout_(flyout);\n  this.handleWsStart(e, flyout.getWorkspace());\n};\n\n/**\n * Handle a mousedown/touchstart event on a block.\n * @param {!Event} e A mouse down or touch start event.\n * @param {!Blockly.BlockSvg} block The block the event hit.\n * @package\n */\nBlockly.Gesture.prototype.handleBlockStart = function(e, block) {\n  if (this.hasStarted_) {\n    throw Error('Tried to call gesture.handleBlockStart, ' +\n        'but the gesture had already been started.');\n  }\n  this.setStartBlock(block);\n  this.mostRecentEvent_ = e;\n};\n\n/**\n * Handle a mousedown/touchstart event on a bubble.\n * @param {!Event} e A mouse down or touch start event.\n * @param {!Blockly.Bubble} bubble The bubble the event hit.\n * @package\n */\nBlockly.Gesture.prototype.handleBubbleStart = function(e, bubble) {\n  if (this.hasStarted_) {\n    throw Error('Tried to call gesture.handleBubbleStart, ' +\n        'but the gesture had already been started.');\n  }\n  this.setStartBubble(bubble);\n  this.mostRecentEvent_ = e;\n};\n\n/* Begin functions defining what actions to take to execute clicks on each type\n * of target.  Any developer wanting to add behaviour on clicks should modify\n * only this code. */\n\n/**\n * Execute a bubble click.\n * @private\n */\nBlockly.Gesture.prototype.doBubbleClick_ = function() {\n  // TODO (#1673): Consistent handling of single clicks.\n  this.startBubble_.setFocus && this.startBubble_.setFocus();\n  this.startBubble_.select && this.startBubble_.select();\n};\n\n/**\n * Execute a field click.\n * @private\n */\nBlockly.Gesture.prototype.doFieldClick_ = function() {\n  this.startField_.showEditor(this.mostRecentEvent_);\n  this.bringBlockToFront_();\n};\n\n/**\n * Execute a block click.\n * @private\n */\nBlockly.Gesture.prototype.doBlockClick_ = function() {\n  // Block click in an autoclosing flyout.\n  if (this.flyout_ && this.flyout_.autoClose) {\n    if (this.targetBlock_.isEnabled()) {\n      if (!Blockly.Events.getGroup()) {\n        Blockly.Events.setGroup(true);\n      }\n      var newBlock = this.flyout_.createBlock(this.targetBlock_);\n      newBlock.scheduleSnapAndBump();\n    }\n  } else {\n    // Clicks events are on the start block, even if it was a shadow.\n    Blockly.Events.fire(\n        new Blockly.Events.Ui(this.startBlock_, 'click', undefined, undefined));\n  }\n  this.bringBlockToFront_();\n  Blockly.Events.setGroup(false);\n};\n\n/**\n * Execute a workspace click. Shift clicking puts the workspace in accessibility\n * mode.\n * @param {!Event} e A mouse up or touch end event.\n * @private\n */\nBlockly.Gesture.prototype.doWorkspaceClick_ = function(e) {\n  var ws = this.creatorWorkspace_;\n  if (e.shiftKey && ws.keyboardAccessibilityMode) {\n    var screenCoord = new Blockly.utils.Coordinate(e.clientX, e.clientY);\n    var wsCoord = Blockly.utils.screenToWsCoordinates(ws, screenCoord);\n    var wsNode = Blockly.ASTNode.createWorkspaceNode(ws, wsCoord);\n    ws.getCursor().setCurNode(wsNode);\n  } else if (Blockly.selected) {\n    Blockly.selected.unselect();\n  }\n  this.fireWorkspaceClick_(ws);\n};\n\n/* End functions defining what actions to take to execute clicks on each type\n * of target. */\n\n// TODO (fenichel): Move bubbles to the front.\n/**\n * Move the dragged/clicked block to the front of the workspace so that it is\n * not occluded by other blocks.\n * @private\n */\nBlockly.Gesture.prototype.bringBlockToFront_ = function() {\n  // Blocks in the flyout don't overlap, so skip the work.\n  if (this.targetBlock_ && !this.flyout_) {\n    this.targetBlock_.bringToFront();\n  }\n};\n\n/* Begin functions for populating a gesture at mouse down. */\n\n/**\n * Record the field that a gesture started on.\n * @param {Blockly.Field} field The field the gesture started on.\n * @package\n */\nBlockly.Gesture.prototype.setStartField = function(field) {\n  if (this.hasStarted_) {\n    throw Error('Tried to call gesture.setStartField, ' +\n        'but the gesture had already been started.');\n  }\n  if (!this.startField_) {\n    this.startField_ = field;\n  }\n};\n\n/**\n * Record the bubble that a gesture started on\n * @param {Blockly.Bubble} bubble The bubble the gesture started on.\n * @package\n */\nBlockly.Gesture.prototype.setStartBubble = function(bubble) {\n  if (!this.startBubble_) {\n    this.startBubble_ = bubble;\n  }\n};\n\n/**\n * Record the block that a gesture started on, and set the target block\n * appropriately.\n * @param {Blockly.BlockSvg} block The block the gesture started on.\n * @package\n */\nBlockly.Gesture.prototype.setStartBlock = function(block) {\n  // If the gesture already went through a bubble, don't set the start block.\n  if (!this.startBlock_ && !this.startBubble_) {\n    this.startBlock_ = block;\n    if (block.isInFlyout && block != block.getRootBlock()) {\n      this.setTargetBlock_(block.getRootBlock());\n    } else {\n      this.setTargetBlock_(block);\n    }\n  }\n};\n\n/**\n * Record the block that a gesture targets, meaning the block that will be\n * dragged if this turns into a drag.  If this block is a shadow, that will be\n * its first non-shadow parent.\n * @param {Blockly.BlockSvg} block The block the gesture targets.\n * @private\n */\nBlockly.Gesture.prototype.setTargetBlock_ = function(block) {\n  if (block.isShadow()) {\n    this.setTargetBlock_(block.getParent());\n  } else {\n    this.targetBlock_ = block;\n  }\n};\n\n/**\n * Record the workspace that a gesture started on.\n * @param {Blockly.WorkspaceSvg} ws The workspace the gesture started on.\n * @private\n */\nBlockly.Gesture.prototype.setStartWorkspace_ = function(ws) {\n  if (!this.startWorkspace_) {\n    this.startWorkspace_ = ws;\n  }\n};\n\n/**\n * Record the flyout that a gesture started on.\n * @param {Blockly.Flyout} flyout The flyout the gesture started on.\n * @private\n */\nBlockly.Gesture.prototype.setStartFlyout_ = function(flyout) {\n  if (!this.flyout_) {\n    this.flyout_ = flyout;\n  }\n};\n\n\n/* End functions for populating a gesture at mouse down. */\n\n/* Begin helper functions defining types of clicks.  Any developer wanting\n * to change the definition of a click should modify only this code. */\n\n/**\n * Whether this gesture is a click on a bubble.  This should only be called when\n * ending a gesture (mouse up, touch end).\n * @return {boolean} Whether this gesture was a click on a bubble.\n * @private\n */\nBlockly.Gesture.prototype.isBubbleClick_ = function() {\n  // A bubble click starts on a bubble and never escapes the drag radius.\n  var hasStartBubble = !!this.startBubble_;\n  return hasStartBubble && !this.hasExceededDragRadius_;\n};\n\n/**\n * Whether this gesture is a click on a block.  This should only be called when\n * ending a gesture (mouse up, touch end).\n * @return {boolean} Whether this gesture was a click on a block.\n * @private\n */\nBlockly.Gesture.prototype.isBlockClick_ = function() {\n  // A block click starts on a block, never escapes the drag radius, and is not\n  // a field click.\n  var hasStartBlock = !!this.startBlock_;\n  return hasStartBlock && !this.hasExceededDragRadius_ && !this.isFieldClick_();\n};\n\n/**\n * Whether this gesture is a click on a field.  This should only be called when\n * ending a gesture (mouse up, touch end).\n * @return {boolean} Whether this gesture was a click on a field.\n * @private\n */\nBlockly.Gesture.prototype.isFieldClick_ = function() {\n  var fieldClickable = this.startField_ ?\n      this.startField_.isClickable() : false;\n  return fieldClickable && !this.hasExceededDragRadius_ &&\n      (!this.flyout_ || !this.flyout_.autoClose);\n};\n\n/**\n * Whether this gesture is a click on a workspace.  This should only be called\n * when ending a gesture (mouse up, touch end).\n * @return {boolean} Whether this gesture was a click on a workspace.\n * @private\n */\nBlockly.Gesture.prototype.isWorkspaceClick_ = function() {\n  var onlyTouchedWorkspace = !this.startBlock_ && !this.startBubble_ &&\n      !this.startField_;\n  return onlyTouchedWorkspace && !this.hasExceededDragRadius_;\n};\n\n/* End helper functions defining types of clicks. */\n\n/**\n * Whether this gesture is a drag of either a workspace or block.\n * This function is called externally to block actions that cannot be taken\n * mid-drag (e.g. using the keyboard to delete the selected blocks).\n * @return {boolean} True if this gesture is a drag of a workspace or block.\n * @package\n */\nBlockly.Gesture.prototype.isDragging = function() {\n  return this.isDraggingWorkspace_ || this.isDraggingBlock_ ||\n      this.isDraggingBubble_;\n};\n\n/**\n * Whether this gesture has already been started.  In theory every mouse down\n * has a corresponding mouse up, but in reality it is possible to lose a\n * mouse up, leaving an in-process gesture hanging.\n * @return {boolean} Whether this gesture was a click on a workspace.\n * @package\n */\nBlockly.Gesture.prototype.hasStarted = function() {\n  return this.hasStarted_;\n};\n\n/**\n * Get a list of the insertion markers that currently exist.  Block drags have\n * 0, 1, or 2 insertion markers.\n * @return {!Array.<!Blockly.BlockSvg>} A possibly empty list of insertion\n *     marker blocks.\n * @package\n */\nBlockly.Gesture.prototype.getInsertionMarkers = function() {\n  if (this.blockDragger_) {\n    return this.blockDragger_.getInsertionMarkers();\n  }\n  return [];\n};\n\n/**\n * Is a drag or other gesture currently in progress on any workspace?\n * @return {boolean} True if gesture is occurring.\n */\nBlockly.Gesture.inProgress = function() {\n  var workspaces = Blockly.Workspace.getAll();\n  for (var i = 0, workspace; (workspace = workspaces[i]); i++) {\n    if (workspace.currentGesture_) {\n      return true;\n    }\n  }\n  return false;\n};\n"],"file":"gesture.min.js"}