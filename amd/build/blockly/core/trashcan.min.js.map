{"version":3,"sources":["../../../src/blockly/core/trashcan.js"],"names":["goog","provide","require","requireType","Blockly","Trashcan","workspace","workspace_","contents_","flyout","options","maxTrashcanContents","flyoutWorkspaceOptions","Options","RTL","oneBasedIndex","renderer","rendererOverrides","horizontalLayout","toolboxPosition","TOOLBOX_AT_TOP","TOOLBOX_AT_BOTTOM","HorizontalFlyout","Error","TOOLBOX_AT_RIGHT","TOOLBOX_AT_LEFT","VerticalFlyout","addChangeListener","onDelete_","bind","prototype","WIDTH_","BODY_HEIGHT_","LID_HEIGHT_","MARGIN_BOTTOM_","MARGIN_SIDE_","MARGIN_HOTSPOT_","SPRITE_LEFT_","SPRITE_TOP_","HAS_BLOCKS_LID_ANGLE_","ANIMATION_LENGTH_","ANIMATION_FRAMES_","OPACITY_MIN_","OPACITY_MAX_","MAX_LID_ANGLE_","isOpen","minOpenness_","svgGroup_","svgLid_","lidTask_","lidOpen_","left_","top_","createDom","utils","dom","createSvgElement","clip","rnd","Math","random","substring","body","SPRITE","width","height","setAttributeNS","XLINK_NS","pathToMedia","url","bindEventWithChecks_","click","bindEvent_","mouseOver_","mouseOut_","animateLid_","init","verticalSpacing","insertAfter","getParentSvg","verticalSpacing_","setOpen","dispose","removeNode","clearTimeout","contentsIsOpen","isVisible","emptyContents","length","setMinOpenness_","hide","position","metrics","getMetrics","viewWidth","absoluteLeft","Scrollbar","scrollbarThickness","viewHeight","absoluteTop","setAttribute","getClientRect","trashRect","getBoundingClientRect","top","bottom","left","right","Rect","state","frames","delta","min","max","setLidAngle_","minOpacity","maxOpacity","opacity","style","setTimeout","lidAngle","openAtRight","newMin","close","xml","i","text","Xml","textToDom","show","event","type","Events","BLOCK_DELETE","oldXml","tagName","toLowerCase","cleanedXML","cleanBlockXML_","indexOf","unshift","pop","xmlBlock","cloneNode","node","removeAttribute","nodeName","nextNode","firstChild","nextSibling","parentNode","domToText"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2011 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Object representing a trash can icon.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.Trashcan');\n\ngoog.require('Blockly.Scrollbar');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.Rect');\ngoog.require('Blockly.Xml');\n\ngoog.requireType('Blockly.IDeleteArea');\n\n\n/**\n * Class for a trash can.\n * @param {!Blockly.WorkspaceSvg} workspace The workspace to sit in.\n * @constructor\n * @implements {Blockly.IDeleteArea}\n */\nBlockly.Trashcan = function(workspace) {\n  /**\n   * The workspace the trashcan sits in.\n   * @type {!Blockly.WorkspaceSvg}\n   * @private\n   */\n  this.workspace_ = workspace;\n\n  /**\n   * A list of XML (stored as strings) representing blocks in the trashcan.\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.contents_ = [];\n\n  /**\n   * The trashcan flyout.\n   * @type {Blockly.Flyout}\n   * @package\n   */\n  this.flyout = null;\n\n  if (this.workspace_.options.maxTrashcanContents <= 0) {\n    return;\n  }\n  // Create flyout options.\n  var flyoutWorkspaceOptions = new Blockly.Options(\n      /** @type {!Blockly.BlocklyOptions} */\n      ({\n        'scrollbars': true,\n        'parentWorkspace': this.workspace_,\n        'rtl': this.workspace_.RTL,\n        'oneBasedIndex': this.workspace_.options.oneBasedIndex,\n        'renderer': this.workspace_.options.renderer,\n        'rendererOverrides': this.workspace_.options.rendererOverrides\n      }));\n  // Create vertical or horizontal flyout.\n  if (this.workspace_.horizontalLayout) {\n    flyoutWorkspaceOptions.toolboxPosition =\n        this.workspace_.toolboxPosition == Blockly.TOOLBOX_AT_TOP ?\n        Blockly.TOOLBOX_AT_BOTTOM : Blockly.TOOLBOX_AT_TOP;\n    if (!Blockly.HorizontalFlyout) {\n      throw Error('Missing require for Blockly.HorizontalFlyout');\n    }\n    this.flyout = new Blockly.HorizontalFlyout(flyoutWorkspaceOptions);\n  } else {\n    flyoutWorkspaceOptions.toolboxPosition =\n      this.workspace_.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT ?\n        Blockly.TOOLBOX_AT_LEFT : Blockly.TOOLBOX_AT_RIGHT;\n    if (!Blockly.VerticalFlyout) {\n      throw Error('Missing require for Blockly.VerticalFlyout');\n    }\n    this.flyout = new Blockly.VerticalFlyout(flyoutWorkspaceOptions);\n  }\n  this.workspace_.addChangeListener(this.onDelete_.bind(this));\n};\n\n/**\n * Width of both the trash can and lid images.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.WIDTH_ = 47;\n\n/**\n * Height of the trashcan image (minus lid).\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.BODY_HEIGHT_ = 44;\n\n/**\n * Height of the lid image.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.LID_HEIGHT_ = 16;\n\n/**\n * Distance between trashcan and bottom edge of workspace.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.MARGIN_BOTTOM_ = 20;\n\n/**\n * Distance between trashcan and right edge of workspace.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.MARGIN_SIDE_ = 20;\n\n/**\n * Extent of hotspot on all sides beyond the size of the image.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.MARGIN_HOTSPOT_ = 10;\n\n/**\n * Location of trashcan in sprite image.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.SPRITE_LEFT_ = 0;\n\n/**\n * Location of trashcan in sprite image.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.SPRITE_TOP_ = 32;\n\n/**\n * The openness of the lid when the trashcan contains blocks.\n *    (0.0 = closed, 1.0 = open)\n * @const {number}\n * @private\n */\nBlockly.Trashcan.prototype.HAS_BLOCKS_LID_ANGLE_ = 0.1;\n\n/**\n * The length of the open/close animation in milliseconds.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.ANIMATION_LENGTH_ = 80;\n\n/**\n * The number of frames in the animation.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.ANIMATION_FRAMES_ = 4;\n\n/**\n * The minimum (resting) opacity of the trashcan and lid.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.OPACITY_MIN_ = 0.4;\n\n/**\n * The maximum (hovered) opacity of the trashcan and lid.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.OPACITY_MAX_ = 0.8;\n\n/**\n * The maximum angle the trashcan lid can opens to. At the end of the open\n * animation the lid will be open to this angle.\n * @const {number}\n * @private\n */\nBlockly.Trashcan.MAX_LID_ANGLE_ = 45;\n\n/**\n * Current open/close state of the lid.\n * @type {boolean}\n */\nBlockly.Trashcan.prototype.isOpen = false;\n\n/**\n * The minimum openness of the lid. Used to indicate if the trashcan contains\n *  blocks.\n * @type {number}\n * @private\n */\nBlockly.Trashcan.prototype.minOpenness_ = 0;\n\n/**\n * The SVG group containing the trash can.\n * @type {SVGElement}\n * @private\n */\nBlockly.Trashcan.prototype.svgGroup_ = null;\n\n/**\n * The SVG image element of the trash can lid.\n * @type {SVGElement}\n * @private\n */\nBlockly.Trashcan.prototype.svgLid_ = null;\n\n/**\n * Task ID of opening/closing animation.\n * @type {number}\n * @private\n */\nBlockly.Trashcan.prototype.lidTask_ = 0;\n\n/**\n * Current state of lid opening (0.0 = closed, 1.0 = open).\n * @type {number}\n * @private\n */\nBlockly.Trashcan.prototype.lidOpen_ = 0;\n\n/**\n * Left coordinate of the trash can.\n * @type {number}\n * @private\n */\nBlockly.Trashcan.prototype.left_ = 0;\n\n/**\n * Top coordinate of the trash can.\n * @type {number}\n * @private\n */\nBlockly.Trashcan.prototype.top_ = 0;\n\n/**\n * Create the trash can elements.\n * @return {!SVGElement} The trash can's SVG group.\n */\nBlockly.Trashcan.prototype.createDom = function() {\n  /* Here's the markup that will be generated:\n  <g class=\"blocklyTrash\">\n    <clippath id=\"blocklyTrashBodyClipPath837493\">\n      <rect width=\"47\" height=\"45\" y=\"15\"></rect>\n    </clippath>\n    <image width=\"64\" height=\"92\" y=\"-32\" xlink:href=\"media/sprites.png\"\n        clip-path=\"url(#blocklyTrashBodyClipPath837493)\"></image>\n    <clippath id=\"blocklyTrashLidClipPath837493\">\n      <rect width=\"47\" height=\"15\"></rect>\n    </clippath>\n    <image width=\"84\" height=\"92\" y=\"-32\" xlink:href=\"media/sprites.png\"\n        clip-path=\"url(#blocklyTrashLidClipPath837493)\"></image>\n  </g>\n  */\n  this.svgGroup_ = Blockly.utils.dom.createSvgElement('g',\n      {'class': 'blocklyTrash'}, null);\n  var clip;\n  var rnd = String(Math.random()).substring(2);\n  clip = Blockly.utils.dom.createSvgElement('clipPath',\n      {'id': 'blocklyTrashBodyClipPath' + rnd},\n      this.svgGroup_);\n  Blockly.utils.dom.createSvgElement('rect',\n      {\n        'width': this.WIDTH_,\n        'height': this.BODY_HEIGHT_,\n        'y': this.LID_HEIGHT_\n      },\n      clip);\n  var body = Blockly.utils.dom.createSvgElement('image',\n      {\n        'width': Blockly.SPRITE.width,\n        'x': -this.SPRITE_LEFT_,\n        'height': Blockly.SPRITE.height,\n        'y': -this.SPRITE_TOP_,\n        'clip-path': 'url(#blocklyTrashBodyClipPath' + rnd + ')'\n      },\n      this.svgGroup_);\n  body.setAttributeNS(Blockly.utils.dom.XLINK_NS, 'xlink:href',\n      this.workspace_.options.pathToMedia + Blockly.SPRITE.url);\n\n  clip = Blockly.utils.dom.createSvgElement('clipPath',\n      {'id': 'blocklyTrashLidClipPath' + rnd},\n      this.svgGroup_);\n  Blockly.utils.dom.createSvgElement('rect',\n      {'width': this.WIDTH_, 'height': this.LID_HEIGHT_}, clip);\n  this.svgLid_ = Blockly.utils.dom.createSvgElement('image',\n      {\n        'width': Blockly.SPRITE.width,\n        'x': -this.SPRITE_LEFT_,\n        'height': Blockly.SPRITE.height,\n        'y': -this.SPRITE_TOP_,\n        'clip-path': 'url(#blocklyTrashLidClipPath' + rnd + ')'\n      },\n      this.svgGroup_);\n  this.svgLid_.setAttributeNS(Blockly.utils.dom.XLINK_NS, 'xlink:href',\n      this.workspace_.options.pathToMedia + Blockly.SPRITE.url);\n\n  Blockly.bindEventWithChecks_(this.svgGroup_, 'mouseup', this, this.click);\n  // bindEventWithChecks_ quashes events too aggressively. See:\n  // https://groups.google.com/forum/#!topic/blockly/QF4yB9Wx00s\n  // Bind to body instead of this.svgGroup_ so that we don't get lid jitters\n  Blockly.bindEvent_(body, 'mouseover', this, this.mouseOver_);\n  Blockly.bindEvent_(body, 'mouseout', this, this.mouseOut_);\n  this.animateLid_();\n  return this.svgGroup_;\n};\n\n/**\n * Initialize the trash can.\n * @param {number} verticalSpacing Vertical distance from workspace edge to the\n *    same edge of the trashcan.\n * @return {number} Vertical distance from workspace edge to the opposite\n *    edge of the trashcan.\n */\nBlockly.Trashcan.prototype.init = function(verticalSpacing) {\n  if (this.workspace_.options.maxTrashcanContents > 0) {\n    Blockly.utils.dom.insertAfter(this.flyout.createDom('svg'),\n        this.workspace_.getParentSvg());\n    this.flyout.init(this.workspace_);\n  }\n\n  this.verticalSpacing_ = this.MARGIN_BOTTOM_ + verticalSpacing;\n  this.setOpen(false);\n  return this.verticalSpacing_ + this.BODY_HEIGHT_ + this.LID_HEIGHT_;\n};\n\n/**\n * Dispose of this trash can.\n * Unlink from all DOM elements to prevent memory leaks.\n * @suppress {checkTypes}\n */\nBlockly.Trashcan.prototype.dispose = function() {\n  if (this.svgGroup_) {\n    Blockly.utils.dom.removeNode(this.svgGroup_);\n    this.svgGroup_ = null;\n  }\n  this.svgLid_ = null;\n  this.workspace_ = null;\n  clearTimeout(this.lidTask_);\n};\n\n/**\n * Returns true if the trashcan contents-flyout is currently open.\n * @return {boolean} True if the trashcan contents-flyout is currently open.\n */\nBlockly.Trashcan.prototype.contentsIsOpen = function() {\n  return this.flyout.isVisible();\n};\n\n/**\n * Empties the trashcan's contents. If the contents-flyout is currently open\n * it will be closed.\n */\nBlockly.Trashcan.prototype.emptyContents = function() {\n  if (!this.contents_.length) {\n    return;\n  }\n  this.contents_.length = 0;\n  this.setMinOpenness_(0);\n  if (this.contentsIsOpen()) {\n    this.flyout.hide();\n  }\n};\n\n/**\n * Position the trashcan.\n * It is positioned in the opposite corner to the corner the\n * categories/toolbox starts at.\n */\nBlockly.Trashcan.prototype.position = function() {\n  // Not yet initialized.\n  if (!this.verticalSpacing_) {\n    return;\n  }\n  var metrics = this.workspace_.getMetrics();\n  if (!metrics) {\n    // There are no metrics available (workspace is probably not visible).\n    return;\n  }\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_LEFT ||\n      (this.workspace_.horizontalLayout && !this.workspace_.RTL)) {\n    // Toolbox starts in the left corner.\n    this.left_ = metrics.viewWidth + metrics.absoluteLeft -\n        this.WIDTH_ - this.MARGIN_SIDE_ - Blockly.Scrollbar.scrollbarThickness;\n  } else {\n    // Toolbox starts in the right corner.\n    this.left_ = this.MARGIN_SIDE_ + Blockly.Scrollbar.scrollbarThickness;\n  }\n\n  if (metrics.toolboxPosition == Blockly.TOOLBOX_AT_BOTTOM) {\n    this.top_ = this.verticalSpacing_;\n  } else {\n    this.top_ = metrics.viewHeight + metrics.absoluteTop -\n        (this.BODY_HEIGHT_ + this.LID_HEIGHT_) - this.verticalSpacing_;\n  }\n\n  this.svgGroup_.setAttribute('transform',\n      'translate(' + this.left_ + ',' + this.top_ + ')');\n};\n\n/**\n * Return the deletion rectangle for this trash can.\n * @return {Blockly.utils.Rect} Rectangle in which to delete.\n */\nBlockly.Trashcan.prototype.getClientRect = function() {\n  if (!this.svgGroup_) {\n    return null;\n  }\n\n  var trashRect = this.svgGroup_.getBoundingClientRect();\n  var top = trashRect.top + this.SPRITE_TOP_ - this.MARGIN_HOTSPOT_;\n  var bottom = top + this.LID_HEIGHT_ + this.BODY_HEIGHT_ +\n      2 * this.MARGIN_HOTSPOT_;\n  var left = trashRect.left + this.SPRITE_LEFT_ - this.MARGIN_HOTSPOT_;\n  var right = left + this.WIDTH_ + 2 * this.MARGIN_HOTSPOT_;\n  return new Blockly.utils.Rect(top, bottom, left, right);\n};\n\n/**\n * Flip the lid open or shut.\n * @param {boolean} state True if open.\n * @package\n */\nBlockly.Trashcan.prototype.setOpen = function(state) {\n  if (this.isOpen == state) {\n    return;\n  }\n  clearTimeout(this.lidTask_);\n  this.isOpen = state;\n  this.animateLid_();\n};\n\n/**\n * Rotate the lid open or closed by one step.  Then wait and recurse.\n * @private\n */\nBlockly.Trashcan.prototype.animateLid_ = function() {\n  var frames = Blockly.Trashcan.ANIMATION_FRAMES_;\n\n  var delta = 1 / (frames + 1);\n  this.lidOpen_ += this.isOpen ? delta : -delta;\n  this.lidOpen_ = Math.min(Math.max(this.lidOpen_, this.minOpenness_), 1);\n\n  this.setLidAngle_(this.lidOpen_ * Blockly.Trashcan.MAX_LID_ANGLE_);\n\n  var minOpacity = Blockly.Trashcan.OPACITY_MIN_;\n  var maxOpacity = Blockly.Trashcan.OPACITY_MAX_;\n  // Linear interpolation between min and max.\n  var opacity = minOpacity + this.lidOpen_ * (maxOpacity - minOpacity);\n  this.svgGroup_.style.opacity = opacity;\n\n  if (this.lidOpen_ > this.minOpenness_ && this.lidOpen_ < 1) {\n    this.lidTask_ = setTimeout(this.animateLid_.bind(this),\n        Blockly.Trashcan.ANIMATION_LENGTH_ / frames);\n  }\n};\n\n/**\n * Set the angle of the trashcan's lid.\n * @param {number} lidAngle The angle at which to set the lid.\n * @private\n */\nBlockly.Trashcan.prototype.setLidAngle_ = function(lidAngle) {\n  var openAtRight = this.workspace_.toolboxPosition == Blockly.TOOLBOX_AT_RIGHT ||\n      (this.workspace_.horizontalLayout && this.workspace_.RTL);\n  this.svgLid_.setAttribute('transform', 'rotate(' +\n      (openAtRight ? -lidAngle : lidAngle) + ',' +\n      (openAtRight ? 4 : this.WIDTH_ - 4) + ',' +\n      (this.LID_HEIGHT_ - 2) + ')');\n};\n\n/**\n * Sets the minimum openness of the trashcan lid. If the lid is currently\n * closed, this will update lid's position.\n * @param {number} newMin The new minimum openness of the lid. Should be between\n *     0 and 1.\n * @private\n */\nBlockly.Trashcan.prototype.setMinOpenness_ = function(newMin) {\n  this.minOpenness_ = newMin;\n  if (!this.isOpen) {\n    this.setLidAngle_(newMin * Blockly.Trashcan.MAX_LID_ANGLE_);\n  }\n};\n\n/**\n * Flip the lid shut.\n * Called externally after a drag.\n */\nBlockly.Trashcan.prototype.close = function() {\n  this.setOpen(false);\n};\n\n/**\n * Inspect the contents of the trash.\n */\nBlockly.Trashcan.prototype.click = function() {\n  if (!this.contents_.length) {\n    return;\n  }\n\n  var xml = [];\n  for (var i = 0, text; (text = this.contents_[i]); i++) {\n    xml[i] = Blockly.Xml.textToDom(text);\n  }\n  this.flyout.show(xml);\n};\n\n/**\n * Indicate that the trashcan can be clicked (by opening it) if it has blocks.\n * @private\n */\nBlockly.Trashcan.prototype.mouseOver_ = function() {\n  if (this.contents_.length) {\n    this.setOpen(true);\n  }\n};\n\n/**\n * Close the lid of the trashcan if it was open (Vis. it was indicating it had\n *    blocks).\n * @private\n */\nBlockly.Trashcan.prototype.mouseOut_ = function() {\n  // No need to do a .hasBlocks check here because if it doesn't the trashcan\n  // won't be open in the first place, and setOpen won't run.\n  this.setOpen(false);\n};\n\n/**\n * Handle a BLOCK_DELETE event. Adds deleted blocks oldXml to the content array.\n * @param {!Blockly.Events.Abstract} event Workspace event.\n * @private\n */\nBlockly.Trashcan.prototype.onDelete_ = function(event) {\n  if (this.workspace_.options.maxTrashcanContents <= 0) {\n    return;\n  }\n  if (event.type == Blockly.Events.BLOCK_DELETE &&\n      event.oldXml.tagName.toLowerCase() != 'shadow') {\n    var cleanedXML = this.cleanBlockXML_(event.oldXml);\n    if (this.contents_.indexOf(cleanedXML) != -1) {\n      return;\n    }\n    this.contents_.unshift(cleanedXML);\n    while (this.contents_.length >\n        this.workspace_.options.maxTrashcanContents) {\n      this.contents_.pop();\n    }\n\n    this.setMinOpenness_(this.HAS_BLOCKS_LID_ANGLE_);\n  }\n};\n\n/**\n * Converts XML representing a block into text that can be stored in the\n *    content array.\n * @param {!Element} xml An XML tree defining the block and any\n *    connected child blocks.\n * @return {string} Text representing the XML tree, cleaned of all unnecessary\n * attributes.\n * @private\n */\nBlockly.Trashcan.prototype.cleanBlockXML_ = function(xml) {\n  var xmlBlock = xml.cloneNode(true);\n  var node = xmlBlock;\n  while (node) {\n    // Things like text inside tags are still treated as nodes, but they\n    // don't have attributes (or the removeAttribute function) so we can\n    // skip removing attributes from them.\n    if (node.removeAttribute) {\n      node.removeAttribute('x');\n      node.removeAttribute('y');\n      node.removeAttribute('id');\n      node.removeAttribute('disabled');\n      if (node.nodeName == 'comment') {  // Future proof just in case.\n        node.removeAttribute('h');\n        node.removeAttribute('w');\n        node.removeAttribute('pinned');\n      }\n    }\n\n    // Try to go down the tree\n    var nextNode = node.firstChild || node.nextSibling;\n    // If we can't go down, try to go back up the tree.\n    if (!nextNode) {\n      nextNode = node.parentNode;\n      while (nextNode) {\n        // We are valid again!\n        if (nextNode.nextSibling) {\n          nextNode = nextNode.nextSibling;\n          break;\n        }\n        // Try going up again. If parentNode is null that means we have\n        // reached the top, and we will break out of both loops.\n        nextNode = nextNode.parentNode;\n      }\n    }\n    node = nextNode;\n  }\n  return Blockly.Xml.domToText(xmlBlock);\n};\n"],"file":"trashcan.min.js"}