{"version":3,"sources":["../../../src/blockly/core/field_dropdown.js"],"names":["goog","provide","require","Blockly","FieldDropdown","menuGenerator","opt_validator","opt_config","validateOptions_","menuGenerator_","generatedOptions_","prefixField","suffixField","trimOptions_","selectedOption_","getOptions","superClass_","constructor","call","selectedMenuItem_","menu_","imageElement_","arrow_","svgArrow_","utils","object","inherits","Field","ImageProperties","fromJson","options","prototype","SERIALIZABLE","CHECKMARK_OVERHANG","MAX_MENU_HEIGHT_VH","IMAGE_Y_OFFSET","IMAGE_Y_PADDING","ARROW_CHAR","userAgent","ANDROID","CURSOR","initView","shouldAddBorderRect_","createBorderRect_","clickTarget_","sourceBlock_","getSvgRoot","createTextElement_","dom","createSvgElement","fieldGroup_","getConstants","FIELD_DROPDOWN_SVG_ARROW","createSVGArrow_","createTextArrow_","borderRect_","addClass","FIELD_DROPDOWN_NO_BORDER_RECT_SHADOW","isShadow","textElement_","appendChild","document","createTextNode","RTL","insertBefore","textContent_","FIELD_DROPDOWN_SVG_ARROW_SIZE","setAttributeNS","XLINK_NS","FIELD_DROPDOWN_SVG_ARROW_DATAURI","showEditor_","opt_e","dropdownCreate_","clientX","openingCoords","Coordinate","clientY","render","DropDownDiv","getContentDiv","menuElement","getElement","FIELD_DROPDOWN_COLOURED_DIV","primaryColour","getParent","getColour","borderColour","style","colourTertiary","setColour","showPositionedByField","dropdownDispose_","bind","focus","setHighlighted","applyColour","menu","Menu","setRole","aria","Role","LISTBOX","i","length","content","value","image","Image","src","alt","menuItem","MenuItem","OPTION","setRightToLeft","setCheckable","addChild","setChecked","value_","onAction","handleMenuActionEvent_","dispose","hideIfOwner","onItemSelected_","setValue","getValue","Array","isArray","hasImages","label","replaceMessageReferences","strings","push","shortest","string","shortestStringLength","prefixLength","commonWordPrefix","suffixLength","commonWordSuffix","substring","substr","applyTrim_","newOptions","text","isOptionListDynamic","opt_useCache","doClassValidation_","opt_newValue","isValueValid","option","console","warn","type","name","doValueUpdate_","newValue","setAttribute","fill","colourSecondary","colourPrimary","render_","nodeValue","display","renderSelectedImage_","renderSelectedText_","positionBorderRect_","imageJson","height","width","imageHeight","imageWidth","hasBorder","Math","max","FIELD_DROPDOWN_BORDER_RECT_HEIGHT","xPadding","FIELD_BORDER_RECT_X_PADDING","arrowWidth","positionSVGArrow_","getFastTextWidth","FIELD_TEXT_FONTSIZE","FIELD_TEXT_FONTWEIGHT","FIELD_TEXT_FONTFAMILY","size_","arrowX","imageX","positionTextElement_","getDisplayText_","FIELD_TEXT_HEIGHT","textWidth","x","y","textPadding","FIELD_DROPDOWN_SVG_ARROW_PADDING","svgArrowSize","getText_","TypeError","foundError","tuple","error","onBlocklyAction","action","navigation","ACTION_PREVIOUS","highlightPrevious","ACTION_NEXT","highlightNext","fieldRegistry","register"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Dropdown input field.  Used for editable titles and variables.\n * In the interests of a consistent UI, the toolbox shares some functions and\n * properties with the context menu.\n * @author fraser@google.com (Neil Fraser)\n */\n'use strict';\n\ngoog.provide('Blockly.FieldDropdown');\n\ngoog.require('Blockly.Events');\ngoog.require('Blockly.Events.BlockChange');\ngoog.require('Blockly.Field');\ngoog.require('Blockly.fieldRegistry');\ngoog.require('Blockly.Menu');\ngoog.require('Blockly.MenuItem');\ngoog.require('Blockly.navigation');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.aria');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.dom');\ngoog.require('Blockly.utils.object');\ngoog.require('Blockly.utils.Size');\ngoog.require('Blockly.utils.string');\ngoog.require('Blockly.utils.userAgent');\n\n\n/**\n * Class for an editable dropdown field.\n * @param {(!Array.<!Array>|!Function)} menuGenerator A non-empty array of\n *     options for a dropdown list, or a function which generates these options.\n * @param {Function=} opt_validator A function that is called to validate\n *    changes to the field's value. Takes in a language-neutral dropdown\n *    option & returns a validated language-neutral dropdown option, or null to\n *    abort the change.\n * @param {Object=} opt_config A map of options used to configure the field.\n *    See the [field creation documentation]{@link https://developers.google.com/blockly/guides/create-custom-blocks/fields/built-in-fields/dropdown#creation}\n *    for a list of properties this parameter supports.\n * @extends {Blockly.Field}\n * @constructor\n * @throws {TypeError} If `menuGenerator` options are incorrectly structured.\n */\nBlockly.FieldDropdown = function(menuGenerator, opt_validator, opt_config) {\n  if (typeof menuGenerator != 'function') {\n    Blockly.FieldDropdown.validateOptions_(menuGenerator);\n  }\n\n  /**\n   * An array of options for a dropdown list,\n   * or a function which generates these options.\n   * @type {(!Array.<!Array>|\n   *    !function(this:Blockly.FieldDropdown): !Array.<!Array>)}\n   * @protected\n   */\n  this.menuGenerator_ = menuGenerator;\n\n  /**\n   * A cache of the most recently generated options.\n   * @type {Array.<!Array.<string>>}\n   * @private\n   */\n  this.generatedOptions_ = null;\n\n  /**\n   * The prefix field label, of common words set after options are trimmed.\n   * @type {?string}\n   * @package\n   */\n  this.prefixField = null;\n\n  /**\n   * The suffix field label, of common words set after options are trimmed.\n   * @type {?string}\n   * @package\n   */\n  this.suffixField = null;\n\n  this.trimOptions_();\n\n  /**\n   * The currently selected option. The field is initialized with the\n   * first option selected.\n   * @type {!Object}\n   * @private\n   */\n  this.selectedOption_ = this.getOptions(false)[0];\n\n  // Call parent's constructor.\n  Blockly.FieldDropdown.superClass_.constructor.call(\n      this, this.selectedOption_[1], opt_validator, opt_config);\n\n  /**\n   * A reference to the currently selected menu item.\n   * @type {Blockly.MenuItem}\n   * @private\n   */\n  this.selectedMenuItem_ = null;\n\n  /**\n   * The dropdown menu.\n   * @type {Blockly.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * SVG image element if currently selected option is an image, or null.\n   * @type {SVGImageElement}\n   * @private\n   */\n  this.imageElement_ = null;\n\n  /**\n   * Tspan based arrow element.\n   * @type {SVGTSpanElement}\n   * @private\n   */\n  this.arrow_ = null;\n\n  /**\n   * SVG based arrow element.\n   * @type {SVGElement}\n   * @private\n   */\n  this.svgArrow_ = null;\n};\nBlockly.utils.object.inherits(Blockly.FieldDropdown, Blockly.Field);\n\n/**\n * Dropdown image properties.\n * @typedef {{\n  *            src:string,\n  *            alt:string,\n  *            width:number,\n  *            height:number\n  *          }}\n  */\nBlockly.FieldDropdown.ImageProperties;\n\n/**\n * Construct a FieldDropdown from a JSON arg object.\n * @param {!Object} options A JSON object with options (options).\n * @return {!Blockly.FieldDropdown} The new field instance.\n * @package\n * @nocollapse\n */\nBlockly.FieldDropdown.fromJson = function(options) {\n  return new Blockly.FieldDropdown(options['options'], undefined, options);\n};\n\n/**\n * Serializable fields are saved by the XML renderer, non-serializable fields\n * are not. Editable fields should also be serializable.\n * @type {boolean}\n */\nBlockly.FieldDropdown.prototype.SERIALIZABLE = true;\n\n/**\n * Horizontal distance that a checkmark overhangs the dropdown.\n */\nBlockly.FieldDropdown.CHECKMARK_OVERHANG = 25;\n\n/**\n * Maximum height of the dropdown menu, as a percentage of the viewport height.\n */\nBlockly.FieldDropdown.MAX_MENU_HEIGHT_VH = 0.45;\n\n/**\n * The y offset from the top of the field to the top of the image, if an image\n * is selected.\n * @type {number}\n * @const\n * @private\n */\nBlockly.FieldDropdown.IMAGE_Y_OFFSET = 5;\n\n/**\n * The total vertical padding above and below an image.\n * @type {number}\n * @const\n * @private\n */\nBlockly.FieldDropdown.IMAGE_Y_PADDING =\n    Blockly.FieldDropdown.IMAGE_Y_OFFSET * 2;\n\n/**\n * Android can't (in 2014) display \"▾\", so use \"▼\" instead.\n */\nBlockly.FieldDropdown.ARROW_CHAR =\n    Blockly.utils.userAgent.ANDROID ? '\\u25BC' : '\\u25BE';\n\n/**\n * Mouse cursor style when over the hotspot that initiates the editor.\n */\nBlockly.FieldDropdown.prototype.CURSOR = 'default';\n\n/**\n * Create the block UI for this dropdown.\n * @package\n */\nBlockly.FieldDropdown.prototype.initView = function() {\n  if (this.shouldAddBorderRect_()) {\n    this.createBorderRect_();\n  } else {\n    this.clickTarget_ = this.sourceBlock_.getSvgRoot();\n  }\n  this.createTextElement_();\n\n  this.imageElement_ = /** @type {!SVGImageElement} */\n      (Blockly.utils.dom.createSvgElement('image', {}, this.fieldGroup_));\n\n  if (this.getConstants().FIELD_DROPDOWN_SVG_ARROW) {\n    this.createSVGArrow_();\n  } else {\n    this.createTextArrow_();\n  }\n\n  if (this.borderRect_) {\n    Blockly.utils.dom.addClass(this.borderRect_, 'blocklyDropdownRect');\n  }\n};\n\n/**\n * Whether or not the dropdown should add a border rect.\n * @return {boolean} True if the dropdown field should add a border rect.\n * @protected\n */\nBlockly.FieldDropdown.prototype.shouldAddBorderRect_ = function() {\n  return !this.getConstants().FIELD_DROPDOWN_NO_BORDER_RECT_SHADOW ||\n      (this.getConstants().FIELD_DROPDOWN_NO_BORDER_RECT_SHADOW &&\n          !this.sourceBlock_.isShadow());\n};\n\n/**\n * Create a tspan based arrow.\n * @protected\n */\nBlockly.FieldDropdown.prototype.createTextArrow_ = function() {\n  this.arrow_ = /** @type {!SVGTSpanElement} */\n      (Blockly.utils.dom.createSvgElement('tspan', {}, this.textElement_));\n  this.arrow_.appendChild(document.createTextNode(\n      this.sourceBlock_.RTL ?\n      Blockly.FieldDropdown.ARROW_CHAR + ' ' :\n      ' ' + Blockly.FieldDropdown.ARROW_CHAR));\n  if (this.sourceBlock_.RTL) {\n    this.textElement_.insertBefore(this.arrow_, this.textContent_);\n  } else {\n    this.textElement_.appendChild(this.arrow_);\n  }\n};\n\n/**\n * Create an SVG based arrow.\n * @protected\n */\nBlockly.FieldDropdown.prototype.createSVGArrow_ = function() {\n  this.svgArrow_ = Blockly.utils.dom.createSvgElement('image', {\n    'height': this.getConstants().FIELD_DROPDOWN_SVG_ARROW_SIZE + 'px',\n    'width': this.getConstants().FIELD_DROPDOWN_SVG_ARROW_SIZE + 'px'\n  }, this.fieldGroup_);\n  this.svgArrow_.setAttributeNS(Blockly.utils.dom.XLINK_NS, 'xlink:href',\n      this.getConstants().FIELD_DROPDOWN_SVG_ARROW_DATAURI);\n};\n\n/**\n * Create a dropdown menu under the text.\n * @param {Event=} opt_e Optional mouse event that triggered the field to open,\n *     or undefined if triggered programmatically.\n * @protected\n */\nBlockly.FieldDropdown.prototype.showEditor_ = function(opt_e) {\n  this.menu_ = this.dropdownCreate_();\n  if (opt_e && typeof opt_e.clientX === 'number') {\n    this.menu_.openingCoords =\n        new Blockly.utils.Coordinate(opt_e.clientX, opt_e.clientY);\n  } else {\n    this.menu_.openingCoords = null;\n  }\n  // Element gets created in render.\n  this.menu_.render(Blockly.DropDownDiv.getContentDiv());\n  var menuElement = /** @type {!Element} */ (this.menu_.getElement());\n  Blockly.utils.dom.addClass(menuElement, 'blocklyDropdownMenu');\n\n  if (this.getConstants().FIELD_DROPDOWN_COLOURED_DIV) {\n    var primaryColour = (this.sourceBlock_.isShadow()) ?\n        this.sourceBlock_.getParent().getColour() :\n        this.sourceBlock_.getColour();\n    var borderColour = (this.sourceBlock_.isShadow()) ?\n        this.sourceBlock_.getParent().style.colourTertiary :\n        this.sourceBlock_.style.colourTertiary;\n    Blockly.DropDownDiv.setColour(primaryColour, borderColour);\n  }\n\n  Blockly.DropDownDiv.showPositionedByField(\n      this, this.dropdownDispose_.bind(this));\n\n  // Focusing needs to be handled after the menu is rendered and positioned.\n  // Otherwise it will cause a page scroll to get the misplaced menu in\n  // view. See issue #1329.\n  this.menu_.focus();\n\n  if (this.selectedMenuItem_) {\n    this.menu_.setHighlighted(this.selectedMenuItem_);\n  }\n\n  this.applyColour();\n};\n\n/**\n * Create the dropdown editor.\n * @return {!Blockly.Menu} The newly created dropdown menu.\n * @private\n */\nBlockly.FieldDropdown.prototype.dropdownCreate_ = function() {\n  var menu = new Blockly.Menu();\n  menu.setRole(Blockly.utils.aria.Role.LISTBOX);\n\n  var options = this.getOptions(false);\n  this.selectedMenuItem_ = null;\n  for (var i = 0; i < options.length; i++) {\n    var content = options[i][0]; // Human-readable text or image.\n    var value = options[i][1];   // Language-neutral value.\n    if (typeof content == 'object') {\n      // An image, not text.\n      var image = new Image(content['width'], content['height']);\n      image.src = content['src'];\n      image.alt = content['alt'] || '';\n      content = image;\n    }\n    var menuItem = new Blockly.MenuItem(content, value);\n    menuItem.setRole(Blockly.utils.aria.Role.OPTION);\n    menuItem.setRightToLeft(this.sourceBlock_.RTL);\n    menuItem.setCheckable(true);\n    menu.addChild(menuItem);\n    menuItem.setChecked(value == this.value_);\n    if (value == this.value_) {\n      this.selectedMenuItem_ = menuItem;\n    }\n    menuItem.onAction(this.handleMenuActionEvent_, this);\n  }\n\n  return menu;\n};\n\n/**\n * Disposes of events and dom-references belonging to the dropdown editor.\n * @private\n */\nBlockly.FieldDropdown.prototype.dropdownDispose_ = function() {\n  if (this.menu_) {\n    this.menu_.dispose();\n  }\n  this.menu_ = null;\n  this.selectedMenuItem_ = null;\n  this.applyColour();\n};\n\n/**\n * Handle an action in the dropdown menu.\n * @param {!Blockly.MenuItem} menuItem The MenuItem selected within menu.\n * @private\n */\nBlockly.FieldDropdown.prototype.handleMenuActionEvent_ = function(menuItem) {\n  Blockly.DropDownDiv.hideIfOwner(this, true);\n  this.onItemSelected_(/** @type {!Blockly.Menu} */ (this.menu_), menuItem);\n};\n\n/**\n * Handle the selection of an item in the dropdown menu.\n * @param {!Blockly.Menu} menu The Menu component clicked.\n * @param {!Blockly.MenuItem} menuItem The MenuItem selected within menu.\n * @protected\n */\nBlockly.FieldDropdown.prototype.onItemSelected_ = function(menu, menuItem) {\n  this.setValue(menuItem.getValue());\n};\n\n/**\n * Factor out common words in statically defined options.\n * Create prefix and/or suffix labels.\n * @private\n */\nBlockly.FieldDropdown.prototype.trimOptions_ = function() {\n  var options = this.menuGenerator_;\n  if (!Array.isArray(options)) {\n    return;\n  }\n  var hasImages = false;\n\n  // Localize label text and image alt text.\n  for (var i = 0; i < options.length; i++) {\n    var label = options[i][0];\n    if (typeof label == 'string') {\n      options[i][0] = Blockly.utils.replaceMessageReferences(label);\n    } else {\n      if (label.alt != null) {\n        options[i][0].alt = Blockly.utils.replaceMessageReferences(label.alt);\n      }\n      hasImages = true;\n    }\n  }\n  if (hasImages || options.length < 2) {\n    return;  // Do nothing if too few items or at least one label is an image.\n  }\n  var strings = [];\n  for (var i = 0; i < options.length; i++) {\n    strings.push(options[i][0]);\n  }\n  var shortest = Blockly.utils.string.shortestStringLength(strings);\n  var prefixLength = Blockly.utils.string.commonWordPrefix(strings, shortest);\n  var suffixLength = Blockly.utils.string.commonWordSuffix(strings, shortest);\n  if (!prefixLength && !suffixLength) {\n    return;\n  }\n  if (shortest <= prefixLength + suffixLength) {\n    // One or more strings will entirely vanish if we proceed.  Abort.\n    return;\n  }\n  if (prefixLength) {\n    this.prefixField = strings[0].substring(0, prefixLength - 1);\n  }\n  if (suffixLength) {\n    this.suffixField = strings[0].substr(1 - suffixLength);\n  }\n\n  this.menuGenerator_ = Blockly.FieldDropdown.applyTrim_(options, prefixLength,\n      suffixLength);\n};\n\n/**\n * Use the calculated prefix and suffix lengths to trim all of the options in\n * the given array.\n * @param {!Array.<!Array>} options Array of option tuples:\n *     (human-readable text or image, language-neutral name).\n * @param {number} prefixLength The length of the common prefix.\n * @param {number} suffixLength The length of the common suffix\n * @return {!Array.<!Array>} A new array with all of the option text trimmed.\n */\nBlockly.FieldDropdown.applyTrim_ = function(options,\n    prefixLength, suffixLength) {\n  var newOptions = [];\n  // Remove the prefix and suffix from the options.\n  for (var i = 0; i < options.length; i++) {\n    var text = options[i][0];\n    var value = options[i][1];\n    text = text.substring(prefixLength, text.length - suffixLength);\n    newOptions[i] = [text, value];\n  }\n  return newOptions;\n};\n\n/**\n * @return {boolean} True if the option list is generated by a function.\n *     Otherwise false.\n */\nBlockly.FieldDropdown.prototype.isOptionListDynamic = function() {\n  return typeof this.menuGenerator_ == 'function';\n};\n\n/**\n * Return a list of the options for this dropdown.\n * @param {boolean=} opt_useCache For dynamic options, whether or not to use the\n *     cached options or to re-generate them.\n * @return {!Array.<!Array>} A non-empty array of option tuples:\n *     (human-readable text or image, language-neutral name).\n * @throws {TypeError} If generated options are incorrectly structured.\n */\nBlockly.FieldDropdown.prototype.getOptions = function(opt_useCache) {\n  if (this.isOptionListDynamic()) {\n    if (!this.generatedOptions_ || !opt_useCache) {\n      this.generatedOptions_ = this.menuGenerator_.call(this);\n      Blockly.FieldDropdown.validateOptions_(this.generatedOptions_);\n    }\n    return this.generatedOptions_;\n  }\n  return /** @type {!Array.<!Array.<string>>} */ (this.menuGenerator_);\n};\n\n/**\n * Ensure that the input value is a valid language-neutral option.\n * @param {*=} opt_newValue The input value.\n * @return {?string} A valid language-neutral option, or null if invalid.\n * @protected\n */\nBlockly.FieldDropdown.prototype.doClassValidation_ = function(opt_newValue) {\n  var isValueValid = false;\n  var options = this.getOptions(true);\n  for (var i = 0, option; (option = options[i]); i++) {\n    // Options are tuples of human-readable text and language-neutral values.\n    if (option[1] == opt_newValue) {\n      isValueValid = true;\n      break;\n    }\n  }\n  if (!isValueValid) {\n    if (this.sourceBlock_) {\n      console.warn('Cannot set the dropdown\\'s value to an unavailable option.' +\n        ' Block type: ' + this.sourceBlock_.type + ', Field name: ' + this.name +\n        ', Value: ' + opt_newValue);\n    }\n    return null;\n  }\n  return /** @type {string} */ (opt_newValue);\n};\n\n/**\n * Update the value of this dropdown field.\n * @param {*} newValue The value to be saved. The default validator guarantees\n * that this is one of the valid dropdown options.\n * @protected\n */\nBlockly.FieldDropdown.prototype.doValueUpdate_ = function(newValue) {\n  Blockly.FieldDropdown.superClass_.doValueUpdate_.call(this, newValue);\n  var options = this.getOptions(true);\n  for (var i = 0, option; (option = options[i]); i++) {\n    if (option[1] == this.value_) {\n      this.selectedOption_ = option;\n    }\n  }\n};\n\n/**\n * Updates the dropdown arrow to match the colour/style of the block.\n * @package\n */\nBlockly.FieldDropdown.prototype.applyColour = function() {\n  if (this.borderRect_) {\n    this.borderRect_.setAttribute('stroke',\n        this.sourceBlock_.style.colourTertiary);\n    if (this.menu_) {\n      this.borderRect_.setAttribute('fill',\n          this.sourceBlock_.style.colourTertiary);\n    } else {\n      this.borderRect_.setAttribute('fill', 'transparent');\n    }\n  }\n  // Update arrow's colour.\n  if (this.sourceBlock_ && this.arrow_) {\n    if (this.sourceBlock_.isShadow()) {\n      this.arrow_.style.fill = this.sourceBlock_.style.colourSecondary;\n    } else {\n      this.arrow_.style.fill = this.sourceBlock_.style.colourPrimary;\n    }\n  }\n};\n\n/**\n * Draws the border with the correct width.\n * @protected\n */\nBlockly.FieldDropdown.prototype.render_ = function() {\n  // Hide both elements.\n  this.textContent_.nodeValue = '';\n  this.imageElement_.style.display = 'none';\n\n  // Show correct element.\n  var option = this.selectedOption_ && this.selectedOption_[0];\n  if (option && typeof option == 'object') {\n    this.renderSelectedImage_(\n        /** @type {!Blockly.FieldDropdown.ImageProperties} */ (option));\n  } else {\n    this.renderSelectedText_();\n  }\n\n  this.positionBorderRect_();\n};\n\n/**\n * Renders the selected option, which must be an image.\n * @param {!Blockly.FieldDropdown.ImageProperties} imageJson Selected\n *   option that must be an image.\n * @private\n */\nBlockly.FieldDropdown.prototype.renderSelectedImage_ = function(imageJson) {\n  this.imageElement_.style.display = '';\n  this.imageElement_.setAttributeNS(\n      Blockly.utils.dom.XLINK_NS, 'xlink:href', imageJson.src);\n  this.imageElement_.setAttribute('height', imageJson.height);\n  this.imageElement_.setAttribute('width', imageJson.width);\n\n  var imageHeight = Number(imageJson.height);\n  var imageWidth = Number(imageJson.width);\n\n  // Height and width include the border rect.\n  var hasBorder = !!this.borderRect_;\n  var height = Math.max(\n      hasBorder ? this.getConstants().FIELD_DROPDOWN_BORDER_RECT_HEIGHT : 0,\n      imageHeight + Blockly.FieldDropdown.IMAGE_Y_PADDING);\n  var xPadding = hasBorder ? this.getConstants().FIELD_BORDER_RECT_X_PADDING : 0;\n  var arrowWidth = 0;\n  if (this.svgArrow_) {\n    arrowWidth = this.positionSVGArrow_(imageWidth + xPadding, height / 2 -\n      this.getConstants().FIELD_DROPDOWN_SVG_ARROW_SIZE / 2);\n  } else {\n    arrowWidth = Blockly.utils.dom.getFastTextWidth(\n        /** @type {!SVGTSpanElement} */ (this.arrow_),\n        this.getConstants().FIELD_TEXT_FONTSIZE,\n        this.getConstants().FIELD_TEXT_FONTWEIGHT,\n        this.getConstants().FIELD_TEXT_FONTFAMILY);\n  }\n  this.size_.width = imageWidth + arrowWidth + xPadding * 2;\n  this.size_.height = height;\n\n  var arrowX = 0;\n  if (this.sourceBlock_.RTL) {\n    var imageX = xPadding + arrowWidth;\n    this.imageElement_.setAttribute('x', imageX);\n  } else {\n    arrowX = imageWidth + arrowWidth;\n    this.textElement_.setAttribute('text-anchor', 'end');\n    this.imageElement_.setAttribute('x', xPadding);\n  }\n  this.imageElement_.setAttribute('y', height / 2 - imageHeight / 2);\n\n  this.positionTextElement_(arrowX + xPadding, imageWidth + arrowWidth);\n};\n\n/**\n * Renders the selected option, which must be text.\n * @private\n */\nBlockly.FieldDropdown.prototype.renderSelectedText_ = function() {\n  // Retrieves the selected option to display through getText_.\n  this.textContent_.nodeValue = this.getDisplayText_();\n  Blockly.utils.dom.addClass(/** @type {!Element} */ (this.textElement_),\n      'blocklyDropdownText');\n  this.textElement_.setAttribute('text-anchor', 'start');\n\n  // Height and width include the border rect.\n  var hasBorder = !!this.borderRect_;\n  var height = Math.max(\n      hasBorder ? this.getConstants().FIELD_DROPDOWN_BORDER_RECT_HEIGHT : 0,\n      this.getConstants().FIELD_TEXT_HEIGHT);\n  var textWidth = Blockly.utils.dom.getFastTextWidth(this.textElement_,\n      this.getConstants().FIELD_TEXT_FONTSIZE,\n      this.getConstants().FIELD_TEXT_FONTWEIGHT,\n      this.getConstants().FIELD_TEXT_FONTFAMILY);\n  var xPadding = hasBorder ? this.getConstants().FIELD_BORDER_RECT_X_PADDING : 0;\n  var arrowWidth = 0;\n  if (this.svgArrow_) {\n    arrowWidth = this.positionSVGArrow_(textWidth + xPadding, height / 2 -\n        this.getConstants().FIELD_DROPDOWN_SVG_ARROW_SIZE / 2);\n  }\n  this.size_.width = textWidth + arrowWidth + xPadding * 2;\n  this.size_.height = height;\n\n  this.positionTextElement_(xPadding, textWidth);\n};\n\n/**\n * Position a drop-down arrow at the appropriate location at render-time.\n * @param {number} x X position the arrow is being rendered at, in px.\n * @param {number} y Y position the arrow is being rendered at, in px.\n * @return {number} Amount of space the arrow is taking up, in px.\n * @private\n */\nBlockly.FieldDropdown.prototype.positionSVGArrow_ = function(x, y) {\n  if (!this.svgArrow_) {\n    return 0;\n  }\n  var hasBorder = !!this.borderRect_;\n  var xPadding = hasBorder ? this.getConstants().FIELD_BORDER_RECT_X_PADDING : 0;\n  var textPadding = this.getConstants().FIELD_DROPDOWN_SVG_ARROW_PADDING;\n  var svgArrowSize = this.getConstants().FIELD_DROPDOWN_SVG_ARROW_SIZE;\n  var arrowX = this.sourceBlock_.RTL ? xPadding : x + textPadding;\n  this.svgArrow_.setAttribute('transform',\n      'translate(' + arrowX + ',' + y + ')');\n  return svgArrowSize + textPadding;\n};\n\n/**\n * Use the `getText_` developer hook to override the field's text\n * representation.  Get the selected option text. If the selected option is an\n * image we return the image alt text.\n * @return {?string} Selected option text.\n * @protected\n * @override\n */\nBlockly.FieldDropdown.prototype.getText_ = function() {\n  if (!this.selectedOption_) {\n    return null;\n  }\n  var option = this.selectedOption_[0];\n  if (typeof option == 'object') {\n    return option['alt'];\n  }\n  return option;\n};\n\n/**\n * Validates the data structure to be processed as an options list.\n * @param {?} options The proposed dropdown options.\n * @throws {TypeError} If proposed options are incorrectly structured.\n * @private\n */\nBlockly.FieldDropdown.validateOptions_ = function(options) {\n  if (!Array.isArray(options)) {\n    throw TypeError('FieldDropdown options must be an array.');\n  }\n  if (!options.length) {\n    throw TypeError('FieldDropdown options must not be an empty array.');\n  }\n  var foundError = false;\n  for (var i = 0; i < options.length; ++i) {\n    var tuple = options[i];\n    if (!Array.isArray(tuple)) {\n      foundError = true;\n      console.error(\n          'Invalid option[' + i + ']: Each FieldDropdown option must be an ' +\n          'array. Found: ', tuple);\n    } else if (typeof tuple[1] != 'string') {\n      foundError = true;\n      console.error(\n          'Invalid option[' + i + ']: Each FieldDropdown option id must be ' +\n          'a string. Found ' + tuple[1] + ' in: ', tuple);\n    } else if (tuple[0] &&\n              (typeof tuple[0] != 'string') &&\n              (typeof tuple[0].src != 'string')) {\n      foundError = true;\n      console.error(\n          'Invalid option[' + i + ']: Each FieldDropdown option must have a ' +\n          'string label or image description. Found' + tuple[0] + ' in: ',\n          tuple);\n    }\n  }\n  if (foundError) {\n    throw TypeError('Found invalid FieldDropdown options.');\n  }\n};\n\n/**\n * Handles the given action.\n * This is only triggered when keyboard accessibility mode is enabled.\n * @param {!Blockly.Action} action The action to be handled.\n * @return {boolean} True if the field handled the action, false otherwise.\n * @package\n */\nBlockly.FieldDropdown.prototype.onBlocklyAction = function(action) {\n  if (this.menu_) {\n    if (action === Blockly.navigation.ACTION_PREVIOUS) {\n      this.menu_.highlightPrevious();\n      return true;\n    } else if (action === Blockly.navigation.ACTION_NEXT) {\n      this.menu_.highlightNext();\n      return true;\n    }\n  }\n  return Blockly.FieldDropdown.superClass_.onBlocklyAction.call(this, action);\n};\n\n\nBlockly.fieldRegistry.register('field_dropdown', Blockly.FieldDropdown);\n"],"file":"field_dropdown.min.js"}