'use strict';goog.provide("Blockly.Variables");goog.require("Blockly.Blocks");goog.require("Blockly.Msg");goog.require("Blockly.utils");goog.require("Blockly.utils.xml");goog.require("Blockly.VariableModel");goog.require("Blockly.Xml");Blockly.Variables.NAME_TYPE=Blockly.VARIABLE_CATEGORY_NAME;Blockly.Variables.allUsedVarModels=function(a){for(var b=a.getAllBlocks(!1),c=Object.create(null),d=0,e;d<b.length;d++){e=b[d].getVarModels();if(e){for(var f=0;f<e.length;f++){var g=e[f],h=g.getId();if(h){c[h]=g}}}}var k=[];for(var h in c){k.push(c[h])}return k};Blockly.Variables.allUsedVariables=function(){console.warn("Deprecated call to Blockly.Variables.allUsedVariables. Use Blockly.Variables.allUsedVarModels instead.\nIf this is a major issue please file a bug on GitHub.")};Blockly.Variables.ALL_DEVELOPER_VARS_WARNINGS_BY_BLOCK_TYPE_={};Blockly.Variables.allDeveloperVariables=function(a){for(var b=a.getAllBlocks(!1),c=Object.create(null),d=0,e,f;e=b[d];d++){f=e.getDeveloperVariables;if(!f&&e.getDeveloperVars){f=e.getDeveloperVars;if(!Blockly.Variables.ALL_DEVELOPER_VARS_WARNINGS_BY_BLOCK_TYPE_[e.type]){console.warn("Function getDeveloperVars() deprecated. Use getDeveloperVariables() (block type '"+e.type+"')");Blockly.Variables.ALL_DEVELOPER_VARS_WARNINGS_BY_BLOCK_TYPE_[e.type]=!0}}if(f){for(var g=f(),h=0;h<g.length;h++){c[g[h]]=!0}}}return Object.keys(c)};Blockly.Variables.flyoutCategory=function(a){var b=[],c=document.createElement("button");c.setAttribute("text","%{BKY_NEW_VARIABLE}");c.setAttribute("callbackKey","CREATE_VARIABLE");a.registerButtonCallback("CREATE_VARIABLE",function(a){Blockly.Variables.createVariableButtonHandler(a.getTargetWorkspace())});b.push(c);var d=Blockly.Variables.flyoutCategoryBlocks(a);b=b.concat(d);return b};Blockly.Variables.flyoutCategoryBlocks=function(a){var b=a.getVariablesOfType(""),c=[];if(0<b.length){var d=b[b.length-1];if(Blockly.Blocks.variables_set){var e=Blockly.utils.xml.createElement("block");e.setAttribute("type","variables_set");e.setAttribute("gap",Blockly.Blocks.math_change?8:24);e.appendChild(Blockly.Variables.generateVariableFieldDom(d));c.push(e)}if(Blockly.Blocks.math_change){var e=Blockly.utils.xml.createElement("block");e.setAttribute("type","math_change");e.setAttribute("gap",Blockly.Blocks.variables_get?20:8);e.appendChild(Blockly.Variables.generateVariableFieldDom(d));var f=Blockly.Xml.textToDom("<value name=\"DELTA\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value>");e.appendChild(f);c.push(e)}if(Blockly.Blocks.variables_get){b.sort(Blockly.VariableModel.compareByName);for(var g=0,h,e;h=b[g];g++){e=Blockly.utils.xml.createElement("block");e.setAttribute("type","variables_get");e.setAttribute("gap",8);e.appendChild(Blockly.Variables.generateVariableFieldDom(h));c.push(e)}}}return c};Blockly.Variables.VAR_LETTER_OPTIONS="ijkmnopqrstuvwxyzabcdefgh";Blockly.Variables.generateUniqueName=function(a){return Blockly.Variables.generateUniqueNameFromOptions(Blockly.Variables.VAR_LETTER_OPTIONS.charAt(0),a.getAllVariableNames())};Blockly.Variables.generateUniqueNameFromOptions=function(a,b){if(!b.length){return a}var c=Blockly.Variables.VAR_LETTER_OPTIONS,d="",e=c.indexOf(a),f=a;while(!0){for(var g=!1,h=0;h<b.length;h++){if(b[h].toLowerCase()==f){g=!0;break}}if(!g){return f}e++;if(e==c.length){e=0;d=+d+1}f=c.charAt(e)+d}};Blockly.Variables.createVariableButtonHandler=function(a,b,c){var d=c||"",e=function(c){Blockly.Variables.promptName(Blockly.Msg.NEW_VARIABLE_TITLE,c,function(c){if(c){var f=Blockly.Variables.nameUsedWithAnyType(c,a);if(f){if(f.type==d){var g=Blockly.Msg.VARIABLE_ALREADY_EXISTS.replace("%1",f.name)}else{var g=Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE;g=g.replace("%1",f.name).replace("%2",f.type)}Blockly.alert(g,function(){e(c)})}else{a.createVariable(c,d);if(b){b(c)}}}else{if(b){b(null)}}})};e("")};Blockly.Variables.createVariable=Blockly.Variables.createVariableButtonHandler;Blockly.Variables.renameVariable=function(a,b,c){var d=function(e){var f=Blockly.Msg.RENAME_VARIABLE_TITLE.replace("%1",b.name);Blockly.Variables.promptName(f,e,function(e){if(e){var f=Blockly.Variables.nameUsedWithOtherType_(e,b.type,a);if(f){var g=Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE.replace("%1",f.name).replace("%2",f.type);Blockly.alert(g,function(){d(e)})}else{a.renameVariableById(b.getId(),e);if(c){c(e)}}}else{if(c){c(null)}}})};d("")};Blockly.Variables.promptName=function(a,b,c){Blockly.prompt(a,b,function(a){if(a){a=a.replace(/[\s\xa0]+/g," ").trim();if(a==Blockly.Msg.RENAME_VARIABLE||a==Blockly.Msg.NEW_VARIABLE){a=null}}c(a)})};Blockly.Variables.nameUsedWithOtherType_=function(a,b,c){var d=c.getVariableMap().getAllVariables();a=a.toLowerCase();for(var e=0,f;f=d[e];e++){if(f.name.toLowerCase()==a&&f.type!=b){return f}}return null};Blockly.Variables.nameUsedWithAnyType=function(a,b){var c=b.getVariableMap().getAllVariables();a=a.toLowerCase();for(var d=0,e;e=c[d];d++){if(e.name.toLowerCase()==a){return e}}return null};Blockly.Variables.generateVariableFieldDom=function(a){var b=Blockly.utils.xml.createElement("field");b.setAttribute("name","VAR");b.setAttribute("id",a.getId());b.setAttribute("variabletype",a.type);var c=Blockly.utils.xml.createTextNode(a.name);b.appendChild(c);return b};Blockly.Variables.getOrCreateVariablePackage=function(a,b,c,d){var e=Blockly.Variables.getVariable(a,b,c,d);if(!e){e=Blockly.Variables.createVariable_(a,b,c,d)}return e};Blockly.Variables.getVariable=function(a,b,c,d){var e=a.getPotentialVariableMap(),f=null;if(b){f=a.getVariableById(b);if(!f&&e){f=e.getVariableById(b)}if(f){return f}}if(c){if(d==void 0){throw Error("Tried to look up a variable by name without a type")}f=a.getVariable(c,d);if(!f&&e){f=e.getVariable(c,d)}}return f};Blockly.Variables.createVariable_=function(a,b,c,d){var e=a.getPotentialVariableMap();if(!c){var f=a.isFlyout?a.targetWorkspace:a;c=Blockly.Variables.generateUniqueName(f)}var g=null;if(e){g=e.createVariable(c,d,b)}else{g=a.createVariable(c,d,b)}return g};Blockly.Variables.getAddedVariables=function(a,b){var c=a.getAllVariables(),d=[];if(b.length!=c.length){for(var e=0,f;e<c.length;e++){f=c[e];if(-1==b.indexOf(f)){d.push(f)}}}return d};
//# sourceMappingURL=variables.min.js.map
