'use strict';goog.provide("Blockly.ConnectionDB");goog.require("Blockly.RenderedConnection");Blockly.ConnectionDB=function(){this.connections_=[]};Blockly.ConnectionDB.prototype.addConnection=function(a,b){var c=this.calculateIndexForYPos_(b);this.connections_.splice(c,0,a)};Blockly.ConnectionDB.prototype.findIndexOfConnection_=function(a,b){if(!this.connections_.length){return-1}var c=this.calculateIndexForYPos_(b);if(c>=this.connections_.length){return-1}b=a.y;var d=c,e=c;while(0<=d&&this.connections_[d].y==b){if(this.connections_[d]==a){return d}d--}while(e<this.connections_.length&&this.connections_[e].y==b){if(this.connections_[e]==a){return e}e++}return-1};Blockly.ConnectionDB.prototype.calculateIndexForYPos_=function(a){if(!this.connections_.length){return 0}var b=0,c=this.connections_.length;while(b<c){var d=Math.floor((b+c)/2);if(this.connections_[d].y<a){b=d+1}else if(this.connections_[d].y>a){c=d}else{b=d;break}}return b};Blockly.ConnectionDB.prototype.removeConnection=function(a,b){var c=this.findIndexOfConnection_(a,b);if(-1==c){throw Error("Unable to find connection in connectionDB.")}this.connections_.splice(c,1)};Blockly.ConnectionDB.prototype.getNeighbours=function(a,b){var d=this.connections_,e=a.x,f=a.y,g=0,h=d.length-2,i=h;while(g<i){if(d[i].y<f){g=i}else{h=i}i=Math.floor((g+h)/2)}var j=[];function c(a){var c=e-d[a].x,g=f-d[a].y,h=Math.sqrt(c*c+g*g);if(h<=b){j.push(d[a])}return g<b}g=i;h=i;if(d.length){while(0<=g&&c(g)){g--}do{h++}while(h<d.length&&c(h))}return j};Blockly.ConnectionDB.prototype.isInYRange_=function(a,b,c){return Math.abs(this.connections_[a].y-b)<=c};Blockly.ConnectionDB.prototype.searchForClosest=function(a,b,c){if(!this.connections_.length){return{connection:null,radius:b}}var d=a.y,e=a.x;a.x=e+c.x;a.y=d+c.y;var f=this.calculateIndexForYPos_(a.y),g=null,h=b,i,j=f-1;while(0<=j&&this.isInYRange_(j,a.y,b)){i=this.connections_[j];if(a.isConnectionAllowed(i,h)){g=i;h=i.distanceFrom(a)}j--}var k=f;while(k<this.connections_.length&&this.isInYRange_(k,a.y,b)){i=this.connections_[k];if(a.isConnectionAllowed(i,h)){g=i;h=i.distanceFrom(a)}k++}a.x=e;a.y=d;return{connection:g,radius:h}};Blockly.ConnectionDB.init=function(){var a=[];a[Blockly.INPUT_VALUE]=new Blockly.ConnectionDB;a[Blockly.OUTPUT_VALUE]=new Blockly.ConnectionDB;a[Blockly.NEXT_STATEMENT]=new Blockly.ConnectionDB;a[Blockly.PREVIOUS_STATEMENT]=new Blockly.ConnectionDB;return a};
//# sourceMappingURL=connection_db.min.js.map
