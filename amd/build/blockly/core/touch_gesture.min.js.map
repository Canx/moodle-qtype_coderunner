{"version":3,"sources":["../../../src/blockly/core/touch_gesture.js"],"names":["goog","provide","require","Blockly","TouchGesture","e","creatorWorkspace","superClass_","constructor","call","isMultiTouch_","cachedPoints_","Object","create","previousScale_","startDistance_","onStartWrapper_","isPinchZoomEnabled_","utils","object","inherits","Gesture","ZOOM_IN_MULTIPLIER","ZOOM_OUT_MULTIPLIER","prototype","doStart","startWorkspace_","options","zoomOptions","pinch","isEnding_","Touch","isTouchEvent","handleTouchStart","bindMouseEvents","bindEventWithChecks_","document","handleStart","bind","onMoveWrapper_","handleMove","onUpWrapper_","handleUp","preventDefault","stopPropagation","isDragging","isMultiTouch","longStop_","shouldHandleEvent","handleTouchMove","handleTouchEnd","dispose","unbindEvent_","pointerId","getTouchIdentifierFromEvent","getTouchPoint","pointers","keys","length","point0","point1","Coordinate","distance","handlePinch_","moveDistance","scale","gestureScale","delta","workspace","position","mouseToSvg","getParentSvg","getInverseScreenCTM","zoom","x","y","pageX","changedTouches","pageY"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The class extends Blockly.Gesture to support pinch to zoom\n * for both pointer and touch events.\n * @author samelh@microsoft.com (Sam El-Husseini)\n */\n'use strict';\n\ngoog.provide('Blockly.TouchGesture');\n\ngoog.require('Blockly.Gesture');\ngoog.require('Blockly.utils');\ngoog.require('Blockly.utils.Coordinate');\ngoog.require('Blockly.utils.object');\n\n\n/*\n * Note: In this file \"start\" refers to touchstart, mousedown, and pointerstart\n * events.  \"End\" refers to touchend, mouseup, and pointerend events.\n */\n\n/**\n * Class for one gesture.\n * @param {!Event} e The event that kicked off this gesture.\n * @param {!Blockly.WorkspaceSvg} creatorWorkspace The workspace that created\n *     this gesture and has a reference to it.\n * @extends {Blockly.Gesture}\n * @constructor\n */\nBlockly.TouchGesture = function(e, creatorWorkspace) {\n  Blockly.TouchGesture.superClass_.constructor.call(this, e, creatorWorkspace);\n\n  /**\n   * Boolean for whether or not this gesture is a multi-touch gesture.\n   * @type {boolean}\n   * @private\n   */\n  this.isMultiTouch_ = false;\n\n  /**\n   * A map of cached points used for tracking multi-touch gestures.\n   * @type {!Object<number|string, Blockly.utils.Coordinate>}\n   * @private\n   */\n  this.cachedPoints_ = Object.create(null);\n\n  /**\n   * This is the ratio between the starting distance between the touch points\n   * and the most recent distance between the touch points.\n   * Scales between 0 and 1 mean the most recent zoom was a zoom out.\n   * Scales above 1.0 mean the most recent zoom was a zoom in.\n   * @type {number}\n   * @private\n   */\n  this.previousScale_ = 0;\n\n  /**\n   * The starting distance between two touch points.\n   * @type {number}\n   * @private\n   */\n  this.startDistance_ = 0;\n\n  /**\n   * A handle to use to unbind the second touch start or pointer down listener\n   * at the end of a drag.\n   * Opaque data returned from Blockly.bindEventWithChecks_.\n   * @type {?Blockly.EventData}\n   * @private\n   */\n  this.onStartWrapper_ = null;\n\n  /**\n   * Boolean for whether or not the workspace supports pinch-zoom.\n   * @type {?boolean}\n   * @private\n   */\n  this.isPinchZoomEnabled_ = null;\n};\nBlockly.utils.object.inherits(Blockly.TouchGesture, Blockly.Gesture);\n\n/**\n * A multiplier used to convert the gesture scale to a zoom in delta.\n * @const\n */\nBlockly.TouchGesture.ZOOM_IN_MULTIPLIER = 5;\n\n/**\n * A multiplier used to convert the gesture scale to a zoom out delta.\n * @const\n */\nBlockly.TouchGesture.ZOOM_OUT_MULTIPLIER = 6;\n\n/**\n * Start a gesture: update the workspace to indicate that a gesture is in\n * progress and bind mousemove and mouseup handlers.\n * @param {!Event} e A mouse down, touch start or pointer down event.\n * @package\n */\nBlockly.TouchGesture.prototype.doStart = function(e) {\n  this.isPinchZoomEnabled_ = this.startWorkspace_.options.zoomOptions &&\n      this.startWorkspace_.options.zoomOptions.pinch;\n  Blockly.TouchGesture.superClass_.doStart.call(this, e);\n  if (!this.isEnding_ && Blockly.Touch.isTouchEvent(e)) {\n    this.handleTouchStart(e);\n  }\n};\n\n/**\n * Bind gesture events.\n * Overriding the gesture definition of this function, binding the same\n * functions for onMoveWrapper_ and onUpWrapper_ but passing\n * opt_noCaptureIdentifier.\n * In addition, binding a second mouse down event to detect multi-touch events.\n * @param {!Event} e A mouse down or touch start event.\n * @package\n */\nBlockly.TouchGesture.prototype.bindMouseEvents = function(e) {\n  this.onStartWrapper_ = Blockly.bindEventWithChecks_(\n      document, 'mousedown', null, this.handleStart.bind(this),\n      /* opt_noCaptureIdentifier */ true);\n  this.onMoveWrapper_ = Blockly.bindEventWithChecks_(\n      document, 'mousemove', null, this.handleMove.bind(this),\n      /* opt_noCaptureIdentifier */ true);\n  this.onUpWrapper_ = Blockly.bindEventWithChecks_(\n      document, 'mouseup', null, this.handleUp.bind(this),\n      /* opt_noCaptureIdentifier */ true);\n\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n/**\n * Handle a mouse down, touch start, or pointer down event.\n * @param {!Event} e A mouse down, touch start, or pointer down event.\n * @package\n */\nBlockly.TouchGesture.prototype.handleStart = function(e) {\n  if (this.isDragging()) {\n    // A drag has already started, so this can no longer be a pinch-zoom.\n    return;\n  }\n  if (Blockly.Touch.isTouchEvent(e)) {\n    this.handleTouchStart(e);\n\n    if (this.isMultiTouch()) {\n      Blockly.longStop_();\n    }\n  }\n};\n\n/**\n * Handle a mouse move, touch move, or pointer move event.\n * @param {!Event} e A mouse move, touch move, or pointer move event.\n * @package\n */\nBlockly.TouchGesture.prototype.handleMove = function(e) {\n  if (this.isDragging()) {\n    // We are in the middle of a drag, only handle the relevant events\n    if (Blockly.Touch.shouldHandleEvent(e)) {\n      Blockly.TouchGesture.superClass_.handleMove.call(this, e);\n    }\n    return;\n  }\n  if (this.isMultiTouch()) {\n    if (Blockly.Touch.isTouchEvent(e)) {\n      this.handleTouchMove(e);\n    }\n    Blockly.longStop_();\n  } else {\n    Blockly.TouchGesture.superClass_.handleMove.call(this, e);\n  }\n};\n\n/**\n * Handle a mouse up, touch end, or pointer up event.\n * @param {!Event} e A mouse up, touch end, or pointer up event.\n * @package\n */\nBlockly.TouchGesture.prototype.handleUp = function(e) {\n  if (Blockly.Touch.isTouchEvent(e) && !this.isDragging()) {\n    this.handleTouchEnd(e);\n  }\n  if (!this.isMultiTouch() || this.isDragging()) {\n    if (!Blockly.Touch.shouldHandleEvent(e)) {\n      return;\n    }\n    Blockly.TouchGesture.superClass_.handleUp.call(this, e);\n  } else {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.dispose();\n  }\n};\n\n/**\n * Whether this gesture is part of a multi-touch gesture.\n * @return {boolean} Whether this gesture is part of a multi-touch gesture.\n * @package\n */\nBlockly.TouchGesture.prototype.isMultiTouch = function() {\n  return this.isMultiTouch_;\n};\n\n/**\n * Sever all links from this object.\n * @package\n */\nBlockly.TouchGesture.prototype.dispose = function() {\n  Blockly.TouchGesture.superClass_.dispose.call(this);\n\n  if (this.onStartWrapper_) {\n    Blockly.unbindEvent_(this.onStartWrapper_);\n  }\n};\n\n/**\n * Handle a touch start or pointer down event and keep track of current\n * pointers.\n * @param {!Event} e A touch start, or pointer down event.\n * @package\n */\nBlockly.TouchGesture.prototype.handleTouchStart = function(e) {\n  var pointerId = Blockly.Touch.getTouchIdentifierFromEvent(e);\n  // store the pointerId in the current list of pointers\n  this.cachedPoints_[pointerId] = this.getTouchPoint(e);\n  var pointers = Object.keys(this.cachedPoints_);\n  // If two pointers are down, store info\n  if (pointers.length == 2) {\n    var point0 = /** @type {!Blockly.utils.Coordinate} */ (\n      this.cachedPoints_[pointers[0]]);\n    var point1 = /** @type {!Blockly.utils.Coordinate} */ (\n      this.cachedPoints_[pointers[1]]);\n    this.startDistance_ = Blockly.utils.Coordinate.distance(point0, point1);\n    this.isMultiTouch_ = true;\n    e.preventDefault();\n  }\n};\n\n/**\n * Handle a touch move or pointer move event and zoom in/out if two pointers\n * are on the screen.\n * @param {!Event} e A touch move, or pointer move event.\n * @package\n */\nBlockly.TouchGesture.prototype.handleTouchMove = function(e) {\n  var pointerId = Blockly.Touch.getTouchIdentifierFromEvent(e);\n  // Update the cache\n  this.cachedPoints_[pointerId] = this.getTouchPoint(e);\n\n  var pointers = Object.keys(this.cachedPoints_);\n  if (this.isPinchZoomEnabled_ && pointers.length === 2) {\n    this.handlePinch_(e);\n  } else {\n    Blockly.TouchGesture.superClass_.handleMove.call(this, e);\n  }\n};\n\n/**\n* Handle pinch zoom gesture.\n* @param {!Event} e A touch move, or pointer move event.\n* @private\n*/\nBlockly.TouchGesture.prototype.handlePinch_ = function(e) {\n  var pointers = Object.keys(this.cachedPoints_);\n  // Calculate the distance between the two pointers\n  var point0 = /** @type {!Blockly.utils.Coordinate} */ (\n    this.cachedPoints_[pointers[0]]);\n  var point1 = /** @type {!Blockly.utils.Coordinate} */ (\n    this.cachedPoints_[pointers[1]]);\n  var moveDistance = Blockly.utils.Coordinate.distance(point0, point1);\n  var scale = moveDistance / this.startDistance_;\n\n  if (this.previousScale_ > 0 && this.previousScale_ < Infinity) {\n    var gestureScale = scale - this.previousScale_;\n    var delta = gestureScale > 0 ?\n        gestureScale * Blockly.TouchGesture.ZOOM_IN_MULTIPLIER :\n        gestureScale * Blockly.TouchGesture.ZOOM_OUT_MULTIPLIER;\n    var workspace = this.startWorkspace_;\n    var position = Blockly.utils.mouseToSvg(\n        e, workspace.getParentSvg(), workspace.getInverseScreenCTM());\n    workspace.zoom(position.x, position.y, delta);\n  }\n  this.previousScale_ = scale;\n  e.preventDefault();\n};\n\n\n/**\n * Handle a touch end or pointer end event and end the gesture.\n * @param {!Event} e A touch end, or pointer end event.\n * @package\n */\nBlockly.TouchGesture.prototype.handleTouchEnd = function(e) {\n  var pointerId = Blockly.Touch.getTouchIdentifierFromEvent(e);\n  if (this.cachedPoints_[pointerId]) {\n    delete this.cachedPoints_[pointerId];\n  }\n  if (Object.keys(this.cachedPoints_).length < 2) {\n    this.cachedPoints_ = Object.create(null);\n    this.previousScale_ = 0;\n  }\n};\n\n/**\n * Helper function returning the current touch point coordinate.\n * @param {!Event} e A touch or pointer event.\n * @return {Blockly.utils.Coordinate} The current touch point coordinate\n * @package\n */\nBlockly.TouchGesture.prototype.getTouchPoint = function(e) {\n  if (!this.startWorkspace_) {\n    return null;\n  }\n  return new Blockly.utils.Coordinate(\n      (e.pageX ? e.pageX : e.changedTouches[0].pageX),\n      (e.pageY ? e.pageY : e.changedTouches[0].pageY)\n  );\n};\n"],"file":"touch_gesture.min.js"}