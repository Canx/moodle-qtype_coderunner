define ("qtype_coderunner/ui_blockly",["jquery","require","qtype_coderunner/blockly/browser"],function(a,b,c){function d(a,d,e,f){var g,h,i,j,k,k=this,j=f.locale;i=document.getElementById(a);this.textArea=i;this.blocklyDiv=document.createElement("div");this.blocklyDiv.id="blockly_"+a;this.blocklyDiv.class="coderunner_blockly";this.blocklyDiv.tabindex=1;this.blocklyDiv.style.height=e+"px";this.blocklyDiv.style.width=d+"px";i.parentNode.insertBefore(this.blocklyDiv,i);h=new XMLHttpRequest;h.overrideMimeType("text/xml");this.fail=!1;h.onload=function(){try{b(["./blockly/msg/"+j],function(a){if(h.readyState===h.DONE&&200===h.status){c.setLocale(a);var b=c.Xml.textToDom(h.responseText);k.workspace=c.inject(k.blocklyDiv,{toolbox:b})}if(""!=i.value){var d=c.Xml.textToDom(i.value);c.Xml.domToWorkspace(d,k.workspace)}})}catch(a){k.fail=!0;console.log(a)}};g=window.location.protocol+"//"+window.location.host;g+="/question/type/coderunner/amd/src/blockly/toolbox.xml";h.open("GET",g,!0);h.send()}d.prototype.getElement=function(){return this.blocklyDiv};d.prototype.failed=function(){return this.fail};d.prototype.failMessage=function(){};d.prototype.sync=function(){var a=c.Xml.workspaceToDom(this.workspace),b=c.Python.workspaceToCode(this.workspace),d=c.Xml.textToDom("<code>"+b+"</code>");a.appendChild(d);this.textArea.value=new XMLSerializer().serializeToString(a)};d.prototype.destroy=function(){if(this.workspace){this.workspace.dispose()}if(this.blocklyDiv){this.blocklyDiv.parentNode.removeChild(this.blocklyDiv);this.blocklyDiv=null}};d.prototype.resize=function(a,b){this.blocklyDiv.style.height=b+"px";this.blocklyDiv.style.width=a+"px";if(this.workspace){c.svgResize(this.workspace)}};d.prototype.hasFocus=function(){};return{Constructor:d}});
//# sourceMappingURL=ui_blockly.min.js.map
